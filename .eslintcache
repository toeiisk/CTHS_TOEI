[{"D:\\CTHS_TOEI\\src\\index.js":"1","D:\\CTHS_TOEI\\src\\reportWebVitals.js":"2","D:\\CTHS_TOEI\\src\\App.js":"3","D:\\CTHS_TOEI\\src\\routes.js":"4","D:\\CTHS_TOEI\\src\\components\\GlobalStyles.js":"5","D:\\CTHS_TOEI\\src\\pages\\Register.js":"6","D:\\CTHS_TOEI\\src\\pages\\Homepage.js":"7","D:\\CTHS_TOEI\\src\\pages\\Report.js":"8","D:\\CTHS_TOEI\\src\\pages\\Patients\\Patients.js":"9","D:\\CTHS_TOEI\\src\\pages\\Patients\\Create.js":"10","D:\\CTHS_TOEI\\src\\pages\\Patients\\Detail.js":"11","D:\\CTHS_TOEI\\src\\pages\\Admins\\User.js":"12","D:\\CTHS_TOEI\\src\\pages\\Admins\\Creat.js":"13","D:\\CTHS_TOEI\\src\\pages\\Admins\\Detail.js":"14","D:\\CTHS_TOEI\\src\\pages\\Login.js":"15","D:\\CTHS_TOEI\\src\\components\\Navbar\\Main\\index.js":"16","D:\\CTHS_TOEI\\src\\components\\Navbar\\index.js":"17","D:\\CTHS_TOEI\\src\\pages\\Patients\\Patients-form.js":"18","D:\\CTHS_TOEI\\src\\components\\Navbar\\Topbar.js":"19","D:\\CTHS_TOEI\\src\\pages\\Patients\\GraphQL\\Querie.js":"20","D:\\CTHS_TOEI\\src\\components\\Navbar\\Sidebar.js":"21","D:\\CTHS_TOEI\\src\\pages\\Patients\\GraphQL\\Mutation.js":"22","D:\\CTHS_TOEI\\src\\MulitiSelect.jsx":"23","D:\\CTHS_TOEI\\src\\pages\\Admins\\GraphQL\\Querie.js":"24","D:\\CTHS_TOEI\\src\\pages\\Admins\\User-form.js":"25","D:\\CTHS_TOEI\\src\\pages\\Admins\\GraphQL\\Mutation.js":"26","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Detail.js":"27","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Treatments.js":"28","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Create.js":"29","D:\\CTHS_TOEI\\src\\pages\\Dianosis\\Dianosis.js":"30","D:\\CTHS_TOEI\\src\\pages\\Dianosis\\Detail.js":"31","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Medicine.js":"32","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Create.js":"33","D:\\CTHS_TOEI\\src\\pages\\Medicine\\Prescription\\Prescription.js":"34","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Detail.js":"35","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Treatment-form.js":"36","D:\\CTHS_TOEI\\src\\pages\\Dianosis\\Diagnosis-form.js":"37","D:\\CTHS_TOEI\\src\\pages\\Treatment\\GraphQL\\Querie.js":"38","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Medicine-form.js":"39","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\graphql\\Queries.js":"40","D:\\CTHS_TOEI\\src\\pages\\Treatment\\PainForm.js":"41","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\graphql\\Mutation.js":"42","D:\\CTHS_TOEI\\src\\pages\\Treatment\\FeverForm.js":"43","D:\\CTHS_TOEI\\src\\pages\\Treatment\\AccidentForm.js":"44","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Diarrhea.js":"45","D:\\CTHS_TOEI\\src\\pages\\Treatment\\EyesForm.js":"46","D:\\CTHS_TOEI\\src\\pages\\Treatment\\ConAccidentForm.js":"47","D:\\CTHS_TOEI\\src\\pages\\Treatment\\SkinForm.js":"48","D:\\CTHS_TOEI\\src\\pages\\Treatment\\GenaralForm.js":"49","D:\\CTHS_TOEI\\src\\pages\\Treatment\\GraphQL\\Mutation.js":"50","D:\\CTHS_TOEI\\src\\pages\\Dianosis\\GraphQL\\Querie.js":"51","D:\\CTHS_TOEI\\src\\pages\\Dianosis\\GraphQL\\Mutation.js":"52","D:\\CTHS_TOEI\\src\\pages\\Medicine\\Prescription\\GraphQL\\Querie.js":"53","D:\\CTHS_TOEI\\src\\context\\auth.js":"54","D:\\CTHS_TOEI\\src\\GraphQL\\UserQuerie.js":"55","D:\\CTHS_TOEI\\src\\GraphQL\\LoginMutation.js":"56"},{"size":877,"mtime":1618295603324,"results":"57","hashOfConfig":"58"},{"size":375,"mtime":1616614429078,"results":"59","hashOfConfig":"58"},{"size":506,"mtime":1618300400738,"results":"60","hashOfConfig":"58"},{"size":2642,"mtime":1618300281897,"results":"61","hashOfConfig":"58"},{"size":819,"mtime":1617974023537,"results":"62","hashOfConfig":"58"},{"size":4115,"mtime":1617091332682,"results":"63","hashOfConfig":"58"},{"size":7045,"mtime":1618251706435,"results":"64","hashOfConfig":"58"},{"size":644,"mtime":1618219777283,"results":"65","hashOfConfig":"58"},{"size":2924,"mtime":1618237322889,"results":"66","hashOfConfig":"58"},{"size":1890,"mtime":1618237322871,"results":"67","hashOfConfig":"58"},{"size":4827,"mtime":1618237322884,"results":"68","hashOfConfig":"58"},{"size":3367,"mtime":1618237322801,"results":"69","hashOfConfig":"58"},{"size":1861,"mtime":1618237322797,"results":"70","hashOfConfig":"58"},{"size":2103,"mtime":1618237322798,"results":"71","hashOfConfig":"58"},{"size":5066,"mtime":1618300772105,"results":"72","hashOfConfig":"58"},{"size":1031,"mtime":1617974023537,"results":"73","hashOfConfig":"58"},{"size":1371,"mtime":1617974023538,"results":"74","hashOfConfig":"58"},{"size":25914,"mtime":1618237322888,"results":"75","hashOfConfig":"58"},{"size":1584,"mtime":1617974023538,"results":"76","hashOfConfig":"58"},{"size":954,"mtime":1618237322887,"results":"77","hashOfConfig":"58"},{"size":7354,"mtime":1618332261668,"results":"78","hashOfConfig":"58"},{"size":872,"mtime":1618237322885,"results":"79","hashOfConfig":"58"},{"size":878,"mtime":1617974023537,"results":"80","hashOfConfig":"58"},{"size":465,"mtime":1618293002843,"results":"81","hashOfConfig":"58"},{"size":14495,"mtime":1618312079625,"results":"82","hashOfConfig":"58"},{"size":657,"mtime":1617974023540,"results":"83","hashOfConfig":"58"},{"size":9666,"mtime":1618291566276,"results":"84","hashOfConfig":"58"},{"size":3900,"mtime":1618237322986,"results":"85","hashOfConfig":"58"},{"size":6799,"mtime":1618237322908,"results":"86","hashOfConfig":"58"},{"size":3830,"mtime":1618237322805,"results":"87","hashOfConfig":"58"},{"size":6499,"mtime":1618237322803,"results":"88","hashOfConfig":"58"},{"size":3396,"mtime":1618237322856,"results":"89","hashOfConfig":"58"},{"size":1857,"mtime":1618237322821,"results":"90","hashOfConfig":"58"},{"size":3399,"mtime":1618237322869,"results":"91","hashOfConfig":"58"},{"size":2290,"mtime":1618237322830,"results":"92","hashOfConfig":"58"},{"size":57632,"mtime":1618332436358,"results":"93","hashOfConfig":"58"},{"size":1985,"mtime":1618237322804,"results":"94","hashOfConfig":"58"},{"size":2540,"mtime":1618237322951,"results":"95","hashOfConfig":"58"},{"size":8943,"mtime":1618237322855,"results":"96","hashOfConfig":"58"},{"size":379,"mtime":1618237322857,"results":"97","hashOfConfig":"58"},{"size":9004,"mtime":1618237322959,"results":"98","hashOfConfig":"58"},{"size":548,"mtime":1618237322857,"results":"99","hashOfConfig":"58"},{"size":15014,"mtime":1618237322934,"results":"100","hashOfConfig":"58"},{"size":11545,"mtime":1618237322895,"results":"101","hashOfConfig":"58"},{"size":9817,"mtime":1618237322916,"results":"102","hashOfConfig":"58"},{"size":16493,"mtime":1618237322927,"results":"103","hashOfConfig":"58"},{"size":6451,"mtime":1618237322908,"results":"104","hashOfConfig":"58"},{"size":10642,"mtime":1618237322975,"results":"105","hashOfConfig":"58"},{"size":3129,"mtime":1618237322945,"results":"106","hashOfConfig":"58"},{"size":9089,"mtime":1618237322950,"results":"107","hashOfConfig":"58"},{"size":502,"mtime":1618237322819,"results":"108","hashOfConfig":"58"},{"size":334,"mtime":1618237322806,"results":"109","hashOfConfig":"58"},{"size":500,"mtime":1618237322858,"results":"110","hashOfConfig":"58"},{"size":2325,"mtime":1618313580912,"results":"111","hashOfConfig":"58"},{"size":206,"mtime":1618293142220,"results":"112","hashOfConfig":"58"},{"size":298,"mtime":1618300917058,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"yh3044",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"116"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"116"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"116"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"116"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"116"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"116"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"116"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"116"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"116"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"116"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"116"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"116"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"116"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"116"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"116"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"116"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"116"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"116"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"116"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"116"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"116"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"116"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"116"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"116"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"116"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"116"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"D:\\CTHS_TOEI\\src\\index.js",[],["253","254"],"D:\\CTHS_TOEI\\src\\reportWebVitals.js",[],"D:\\CTHS_TOEI\\src\\App.js",[],"D:\\CTHS_TOEI\\src\\routes.js",[],"D:\\CTHS_TOEI\\src\\components\\GlobalStyles.js",[],"D:\\CTHS_TOEI\\src\\pages\\Register.js",["255"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Logouser from \"../img/user.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(10),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"#ecb79c\",\r\n    color: \"white\",\r\n  },\r\n  logo: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function Register() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <div className={classes.logo}>\r\n          <img src={Logouser} style={{ width: \"80%\", height: \"auto\" }} />\r\n        </div>\r\n        <Typography component=\"h1\" variant=\"h5\" style={{ margin: 30 }}>\r\n          Register\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n                name=\"confirm password\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            <Typography component=\"subtitle1\" variant=\"subtitle1\">\r\n              Register\r\n            </Typography>\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/login\" variant=\"body2\">\r\n                <Typography component=\"subtitle1\" variant=\"subtitle1\">\r\n                  Already have an account? Sign in\r\n                </Typography>\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","D:\\CTHS_TOEI\\src\\pages\\Homepage.js",["256","257"],"import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport pg from '../img/pg.jpg'\r\nimport pt from '../img/pt.jpg'\r\nimport tm from '../img/tm.jpg'\r\nimport da from '../img/da.jpg'\r\nimport mc from '../img/mc.jpg'\r\nimport pc from '../img/pc.jpg'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  card: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n\r\n  boxAdmin: {},\r\n}));\r\n\r\nconst Homepage = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment className={classes.root}>\r\n      <Box className={classes.boxAdmin}>\r\n        <Typography variant=\"h5\" paragraph style={{ fontWeight: \"bolder\" }}>\r\n          Clinic Treatment History System\r\n        </Typography>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={4}>\r\n          <Link to={'/app/patients/createpatients'}>\r\n            <Card className={classes.card}>\r\n              <CardActionArea>\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={pt}\r\n                  title=\"Contemplative Reptile\"\r\n                />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    เพิ่มข้อมูลผู้ป่วย\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                  >\r\n                    เพิ่มผู้ป่วยใหม่เข้าสู่ระบบ\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n            </Card>\r\n            </Link>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n          <Link to={'/app/treatment'}>\r\n            <Card className={classes.card}>\r\n              <CardActionArea>\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={tm}\r\n                  title=\"Contemplative Reptile\"\r\n                />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    ประวัติการรักษา\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                  >\r\n                    ดูประวัติการรักษาทั้งหมด\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n            </Card>\r\n            </Link>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n          <Link to={'/app/medicine'}>\r\n            <Card className={classes.card}>\r\n              <CardActionArea>\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={pc}\r\n                  title=\"Contemplative Reptile\"\r\n                />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    ใบสั่งยา\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                  >\r\n                    รายการใบสั่งยา\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n            </Card>\r\n            </Link>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Link to={'/app/medicine/drugstore'}>\r\n            <Card className={classes.card}>\r\n              <CardActionArea>\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={mc}\r\n                  title=\"Contemplative Reptile\"\r\n                />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    คลังยา\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                  >\r\n                    ดูคลังยาทั้งหมด\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n            </Card>\r\n            </Link>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n          <Link to={'/app/diagnosis'}>\r\n            <Card className={classes.card}>\r\n              <CardActionArea>\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={da}\r\n                  title=\"Contemplative Reptile\"\r\n                />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    ผู้ป่วยวินิฉัย\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                  >\r\n                    รายชื่อผู้ป่วยที่รอการวินิจฉัย\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n            </Card>\r\n            </Link>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n          <Link to={'/app/admin'}>\r\n            <Card className={classes.card}>\r\n              <CardActionArea>\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={pg}\r\n                  title=\"Contemplative Reptile\"\r\n                />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    สร้างผู้ใช้งานใหม่\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                  >\r\n                    สำหรับส่วนของ Admin เพื่อสร้างผู้ใช้งาน\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n            </Card>\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","D:\\CTHS_TOEI\\src\\pages\\Report.js",[],"D:\\CTHS_TOEI\\src\\pages\\Patients\\Patients.js",[],"D:\\CTHS_TOEI\\src\\pages\\Patients\\Create.js",[],"D:\\CTHS_TOEI\\src\\pages\\Patients\\Detail.js",["258","259"],"import React, {useEffect, useState} from 'react';\r\nimport { Box, Grid, Typography, Button, makeStyles } from '@material-ui/core';\r\nimport { InfoCard } from '@mystiny/ui';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport PatientsForm from './Patients-form'\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { GET_PATIENT } from './GraphQL/Querie'\r\nimport { useQuery } from '@apollo/client';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport moment from 'moment'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    create: {\r\n        backgroundColor: green[500],\r\n        '&:hover': {\r\n            backgroundColor: green[700],\r\n        },\r\n    },\r\n}));\r\n\r\nconst columns = [\r\n    { field: 'id', headerName: 'ID', width: 250, resizable: true },\r\n    {\r\n        field: 'createdAt',\r\n        headerName: 'Date',\r\n        width: 200,\r\n        resizable: true,\r\n    },\r\n    {\r\n        field: 'type',\r\n        headerName: 'Type',\r\n        width: 200,\r\n        resizable: true,\r\n    },\r\n    {\r\n        field: 'status',\r\n        headerName: 'Status',\r\n        width: 250,\r\n        resizable: true,\r\n    },\r\n];\r\n\r\nconst PatientDetailPage = () => {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    let { id } = useParams();\r\n    const { loading, error, data } = useQuery(GET_PATIENT, {\r\n        variables: {\r\n            id\r\n        },\r\n        fetchPolicy: 'cache-and-network'\r\n    });\r\n \r\n\r\n    if (loading) return \"...Loading\";\r\n    if (error) return `Error! ${error}`;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box >\r\n                <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n                    <Grid item xs={6}>\r\n                        <Typography paragraph style={{ fontWeight: 'bold', fontSize: '2em' }} >\r\n                            <DescriptionIcon color=\"primary\" fontSize=\"small\" /> รายละเอียดผู้ป่วย\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6} align='right'>\r\n                        <Box style={{ alignItems: 'center', justifyContent: 'flex-end' }}>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <InfoCard title='ข้อมูลผู้ป่วย' actionTopRight={\r\n                            <Box display=\"flex\">\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => navigate(`/app/treatment/create/patientId/${id}`)} style={{ marginRight: 10 }} className={classes.create}>\r\n                                    สร้างประวัติการรักษา\r\n                                </Button>\r\n                                <Button variant=\"contained\" color=\"secondary\" onClick={() => navigate(-1)} >\r\n                                    ย้อนกลับ\r\n                                </Button>\r\n                            </Box>\r\n                        }>\r\n                            <PatientsForm defaultdata={data} mode={'update'} />\r\n                        </InfoCard>\r\n                    </Grid>\r\n                    <Grid item xs={12} style={{ marginTop: 20 }}>\r\n                        <InfoCard title='ประวัติการรักษา'>\r\n                            <Grid container spacing={0} alignItems=\"center\" justify=\"center\" style={{ marginTop: 20 }}>\r\n                                <Grid item xs={12}>\r\n                                    <div style={{ height: 500, width: '100%', backgroundColor: 'white' }}>\r\n                                        <DataGrid\r\n                                            rows={data.patientById.treatment?.map((item) => ({\r\n                                                id: item._id,\r\n                                                createdAt: moment(new Date(item.createdAt)).format('DD/MM/YYYY'),\r\n                                                type: item.type,\r\n                                                status: item.status,\r\n                                            }))}\r\n                                            columns={columns}\r\n                                            pagination\r\n                                            pageSize={10}\r\n                                            onRowClick={(row) => navigate(`/app/treatment/detail/${row.row.id}`)}\r\n                                        />\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </InfoCard>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default PatientDetailPage","D:\\CTHS_TOEI\\src\\pages\\Admins\\User.js",[],"D:\\CTHS_TOEI\\src\\pages\\Admins\\Creat.js",[],"D:\\CTHS_TOEI\\src\\pages\\Admins\\Detail.js",[],"D:\\CTHS_TOEI\\src\\pages\\Login.js",["260","261","262","263","264"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Logouser from \"../img/user.png\";\r\nimport { useCallback, useState } from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSession } from '../context/auth' \r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(https://i.imgur.com/u9flexs.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"#5780f7\",\r\n    color: \"white\",\r\n    padding: 8\r\n  },\r\n  logo: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function SignInSide() {\r\n  const classes = useStyles();\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const { userLogin } = useSession()\r\n  let navigate = useNavigate();\r\n\r\n  const handleUsernameChange = useCallback(\r\n    (e) => {\r\n      setUsername(e.target.value)\r\n    },\r\n    [],\r\n  )\r\n  const handlePasswordChange = useCallback(\r\n    (e) => {\r\n      setPassword(e.target.value)\r\n    },\r\n    [],\r\n  )\r\n\r\n  const handleLogin = useCallback(\r\n    async (e) => {\r\n      e.preventDefault()\r\n      await userLogin(username, password)\r\n    },\r\n    [userLogin, password, username],\r\n  )\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <fullWidthClassName />\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={6} className={classes.image} />\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        sm={8}\r\n        md={6}\r\n        component={Paper}\r\n        square\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <div className={classes.paper}>\r\n          <div className={classes.logo}>\r\n            <img src={Logouser} style={{ width: \"80%\", height: \"auto\" }} />\r\n          </div>\r\n          <Typography component=\"h1\" variant=\"h5\" style={{margin: 30}}>\r\n            Clinic Treatment History System\r\n          </Typography>\r\n          <form className={classes.form} noValidate  onSubmit={handleLogin}>\r\n            <TextField\r\n              variant=\"filled\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              autoComplete=\"username\"\r\n              autoFocus\r\n              value={username}\r\n              onChange={handleUsernameChange}\r\n            />\r\n            <TextField\r\n              variant=\"filled\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={password}\r\n              onChange={handlePasswordChange}\r\n\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              className={classes.submit}\r\n            >\r\n              <Typography component=\"subtitle1\" variant=\"subtitle1\">\r\n                Login\r\n              </Typography>\r\n            </Button>\r\n            {/* <Grid container>\r\n              <Grid item xs>\r\n                <FormControlLabel\r\n                  control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                  label=\"Remember me\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"/register\" variant=\"body2\">\r\n                  <Typography\r\n                    component=\"subtitle1\"\r\n                    variant=\"subtitle1\"\r\n                    style={{ marginRight: 10 }}\r\n                  >\r\n                    Don't Have an Account?\r\n                  </Typography>\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  <Typography component=\"subtitle1\" variant=\"subtitle1\">\r\n                    Forgot Password?\r\n                  </Typography>\r\n                </Link>\r\n              </Grid>\r\n            </Grid> */}\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","D:\\CTHS_TOEI\\src\\components\\Navbar\\Main\\index.js",[],"D:\\CTHS_TOEI\\src\\components\\Navbar\\index.js",[],"D:\\CTHS_TOEI\\src\\pages\\Patients\\Patients-form.js",["265","266","267","268","269","270","271","272","273","274","275"],"import React, { useCallback, useEffect, useState } from 'react'\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    MenuItem,\r\n    RadioGroup,\r\n    FormControlLabel,\r\n    FormControl,\r\n    FormLabel,\r\n    Button,\r\n    Chip,\r\n    NativeSelect,\r\n    InputBase,\r\n    InputLabel,\r\n} from '@material-ui/core';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { TextField, Radio, Select } from 'final-form-material-ui';\r\nimport MultiSelect from \"../../MulitiSelect\";\r\nimport \"../../App.css\"\r\nimport { ADD_PATIENT, UPDATE_PATIENT_BY_ID } from './GraphQL/Mutation'\r\nimport { useMutation } from '@apollo/client';\r\nimport { GET_PATIENTS } from './GraphQL/Querie'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport moment from 'moment';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            width: '25ch',\r\n        },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        maxWidth: 300,\r\n    },\r\n    chips: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n        margin: 2,\r\n    },\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n    root: {\r\n        'label + &': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    input: {\r\n        borderRadius: 4,\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        width: \"100%\",\r\n        padding: '10px 26px 10px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n        '&:focus': {\r\n            borderRadius: 4,\r\n            borderColor: '#80bdff',\r\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n        },\r\n    },\r\n}))(InputBase);\r\n\r\nconst PatientsForm = (props) => {\r\n    const { mode, defaultdata } = props\r\n    const classes = useStyles();\r\n    let navigate = useNavigate();\r\n    const test = ['โรคหัวใจ', 'โรคความดัน', 'โรคเบาหวาน', 'โรคสมอง'];\r\n    const [select, setSelect] = React.useState('')\r\n    const [status, setStatus] = React.useState('')\r\n    const [addPatient] = useMutation(ADD_PATIENT);\r\n    const [updatePatient] = useMutation(UPDATE_PATIENT_BY_ID)\r\n    const [nationality, setNationality] = React.useState([])\r\n    const [selectNationality, setSelectNationality] = React.useState('')\r\n    const [selectRace, setSelectRace] = React.useState('')\r\n\r\n    let data = require('npm-nationality-list')\r\n\r\n    useEffect(() => {\r\n        if (mode === 'update') {\r\n            setSelect(defaultdata.patientById.bloodType)\r\n            setStatus(defaultdata.patientById.status)\r\n            setSelectNationality(defaultdata.patientById.nationality)\r\n            setSelectRace(defaultdata.patientById.race)\r\n        } else {\r\n            return null\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        data.getList().map((item) => setNationality((prev) => [...prev, item]))\r\n    }, [])\r\n\r\n    const onSubmitCreate = useCallback(\r\n        async (value) => {\r\n            const variables = {\r\n                record: {\r\n                    firstname: value.firstname,\r\n                    lastname: value.lastname,\r\n                    idcardNumber: value.idcardNumber,\r\n                    birthdate: value.birthdate,\r\n                    nationality: selectNationality,\r\n                    race: selectRace,\r\n                    status: status,\r\n                    bloodType: select,\r\n                    phone: value.phone,\r\n                    address: value.address,\r\n                    hospitalRefer: value.hospitalRefer,\r\n                    congenitalDisease: value.congenitalDisease,\r\n                }\r\n            }\r\n            try {\r\n                await addPatient({ variables, refetchQueries: [{ query: GET_PATIENTS }] })\r\n                alert('บันทึกข้อมูลสำเร็จ')\r\n                setSelectNationality('')\r\n                setSelectRace('')\r\n                navigate(`/app/patients`)\r\n            } catch (err) {\r\n                console.log(err)\r\n                alert('เกิดข้อผิดพลาด' + err.message)\r\n            }\r\n        },\r\n        [addPatient, select]\r\n    )\r\n\r\n    const onSubmitUpdate = useCallback(\r\n        async (value) => {\r\n            const variables = {\r\n                id: defaultdata.patientById._id,\r\n                record: {\r\n                    firstname: value.firstname,\r\n                    lastname: value.lastname,\r\n                    idcardNumber: value.idcardNumber,\r\n                    birthdate: value.birthdate,\r\n                    nationality: selectNationality,\r\n                    race: selectRace,\r\n                    status: status,\r\n                    bloodType: select,\r\n                    phone: value.phone,\r\n                    address: value.address,\r\n                    hospitalRefer: value.hospitalRefer,\r\n                    congenitalDisease: value.congenitalDisease,\r\n                }\r\n            }\r\n            try {\r\n                await updatePatient({ variables, refetchQueries: [{ query: GET_PATIENTS }] })\r\n                alert('บันทึกข้อมูลสำเร็จ')\r\n                setSelectNationality('')\r\n                setSelectRace('')\r\n                navigate(`/app/patients`)\r\n            } catch (err) {\r\n                console.log(err)\r\n                alert('เกิดข้อผิดพลาด     ' + err.message)\r\n            }\r\n        },\r\n        [addPatient, select, selectNationality, selectRace]\r\n    )\r\n\r\n    const onSubmit = mode === 'update' ? onSubmitUpdate : onSubmitCreate\r\n\r\n    const handleChangeblood = (event) => {\r\n        setSelect(event.target.value);\r\n    };\r\n\r\n    const handleChangestatus = (event) => {\r\n        setStatus(event.target.value)\r\n    }\r\n\r\n    const handleSelectNationality = (event) => {\r\n        setSelectNationality(event.target.value)\r\n    }\r\n    const handleSelectRace = (event) => {\r\n        setSelectRace(event.target.value)\r\n    }\r\n\r\n    const normalizeIdcard = value => {\r\n        if (!value) return value;\r\n        const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n        if (onlyNums.length <= 13) return onlyNums;\r\n    }\r\n\r\n    const normalizePhone = value => {\r\n        if (!value) return value;\r\n        const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n        if (onlyNums.length <= 10) return onlyNums;\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Form\r\n                onSubmit={onSubmit}\r\n                render={({ handleSubmit, submitting }) => (\r\n                    <form className={classes.root} noValidate autoComplete=\"true\" onSubmit={handleSubmit}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        fullWidth\r\n                                        required\r\n                                        name=\"firstname\"\r\n                                        component={TextField}\r\n                                        type=\"text\"\r\n                                        label=\"ชื่อ\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        initialValue={defaultdata.patientById.firstname}\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        fullWidth\r\n                                        required\r\n                                        name=\"firstname\"\r\n                                        component={TextField}\r\n                                        type=\"text\"\r\n                                        label=\"ชื่อ\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        name=\"lastname\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        component={TextField}\r\n                                        label=\"นามสกุล\"\r\n                                        initialValue={defaultdata.patientById.lastname}\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        name=\"lastname\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        component={TextField}\r\n                                        label=\"นามสกุล\"\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"รหัสบัตรประชาชน\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"idcardNumber\"\r\n                                        component={TextField}\r\n                                        initialValue={defaultdata.patientById.idcardNumber}\r\n                                        parse={normalizeIdcard}\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        label=\"รหัสบัตรประชาชน\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"idcardNumber\"\r\n                                        component={TextField}\r\n                                        parse={normalizeIdcard}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        id=\"date\"\r\n                                        type=\"date\"\r\n                                        label=\"วัน/เดือน/ปีเกิด\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required={true}\r\n                                        component={TextField}\r\n                                        name='birthdate'\r\n                                        defaultValue={`${moment(defaultdata.patientById.birthdate).format(\"YYYY-MM-DD\")}`}\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        id=\"date\"\r\n                                        type=\"date\"\r\n                                        variant=\"outlined\"\r\n                                        label=\"วัน/เดือน/ปีเกิด\"\r\n                                        style={{ width: '100%' }}\r\n                                        required={true}\r\n                                        component={TextField}\r\n                                        name='birthdate'\r\n                                        defaultValue={`${moment(new Date()).format(\"YYYY-MM-DD\")}`}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl style={{ width: \"100%\" }}>\r\n                                    <InputLabel id=\"demo-mutiple-name-label\">สัญชาติ</InputLabel>\r\n                                    <NativeSelect\r\n                                        id=\"demo-customized-select-native\"\r\n                                        input={<BootstrapInput />}\r\n                                        value={selectNationality}\r\n                                        onChange={handleSelectNationality}\r\n                                        required={true}\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\" \" />\r\n                                        {nationality?.map((data, index) => (\r\n                                            <option value={`${data.nationality}`}>\r\n                                                {data.nationality}\r\n                                            </option>\r\n                                        ))}\r\n                                    </NativeSelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl style={{ width: \"100%\" }}>\r\n                                    <InputLabel id=\"demo-mutiple-name-label\">เชื้อชาติ</InputLabel>\r\n                                    <NativeSelect\r\n                                        id=\"demo-customized-select-native\"\r\n                                        input={<BootstrapInput />}\r\n                                        value={selectRace}\r\n                                        onChange={handleSelectRace}\r\n                                        required={true}\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\" \" />\r\n                                        {nationality?.map((data, index) => (\r\n                                            <option value={`${data.nationality}`}>\r\n                                                {data.nationality}\r\n                                            </option>\r\n                                        ))}\r\n                                    </NativeSelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl style={{ width: \"100%\" }}>\r\n                                    <InputLabel id=\"demo-mutiple-name-label\">สถานะ</InputLabel>\r\n                                    <NativeSelect\r\n                                        id=\"demo-customized-select-native\"\r\n                                        input={<BootstrapInput />}\r\n                                        value={status}\r\n                                        onChange={handleChangestatus}\r\n                                        required={true}\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\"เลือกสถานะ\" />\r\n                                        <option value={'SINGLE'}>โสด</option>\r\n                                        <option value={'MARRIED'}>สมรส</option>\r\n                                        <option value={'OTHER'}>อื่น ๆ</option>\r\n                                    </NativeSelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl style={{ width: \"100%\" }}>\r\n                                    <InputLabel id=\"demo-mutiple-name-label\">กรุ๊ปเลือด</InputLabel>\r\n                                    <NativeSelect\r\n                                        id=\"demo-customized-select-native\"\r\n                                        input={<BootstrapInput />}\r\n                                        value={select}\r\n                                        onChange={handleChangeblood}\r\n                                        required={true}\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\" \" />\r\n                                        <option value={'O'}>O</option>\r\n                                        <option value={'A'}>A</option>\r\n                                        <option value={'B'}>B</option>\r\n                                        <option value={'AB'}>AB</option>\r\n                                    </NativeSelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"เบอร์โทรศัพท์\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"phone\"\r\n                                        component={TextField}\r\n                                        initialValue={defaultdata.patientById.phone}\r\n                                        parse={normalizePhone}\r\n\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        label=\"เบอร์โทรศัพท์\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"phone\"\r\n                                        component={TextField}\r\n                                        parse={normalizePhone}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"โรงพยาบาลที่ส่งต่อ\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"hospitalRefer\"\r\n                                        component={TextField}\r\n                                        initialValue={defaultdata.patientById.hospitalRefer}\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        label=\"โรงพยาบาลที่ส่งต่อ\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"hospitalRefer\"\r\n                                        component={TextField}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        name=\"congenitalDisease\"\r\n                                        styling=\"field\"\r\n                                        labelname=\"โรคประจำตัว\"\r\n                                        component={MultiSelect}\r\n                                        variant=\"outlined\"\r\n                                        initialValue={defaultdata.patientById.congenitalDisease}\r\n                                        renderValue={selected => (\r\n                                            <div className=\"multi-select-chips\">\r\n                                                {selected.map(value => (\r\n                                                    <Chip\r\n                                                        key={value}\r\n                                                        label={value}\r\n                                                        className=\"multi-select-chip\"\r\n                                                    />\r\n                                                ))}\r\n                                            </div>\r\n                                        )}\r\n                                    >\r\n                                        {test.map((data, index) => (\r\n                                            <MenuItem key={index} value={data}>\r\n                                                {data}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Field>\r\n                                ) : (\r\n                                    <Field\r\n                                        name=\"congenitalDisease\"\r\n                                        styling=\"field\"\r\n                                        labelname=\"โรคประจำตัว\"\r\n                                        component={MultiSelect}\r\n                                        variant=\"outlined\"\r\n                                        renderValue={selected => (\r\n                                            <div className=\"multi-select-chips\">\r\n                                                {selected.map(value => (\r\n                                                    <Chip\r\n                                                        key={value}\r\n                                                        label={value}\r\n                                                        className=\"multi-select-chip\"\r\n                                                    />\r\n                                                ))}\r\n                                            </div>\r\n                                        )}\r\n                                    >\r\n                                        {test.map((data, index) => (\r\n                                            <MenuItem key={index} value={data}>\r\n                                                {data}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Field>\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"ที่อยู่\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"address\"\r\n                                        component={TextField}\r\n                                        initialValue={defaultdata.patientById.address}\r\n\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        label=\"ที่อยู่\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"address\"\r\n                                        component={TextField}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12} style={{ marginTop: 16, textAlign: 'center', width: '100%' }}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    disabled={submitting}\r\n                                >\r\n                                    บันทึกข้อมูล\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                )\r\n                }\r\n            />\r\n        </React.Fragment >\r\n    )\r\n}\r\nexport default PatientsForm","D:\\CTHS_TOEI\\src\\components\\Navbar\\Topbar.js",["276"],"import React from 'react';\r\nimport { AppBar, Hidden, Toolbar, makeStyles, IconButton, Box, Typography } from '@material-ui/core';\r\nimport Icon from '../../img/logo.png';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// icon\r\nimport { IconContext } from 'react-icons';\r\nimport { GiHamburgerMenu } from 'react-icons/gi';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\troot: {\r\n\t\tbackgroundColor: '#FFF',\r\n\t\tpadding: 10,\r\n\t},\r\n}));\r\n\r\nconst Layout = ({ className, onMobileNavOpen, ...rest }) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<AppBar className={clsx(classes.root, className)} {...rest}>\r\n\t\t\t<Toolbar>\r\n\t\t\t\t<Link to=\"/app/homepage\" style={{ textDecoration: 'none' }}>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<img src={Icon} alt=\"icon\" style={{ height: 70, width: 70 }} />\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\t\t\ttextTransform: 'uppercase',\r\n\t\t\t\t\t\t\t\tcolor: '#000',\r\n\t\t\t\t\t\t\t\tmarginLeft: 15,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tClinic Treatment History\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Box flexGrow={1} />\r\n\t\t\t\t<Hidden lgUp>\r\n\t\t\t\t\t<IconContext.Provider value={{ color: 'red', size: '30' }}>\r\n\t\t\t\t\t\t<GiHamburgerMenu onClick={onMobileNavOpen} />\r\n\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t</Hidden>\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t);\r\n};\r\n\r\nLayout.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\tonMobileNavOpen: PropTypes.func,\r\n};\r\n\r\nexport default Layout;\r\n","D:\\CTHS_TOEI\\src\\pages\\Patients\\GraphQL\\Querie.js",[],"D:\\CTHS_TOEI\\src\\components\\Navbar\\Sidebar.js",["277","278","279","280"],"D:\\CTHS_TOEI\\src\\pages\\Patients\\GraphQL\\Mutation.js",[],"D:\\CTHS_TOEI\\src\\MulitiSelect.jsx",["281"],"import React from \"react\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n};\r\n\r\nexport default ({\r\n  input: { value, name, onChange, ...restInput },\r\n  meta,\r\n  ...rest\r\n}) => (\r\n  <FormControl className={rest.styling}>\r\n    <InputLabel htmlFor=\"select-multiple-chip\">{rest.labelname}</InputLabel>\r\n    <Select\r\n      MenuProps={MenuProps}\r\n      multiple\r\n      displayEmpty\r\n      {...rest}\r\n      name={name}\r\n      inputProps={restInput}\r\n      error={meta.error && meta.touched}\r\n      onChange={onChange}\r\n      value={[...value]}\r\n    />\r\n  </FormControl>\r\n);\r\n","D:\\CTHS_TOEI\\src\\pages\\Admins\\GraphQL\\Querie.js",[],"D:\\CTHS_TOEI\\src\\pages\\Admins\\User-form.js",["282","283","284","285","286"],"import React, { useCallback, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControl,\r\n  NativeSelect,\r\n  InputBase,\r\n  InputLabel,\r\n  Button,\r\n  Checkbox as CheckboxDianosis,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { ADD_USER, UPDATE_USER_BY_ID } from \"./GraphQL/Mutation\";\r\nimport { GET_USERS } from \"./GraphQL/Querie\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { TextField, Checkbox, Radio, Select } from \"final-form-material-ui\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"100%\",\r\n    padding: \"10px 26px 10px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      borderRadius: 4,\r\n      borderColor: \"#80bdff\",\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst UserForm = (props) => {\r\n  const { mode, defaultdata } = props;\r\n\r\n  let navigate = useNavigate();\r\n  const classes = useStyles();\r\n  const [select, setSelect] = React.useState(\"\");\r\n  console.log(defaultdata);\r\n\r\n  const [addUser] = useMutation(ADD_USER);\r\n  const [updateUser] = useMutation(UPDATE_USER_BY_ID);\r\n  const handleChange = (event) => {\r\n    setSelect(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (mode === \"update\") {\r\n      setSelect(defaultdata.userById.roles);\r\n      console.log(defaultdata.userById);\r\n    } else {\r\n      return null;\r\n    }\r\n  }, []);\r\n\r\n  const onSubmitCreate = useCallback(\r\n    async (value) => {\r\n      let staff = value.isStaff ? true : false;\r\n      const variables = {\r\n        record: {\r\n          username: value.username,\r\n          email: value.email,\r\n          firstname: value.firstName,\r\n          lastname: value.lastName,\r\n          phone: value.tell,\r\n          roles: select,\r\n          address: value.address,\r\n          password: value.password,\r\n          isStaff: staff,\r\n        },\r\n      };\r\n      try {\r\n        await addUser({ variables, refetchQueries: [{ query: GET_USERS }] });\r\n        setSelect(\"\");\r\n        console.log(\"create\");\r\n        alert(\"บันทึกข้อมูลสำเร็จ\");\r\n        navigate(`/app/admin/`);\r\n      } catch (err) {\r\n        console.log(err);\r\n        alert(\"เกิดข้อผิดพลาด\");\r\n      }\r\n    },\r\n    [addUser, select]\r\n  );\r\n  const onSubmitUpdate = useCallback(\r\n    async (value) => {\r\n      const variables = {\r\n        id: defaultdata.userById._id,\r\n        record: {\r\n          username: value.username,\r\n          email: value.email,\r\n          firstname: value.firstName,\r\n          lastname: value.lastName,\r\n          phone: value.tell,\r\n          roles: select,\r\n          address: value.address,\r\n          password: value.password,\r\n          isStaff: true,\r\n        },\r\n      };\r\n      try {\r\n        await updateUser({ variables, refetchQueries: [{ query: GET_USERS }] });\r\n        setSelect(\"\");\r\n        alert(\"บันทึกข้อมูลสำเร็จ\");\r\n        navigate(`/app/admin/`);\r\n      } catch (err) {\r\n        console.log(err);\r\n        alert(\"เกิดข้อผิดพลาด\" + select);\r\n      }\r\n    },\r\n    [updateUser, select]\r\n  );\r\n  const onSubmit = mode === \"update\" ? onSubmitUpdate : onSubmitCreate;\r\n  return (\r\n    <React.Fragment>\r\n      <Form\r\n        onSubmit={onSubmit}\r\n        render={({ handleSubmit, submitting, submitError }) => {\r\n          return (\r\n            <form\r\n              className={classes.root}\r\n              noValidate\r\n              autoComplete=\"true\"\r\n              onSubmit={handleSubmit}\r\n            >\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  {mode === \"update\" ? (\r\n                    <Field\r\n                      fullWidth\r\n                      required\r\n                      name=\"username\"\r\n                      component={TextField}\r\n                      type=\"text\"\r\n                      label=\"ยูซเซอร์เนม\"\r\n                      variant=\"outlined\"\r\n                      initialValue={defaultdata.userById.username}\r\n                      style={{ width: \"100%\" }}\r\n                    />\r\n                  ) : (\r\n                    <Field\r\n                      fullWidth\r\n                      required\r\n                      name=\"username\"\r\n                      component={TextField}\r\n                      type=\"text\"\r\n                      label=\"ยูซเซอร์เนม\"\r\n                      variant=\"outlined\"\r\n                      style={{ width: \"100%\" }}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  {mode === \"update\" ? null : (\r\n                    <Field\r\n                      name=\"password\"\r\n                      variant=\"outlined\"\r\n                      style={{ width: \"100%\" }}\r\n                      required\r\n                      type=\"password\"\r\n                      component={TextField}\r\n                      label=\"รหัส\"\r\n                    />\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  {mode === \"update\" ? (\r\n                    <Field\r\n                      fullWidth\r\n                      required\r\n                      name=\"firstName\"\r\n                      component={TextField}\r\n                      type=\"text\"\r\n                      label=\"ชื่อ\"\r\n                      variant=\"outlined\"\r\n                      style={{ width: \"100%\" }}\r\n                      initialValue={defaultdata.userById.firstname}\r\n                    />\r\n                  ) : (\r\n                    <Field\r\n                      fullWidth\r\n                      required\r\n                      name=\"firstName\"\r\n                      component={TextField}\r\n                      type=\"text\"\r\n                      label=\"ชื่อ\"\r\n                      variant=\"outlined\"\r\n                      style={{ width: \"100%\" }}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  {mode === \"update\" ? (\r\n                    <Field\r\n                      name=\"lastName\"\r\n                      variant=\"outlined\"\r\n                      style={{ width: \"100%\" }}\r\n                      required\r\n                      component={TextField}\r\n                      label=\"นามสกุล\"\r\n                      initialValue={defaultdata.userById.lastname}\r\n                    />\r\n                  ) : (\r\n                    <Field\r\n                      name=\"lastName\"\r\n                      variant=\"outlined\"\r\n                      style={{ width: \"100%\" }}\r\n                      required\r\n                      component={TextField}\r\n                      label=\"นามสกุล\"\r\n                    />\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  {mode === \"update\" ? (\r\n                    <Field\r\n                      label=\"เบอร์โทร\"\r\n                      type=\"text\"\r\n                      variant=\"outlined\"\r\n                      style={{ width: \"100%\" }}\r\n                      required\r\n                      name=\"tell\"\r\n                      component={TextField}\r\n                      initialValue={defaultdata.userById.phone}\r\n                    />\r\n                  ) : (\r\n                    <Field\r\n                      label=\"เบอร์โทร\"\r\n                      type=\"text\"\r\n                      variant=\"outlined\"\r\n                      style={{ width: \"100%\" }}\r\n                      required\r\n                      name=\"tell\"\r\n                      component={TextField}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  {mode === \"update\" ? (\r\n                    <Field\r\n                      label=\"อีเมล\"\r\n                      type=\"text\"\r\n                      variant=\"outlined\"\r\n                      style={{ width: \"100%\" }}\r\n                      required\r\n                      name=\"email\"\r\n                      component={TextField}\r\n                      initialValue={defaultdata.userById.email}\r\n                    />\r\n                  ) : (\r\n                    <Field\r\n                      label=\"อีเมล\"\r\n                      type=\"text\"\r\n                      variant=\"outlined\"\r\n                      style={{ width: \"100%\" }}\r\n                      required\r\n                      name=\"email\"\r\n                      component={TextField}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  {mode === \"update\" ? (\r\n                    <Field\r\n                      label=\"ที่อยู่\"\r\n                      type=\"text\"\r\n                      variant=\"outlined\"\r\n                      style={{ width: \"100%\" }}\r\n                      required\r\n                      name=\"address\"\r\n                      component={TextField}\r\n                      multiline\r\n                      rows={4}\r\n                      initialValue={defaultdata.userById.address}\r\n                    />\r\n                  ) : (\r\n                    <Field\r\n                      label=\"ที่อยู่\"\r\n                      type=\"text\"\r\n                      variant=\"outlined\"\r\n                      style={{ width: \"100%\" }}\r\n                      required\r\n                      name=\"address\"\r\n                      component={TextField}\r\n                      multiline\r\n                      rows={4}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  {mode === \"update\" ? (\r\n                    <FormControl style={{ width: \"100%\" }}>\r\n                      <InputLabel id=\"demo-mutiple-name-label\">\r\n                        หน้าที่\r\n                      </InputLabel>\r\n                      <NativeSelect\r\n                        id=\"demo-customized-select-native\"\r\n                        input={<BootstrapInput />}\r\n                        value={select}\r\n                        onChange={handleChange}\r\n                        required={true}\r\n                      >\r\n                        <option aria-label=\"None\" value=\" \" />\r\n                        <option value={\"DOCTOR\"}>หมอ</option>\r\n                        <option value={\"NURSE\"}>พยาบาล</option>\r\n                        <option value={\"STAFF\"}>เจ้าหน้าที่</option>\r\n                      </NativeSelect>\r\n                    </FormControl>\r\n                  ) : (\r\n                    <FormControl style={{ width: \"100%\" }}>\r\n                      <InputLabel id=\"demo-mutiple-name-label\">\r\n                        หน้าที่\r\n                      </InputLabel>\r\n                      <NativeSelect\r\n                        id=\"demo-customized-select-native\"\r\n                        input={<BootstrapInput />}\r\n                        value={select}\r\n                        onChange={handleChange}\r\n                        required={true}\r\n                      >\r\n                        <option aria-label=\"None\" value=\" \" />\r\n                        <option value={\"DOCTOR\"}>หมอ</option>\r\n                        <option value={\"NURSE\"}>พยาบาล</option>\r\n                        <option value={\"STAFF\"}>เจ้าหน้าที่</option>\r\n                      </NativeSelect>\r\n                    </FormControl>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  {mode === \"update\" ? (\r\n                    // <FormControlLabel\r\n                    //   control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                    //   checked={defaultdata.userById.isStaff}\r\n                    //   label=\"ต้องการใบรับรองแพทย์\"\r\n                    // />\r\n                    <FormControlLabel\r\n                      label=\"ต้องการใบรับรองแพทย์\"\r\n                      control={\r\n                        <Field\r\n                          name=\"medicalCertificate\"\r\n                          component={Checkbox}\r\n                          type=\"checkbox\"\r\n                          initialValue={\r\n                            defaultdata.userById.isStaff\r\n                          }\r\n                        />\r\n                      }\r\n                    />\r\n                  ) : (\r\n                    <FormControlLabel\r\n                      label=\"STAFF\"\r\n                      control={\r\n                        <Field\r\n                          name=\"isStaff\"\r\n                          component={CheckboxDianosis}\r\n                          type=\"checkbox\"\r\n                        />\r\n                      }\r\n                    />\r\n                  )}\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ marginTop: 16, textAlign: \"center\", width: \"100%\" }}\r\n                >\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    disabled={submitting}\r\n                  >\r\n                    บันทึกข้อมูล\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          );\r\n        }}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default UserForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Admins\\GraphQL\\Mutation.js",[],"D:\\CTHS_TOEI\\src\\pages\\Treatment\\Detail.js",["287","288","289","290","291"],"import React from \"react\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  TextField as MuiTextField,\r\n} from \"@material-ui/core\";\r\nimport { InfoCard } from \"@mystiny/ui\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport { useQuery, Query } from \"@apollo/client\";\r\nimport { GET_TREATMENT_BY_ID } from \"./GraphQL/Querie\";\r\nimport { GET_PATIENT } from \"../Patients/GraphQL/Querie\";\r\nimport moment from \"moment\";\r\nimport TreatmentForm from \"./Treatment-form\";\r\nimport DiagnosisForm from \"../Dianosis/Diagnosis-form\";\r\nimport { Form, Field } from \"react-final-form\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  create: {\r\n    backgroundColor: green[500],\r\n    \"&:hover\": {\r\n      backgroundColor: green[700],\r\n    },\r\n  },\r\n}));\r\n\r\nconst DetailTreatmentPage = () => {\r\n  const navigate = useNavigate();\r\n  const classes = useStyles();\r\n  let { id } = useParams();\r\n  const { loading, error, data } = useQuery(GET_TREATMENT_BY_ID, {\r\n    variables: {\r\n      id,\r\n    },\r\n  });\r\n\r\n  const PatientId = data?.treatmentById?.patientId;\r\n\r\n  const {\r\n    loading: loadingPatient,\r\n    error: errorPatient,\r\n    data: dataPatient,\r\n  } = useQuery(GET_PATIENT, {\r\n    variables: {\r\n      id: PatientId,\r\n    },\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  if (loading) return \"...Loading\";\r\n  if (error) return `Error! ${error}`;\r\n  if (loadingPatient) return \"...Loading\";\r\n  if (errorPatient) return `Error! ${error}`;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Box>\r\n        <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n          <Grid item xs={6}>\r\n            <Typography\r\n              paragraph\r\n              style={{ fontWeight: \"bold\", fontSize: \"2em\" }}\r\n            >\r\n              <DescriptionIcon color=\"primary\" fontSize=\"small\" />{\" \"}\r\n              รายละเอียดการรักษา\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6} align=\"right\">\r\n            <Box\r\n              style={{ alignItems: \"center\", justifyContent: \"flex-end\" }}\r\n            ></Box>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <InfoCard\r\n              title={\r\n                <React.Fragment>\r\n                  <Box\r\n                    display=\"flex \"\r\n                    style={{\r\n                      fontSize: \"1em\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <h4>ข้อมูลผู้ป่วย</h4>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      onClick={() =>\r\n                        navigate(\r\n                          `/app/patients/detail/${data.treatmentById.patientId}`\r\n                        )\r\n                      }\r\n                      style={{ marginLeft: 20 }}\r\n                      className={classes.create}\r\n                    >\r\n                      ดูข้อมูลเพิ่มเติม\r\n                    </Button>\r\n                  </Box>\r\n                </React.Fragment>\r\n              }\r\n              actionTopRight={\r\n                <Box display=\"flex\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={() => navigate(-1)}\r\n                  >\r\n                    ย้อนกลับ\r\n                  </Button>\r\n                </Box>\r\n              }\r\n            >\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={6}>\r\n                  <MuiTextField\r\n                    id=\"standard-read-only-input\"\r\n                    label=\"ชื่อ\"\r\n                    defaultValue={dataPatient.patientById.firstname}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <MuiTextField\r\n                    id=\"standard-read-only-input\"\r\n                    label=\"นามสกุล\"\r\n                    defaultValue={dataPatient.patientById.lastname}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <MuiTextField\r\n                    id=\"standard-read-only-input\"\r\n                    label=\"โรคประจำตัว\"\r\n                    defaultValue={dataPatient.patientById.congenitalDisease.toString()}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <MuiTextField\r\n                    id=\"standard-read-only-input\"\r\n                    label=\"วัน/เดือน/ปีเกิด\"\r\n                    defaultValue={`${moment(\r\n                      new Date(dataPatient.patientById.birthdate)\r\n                    ).format(\"DD-MM-YYYY\")}`}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </InfoCard>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} style={{ marginTop: 20 }}>\r\n          <InfoCard\r\n            title={\r\n              <React.Fragment>\r\n                <Box\r\n                  display=\"flex \"\r\n                  style={{\r\n                    fontSize: \"1em\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <h4>ข้อมูลเบื้องต้น</h4>\r\n                </Box>\r\n              </React.Fragment>\r\n            }\r\n          >\r\n            <TreatmentForm defaultdata={data} mode={\"update\"} />\r\n          </InfoCard>\r\n        </Grid>\r\n        <Grid item xs={12} style={{ marginTop: 20 }}>\r\n          <InfoCard\r\n            title={\r\n              <React.Fragment>\r\n                <Box\r\n                  display=\"flex \"\r\n                  style={{\r\n                    fontSize: \"1em\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <h4>รายละเอียดการวินิจฉัย</h4>\r\n                </Box>\r\n              </React.Fragment>\r\n            }\r\n          >\r\n            {data.treatmentById.diagnosis.length > 0 ? (\r\n              <React.Fragment>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <MuiTextField\r\n                      id=\"standard-read-only-input\"\r\n                      label=\"รายละเอียด\"\r\n                      defaultValue={data.treatmentById.diagnosis[0].detail}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      multiline\r\n                      rows={5}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <MuiTextField\r\n                      id=\"standard-read-only-input\"\r\n                      label=\"คำแนะนำ\"\r\n                      defaultValue={data.treatmentById.diagnosis[0].advice}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      multiline\r\n                      rows={5}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <MuiTextField\r\n                      id=\"standard-read-only-input\"\r\n                      label=\"วันนัดหมอ\"\r\n                      defaultValue={`${moment(\r\n                        new Date(data.treatmentById.diagnosis[0].followUpDate)\r\n                      ).format(\"DD-MM-YYYY\")}`}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <MuiTextField\r\n                      id=\"standard-read-only-input\"\r\n                      label=\"รายละเอียดการนัด\"\r\n                      defaultValue={data.treatmentById.diagnosis[0].followUpDetail}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      multiline\r\n                      rows={5}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </React.Fragment>\r\n            ) : null}\r\n          </InfoCard>\r\n        </Grid>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DetailTreatmentPage;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Treatments.js",["292","293","294","295"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, Grid, Typography, Button } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { GET_TREATMENTS } from './GraphQL/Querie'\r\nimport { useQuery } from '@apollo/client';\r\nimport moment from 'moment'\r\nimport { isObjectType } from 'graphql';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        boxAdmin: {},\r\n        display: 'flex',\r\n        '& div.MuiDataGrid-cell': {\r\n            color: 'white',\r\n        },\r\n        '& div.MuiDataGrid-colCellTitle': {\r\n            color: 'black',\r\n        },\r\n        '& div.MuiToolbar-root': {\r\n            color: 'white',\r\n        },\r\n        '& div.MuiTablePagination-actions': {\r\n            color: 'white',\r\n        },\r\n        '& div.MuiIconButton-label': {\r\n            color: 'white',\r\n        },\r\n        '& div.MuiDataGrid-colCellWrapper': {\r\n            backgroundColor: 'white',\r\n        },\r\n    },\r\n}));\r\n\r\nconst columns = [\r\n    { field: 'id', headerName: 'ID', width: 250, resizable: true },\r\n    {\r\n        field: 'createdAt',\r\n        headerName: 'Date',\r\n        width: 200,\r\n        resizable: true,\r\n    },\r\n    {\r\n        field: 'type',\r\n        headerName: 'Type',\r\n        width: 200,\r\n    },\r\n    {\r\n        field: 'name',\r\n        headerName: 'Name',\r\n        width: 200,\r\n        resizable: true,\r\n    },\r\n    {\r\n        field: 'lastname',\r\n        headerName: 'Lastname',\r\n        width: 200,\r\n        resizable: true,\r\n    },\r\n    {\r\n        field: 'idcardNumber',\r\n        headerName: 'Idcard Number',\r\n        width: 200,\r\n    },\r\n];\r\n\r\nconst Treatmentpage = () => {\r\n    const classes = useStyles();\r\n    let navigate = useNavigate();\r\n    const { loading, error, data } = useQuery(GET_TREATMENTS);\r\n    if (loading) return 'Loading...';\r\n    if (error) return `Error! ${error.message}`;\r\n    return (\r\n        <React.Fragment className={classes.root}>\r\n            <Box className={classes.boxAdmin}>\r\n                <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n                    <Grid item xs={6}>\r\n                        <Typography paragraph style={{ fontWeight: 'bold' }} variant=\"h5\">\r\n                          Treatment\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6} align='right'>\r\n                        <Box style={{ alignItems: 'center', justifyContent: 'flex-end' }}>\r\n\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={0} alignItems=\"center\" justify=\"center\" style={{ marginTop: 20 }}>\r\n                    <Grid item xs={12}>\r\n                        <div style={{ height: 500, width: '100%', backgroundColor: 'white' }}>\r\n                            <DataGrid\r\n\t\t\t\t\t\t\t\trows={data.allTreatments.map((item) => ({\r\n                                    id: item._id,\r\n                                    createdAt: moment(new Date(item.createdAt)).format('DD/MM/YYYY'),\r\n                                    name: item.patient.firstname,\r\n                                    lastname: item.patient.lastname,\r\n                                    idcardNumber: item.patient.idcardNumber,\r\n                                    type: item.type\r\n                                }))}\r\n                                columns={columns}\r\n                                pagination\r\n                                pageSize={10}\r\n                                onRowClick={(row) => navigate(`/app/treatment/detail/${row.row.id}`)}\r\n\t\t\t\t\t\t\t/>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Treatmentpage;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Create.js",["296"],"import React from 'react';\r\nimport { Box, Grid, Typography, Button, TextField as MuiTextField } from '@material-ui/core';\r\nimport { InfoCard } from '@mystiny/ui';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_PATIENT } from '../Patients/GraphQL/Querie'\r\nimport moment from 'moment';\r\nimport TreatmentForm from './Treatment-form'\r\nconst useStyles = makeStyles((theme) => ({\r\n    create: {\r\n        backgroundColor: green[500],\r\n        '&:hover': {\r\n            backgroundColor: green[700],\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nconst CreateTreatmentPage = () => {\r\n    const navigate = useNavigate();\r\n    const classes = useStyles();\r\n    let { id } = useParams();\r\n    const { loading, error, data } = useQuery(GET_PATIENT, {\r\n        variables: {\r\n            id\r\n        },\r\n        fetchPolicy: 'cache-and-network',\r\n    });\r\n\r\n    if (loading) return \"...Loading\";\r\n    if (error) return `Error! ${error}`;\r\n    return (\r\n        <React.Fragment>\r\n            <Box >\r\n                <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n                    <Grid item xs={6}>\r\n                        <Typography paragraph style={{ fontWeight: 'bold', fontSize: '2em' }} >\r\n                            <DescriptionIcon color=\"primary\" fontSize=\"small\" /> สร้างประวัติการรักษา\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6} align='right'>\r\n                        <Box style={{ alignItems: 'center', justifyContent: 'flex-end' }}>\r\n\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <InfoCard title={\r\n                            <React.Fragment>\r\n                                <Box display=\"flex \" style={{ fontSize: '1em', justifyContent: 'center', alignItems: 'center' }}>\r\n                                    <h4>ข้อมูลผู้ป่วย</h4>\r\n                                    <Button variant=\"contained\" color=\"secondary\" onClick={() => navigate(`/app/patients/detail/${id}`)} style={{ marginLeft: 20 }} className={classes.create}>\r\n                                        ดูข้อมูลเพิ่มเติม\r\n                                    </Button>\r\n                                </Box>\r\n                            </React.Fragment>\r\n                        }\r\n                        actionTopRight={\r\n                            <Box display=\"flex\">\r\n                                <Button variant=\"contained\" color=\"secondary\" onClick={() => navigate(-1)} >\r\n                                    ย้อนกลับ\r\n                                </Button>\r\n                            </Box>\r\n                        }>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={6}>\r\n                                    <MuiTextField\r\n                                        id=\"standard-read-only-input\"\r\n                                        label=\"ชื่อ\"\r\n                                        defaultValue={data.patientById.firstname}\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <MuiTextField\r\n                                        id=\"standard-read-only-input\"\r\n                                        label=\"นามสกุล\"\r\n                                        defaultValue={data.patientById.lastname}\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <MuiTextField\r\n                                        id=\"standard-read-only-input\"\r\n                                        label=\"โรคประจำตัว\"\r\n                                        defaultValue={data.patientById.congenitalDisease.toString()}\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <MuiTextField\r\n                                        id=\"standard-read-only-input\"\r\n                                        label=\"วัน/เดือน/ปีเกิด\"\r\n                                        defaultValue={`${moment(new Date(data.patientById.birthdate)).format(\"DD-MM-YYYY\")}`}\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </InfoCard>\r\n                    </Grid>\r\n                    <Grid item xs={12} style={{ marginTop: 20 }}>\r\n                        <InfoCard\r\n                            title={\r\n                                <React.Fragment>\r\n                                    <Box display=\"flex \" style={{ fontSize: '1em', justifyContent: 'center', alignItems: 'center' }}>\r\n                                        <h4>ประวัติการรักษา</h4>\r\n                                    </Box>\r\n                                </React.Fragment>\r\n                            }\r\n                        >\r\n                            <TreatmentForm />\r\n                        </InfoCard>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CreateTreatmentPage","D:\\CTHS_TOEI\\src\\pages\\Dianosis\\Dianosis.js",["297","298"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, Grid, Typography, Button } from '@material-ui/core';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { GET_TREATMENTS_DOAGNOSIS } from './GraphQL/Querie'\r\nimport { useQuery } from '@apollo/client';\r\nimport moment from 'moment'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        boxAdmin: {},\r\n        display: 'flex',\r\n        '& div.MuiDataGrid-cell': {\r\n            color: 'white',\r\n        },\r\n        '& div.MuiDataGrid-colCellTitle': {\r\n            color: 'black',\r\n        },\r\n        '& div.MuiToolbar-root': {\r\n            color: 'white',\r\n        },\r\n        '& div.MuiTablePagination-actions': {\r\n            color: 'white',\r\n        },\r\n        '& div.MuiIconButton-label': {\r\n            color: 'white',\r\n        },\r\n        '& div.MuiDataGrid-colCellWrapper': {\r\n            backgroundColor: 'white',\r\n        },\r\n    },\r\n}));\r\n\r\nconst columns = [\r\n    { field: 'id', headerName: 'ID', width: 250, resizable: true },\r\n    {\r\n        field: 'createdAt',\r\n        headerName: 'Date',\r\n        width: 200,\r\n        resizable: true,\r\n    },\r\n    {\r\n        field: 'type',\r\n        headerName: 'Type',\r\n        width: 200,\r\n    },\r\n    {\r\n        field: 'name',\r\n        headerName: 'Name',\r\n        width: 200,\r\n        resizable: true,\r\n    },\r\n    {\r\n        field: 'lastname',\r\n        headerName: 'Lastname',\r\n        width: 200,\r\n        resizable: true,\r\n    },\r\n    {\r\n        field: 'idcardNumber',\r\n        headerName: 'Idcard Number',\r\n        width: 200,\r\n    },\r\n];\r\n\r\nconst Dianosispage = () => {\r\n    const classes = useStyles();\r\n    let navigate = useNavigate();\r\n    const { loading, error, data } = useQuery(GET_TREATMENTS_DOAGNOSIS);\r\n    if (loading) return 'Loading...';\r\n    if (error) return `Error! ${error.message}`;\r\n    return (\r\n        <React.Fragment className={classes.root}>\r\n            <Box className={classes.boxAdmin}>\r\n                <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n                    <Grid item xs={6}>\r\n                        <Typography paragraph style={{ fontWeight: 'bold' }} variant=\"h5\">\r\n                          Diagnosis\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6} align='right'>\r\n                        <Box style={{ alignItems: 'center', justifyContent: 'flex-end' }}>\r\n\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={0} alignItems=\"center\" justify=\"center\" style={{ marginTop: 20 }}>\r\n                    <Grid item xs={12}>\r\n                        <div style={{ height: 500, width: '100%', backgroundColor: 'white' }}>\r\n                            <DataGrid\r\n\t\t\t\t\t\t\t\trows={data.allTreatments.map((item) => ({\r\n                                    id: item._id,\r\n                                    createdAt: moment(new Date(item.createdAt)).format('DD/MM/YYYY'),\r\n                                    name: item.patient.firstname,\r\n                                    lastname: item.patient.lastname,\r\n                                    idcardNumber: item.patient.idcardNumber,\r\n                                    type: item.type\r\n                                }))}\r\n                                columns={columns}\r\n                                pagination\r\n                                pageSize={10}\r\n                                onRowClick={(row) => navigate(`/app/diagnosis/detail/${row.row.id}`)}\r\n\t\t\t\t\t\t\t/>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Dianosispage;\r\n","D:\\CTHS_TOEI\\src\\pages\\Dianosis\\Detail.js",["299","300"],"import React from \"react\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  TextField as MuiTextField,\r\n} from \"@material-ui/core\";\r\nimport { InfoCard } from \"@mystiny/ui\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport { useQuery, Query } from \"@apollo/client\";\r\nimport { GET_TREATMENT_BY_ID } from \"../Treatment/GraphQL/Querie\";\r\nimport { GET_PATIENT } from \"../Patients/GraphQL/Querie\";\r\nimport moment from \"moment\";\r\nimport TreatmentForm from \"../Treatment/Treatment-form\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  create: {\r\n    backgroundColor: green[500],\r\n    \"&:hover\": {\r\n      backgroundColor: green[700],\r\n    },\r\n  },\r\n}));\r\n\r\nconst DetailDiagnosisPage = () => {\r\n  const navigate = useNavigate();\r\n  const classes = useStyles();\r\n  let { id } = useParams();\r\n  const { loading, error, data } = useQuery(GET_TREATMENT_BY_ID, {\r\n    variables: {\r\n      id,\r\n    },\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const PatientId = data?.treatmentById?.patientId;\r\n\r\n  const {\r\n    loading: loadingPatient,\r\n    error: errorPatient,\r\n    data: dataPatient,\r\n  } = useQuery(GET_PATIENT, {\r\n    variables: {\r\n      id: PatientId,\r\n    },\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  if (loading) return \"...Loading\";\r\n  if (error) return `Error! ${error}`;\r\n  if (loadingPatient) return \"...Loading\";\r\n  if (errorPatient) return `Error! ${error}`;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Box>\r\n        <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n          <Grid item xs={6}>\r\n            <Typography\r\n              paragraph\r\n              style={{ fontWeight: \"bold\", fontSize: \"2em\" }}\r\n            >\r\n              <DescriptionIcon color=\"primary\" fontSize=\"small\" />{\" \"}\r\n              รายละเอียดการรักษา\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6} align=\"right\">\r\n            <Box\r\n              style={{ alignItems: \"center\", justifyContent: \"flex-end\" }}\r\n            ></Box>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <InfoCard\r\n              title={\r\n                <React.Fragment>\r\n                  <Box\r\n                    display=\"flex \"\r\n                    style={{\r\n                      fontSize: \"1em\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <h4>ข้อมูลผู้ป่วย</h4>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      onClick={() =>\r\n                        navigate(\r\n                          `/app/patients/detail/${PatientId}`\r\n                        )\r\n                      }\r\n                      style={{ marginLeft: 20 }}\r\n                      className={classes.create}\r\n                    >\r\n                      ดูข้อมูลเพิ่มเติม\r\n                    </Button>\r\n                  </Box>\r\n                </React.Fragment>\r\n              }\r\n              actionTopRight={\r\n                <Box display=\"flex\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={() => navigate(-1)}\r\n                  >\r\n                    ย้อนกลับ\r\n                  </Button>\r\n                </Box>\r\n              }\r\n            >\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={6}>\r\n                  <MuiTextField\r\n                    id=\"standard-read-only-input\"\r\n                    label=\"ชื่อ\"\r\n                    defaultValue={dataPatient.patientById.firstname}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <MuiTextField\r\n                    id=\"standard-read-only-input\"\r\n                    label=\"นามสกุล\"\r\n                    defaultValue={dataPatient.patientById.lastname}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <MuiTextField\r\n                    id=\"standard-read-only-input\"\r\n                    label=\"โรคประจำตัว\"\r\n                    defaultValue={dataPatient.patientById.congenitalDisease.toString()}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <MuiTextField\r\n                    id=\"standard-read-only-input\"\r\n                    label=\"วัน/เดือน/ปีเกิด\"\r\n                    defaultValue={`${moment(\r\n                      new Date(dataPatient.patientById.birthdate)\r\n                    ).format(\"DD-MM-YYYY\")}`}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </InfoCard>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} style={{ marginTop: 20 }}>\r\n          <InfoCard\r\n            title={\r\n              <React.Fragment>\r\n                <Box\r\n                  display=\"flex \"\r\n                  style={{\r\n                    fontSize: \"1em\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <h4>ข้อมูลเบื้องต้น</h4>\r\n                </Box>\r\n              </React.Fragment>\r\n            }\r\n          >\r\n            <TreatmentForm defaultdata={data} mode={\"diagnosis\"} />\r\n          </InfoCard>\r\n        </Grid>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DetailDiagnosisPage;\r\n","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Medicine.js",["301"],"import React from 'react';\r\nimport { Box, Grid, Typography, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { GET_MEDICINES } from './graphql/Queries';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t\t'& div.MuiDataGrid-cell': {\r\n\t\t\tcolor: 'white',\r\n\t\t},\r\n\t\t'& div.MuiDataGrid-colCellTitle': {\r\n\t\t\tcolor: 'black',\r\n\t\t},\r\n\t\t'& div.MuiToolbar-root': {\r\n\t\t\tcolor: 'white',\r\n\t\t},\r\n\t\t'& div.MuiTablePagination-actions': {\r\n\t\t\tcolor: 'white',\r\n\t\t},\r\n\t\t'& div.MuiIconButton-label': {\r\n\t\t\tcolor: 'white',\r\n\t\t},\r\n\t\t'& div.MuiDataGrid-colCellWrapper': {\r\n\t\t\tbackgroundColor: 'white',\r\n\t\t},\r\n\t},\r\n\tboxAdmin: {},\r\n}));\r\n\r\nconst columns = [\r\n\t{ field: 'id', headerName: 'ID', width: 300, resizable: true },\r\n\t{\r\n\t\tfield: 'name',\r\n\t\theaderName: 'Name',\r\n\t\twidth: 300,\r\n\t\tresizable: true,\r\n\t},\r\n\t{\r\n\t\tfield: 'description',\r\n\t\theaderName: 'Description',\r\n\t\twidth: 400,\r\n\t\tresizable: true,\r\n\t},\r\n\t{\r\n\t\tfield: 'amount',\r\n\t\theaderName: 'Amount',\r\n\t\twidth: 150,\r\n\t\tresizable: true,\r\n\t},\r\n\t{\r\n\t\tfield: 'unitType',\r\n\t\theaderName: 'Unit Type',\r\n\t\tresizable: true,\r\n\t\twidth: 200,\r\n\t},\r\n\t{\r\n\t\tfield: 'medType',\r\n\t\theaderName: 'Med Type',\r\n\t\tresizable: true,\r\n\t\twidth: 200,\r\n\t},\r\n];\r\n\r\nconst rows = [\r\n\t{ id: '1', name: 'Sara', description: 'แก้ปวด', amount: 500, unitType: 'ขวด' },\r\n\t{ id: '2', name: 'Para', description: 'แก้ปวด', amount: 500, unitType: 'ขวด' },\r\n];\r\n\r\nconst Medicinepage = () => {\r\n\tconst classes = useStyles();\r\n\tlet navigate = useNavigate();\r\n\tconst { loading, error, data } = useQuery(GET_MEDICINES);\r\n\tif (loading) return 'Loading...';\r\n\tif (error) return `Error! ${error.message}`;\r\n\r\n\tconsole.log(data);\r\n\treturn (\r\n\t\t<React.Fragment className={classes.root}>\r\n\t\t\t<Box className={classes.boxAdmin}>\r\n\t\t\t\t<Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={12} md={6}>\r\n\t\t\t\t\t\t<Typography variant=\"h5\" paragraph style={{ fontWeight: 'bolder' }}>\r\n\t\t\t\t\t\t\tDrug Storehouse\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} md={6} align=\"right\">\r\n\t\t\t\t\t\t<Box style={{ alignItems: 'center', justifyContent: 'flex-end' }}>\r\n\t\t\t\t\t\t\t<Link to=\"/app/medicine/drugstore/create\" style={{ textDecoration: 'none' }}>\r\n\t\t\t\t\t\t\t\t<Button startIcon={<AddIcon />} variant=\"contained\" color=\"primary\">\r\n\t\t\t\t\t\t\t\t\tCreate new medicine\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid container spacing={0} alignItems=\"center\" justify=\"center\" style={{ marginTop: 20 }}>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<div style={{ height: 500, width: '100%', backgroundColor: 'white' }}>\r\n\t\t\t\t\t\t\t<DataGrid\r\n\t\t\t\t\t\t\t\trows={data.allMedicines.map((item) => ({\r\n\t\t\t\t\t\t\t\t\tid: item._id,\r\n\t\t\t\t\t\t\t\t\tname: item.name,\r\n\t\t\t\t\t\t\t\t\tdescription: item.description,\r\n\t\t\t\t\t\t\t\t\tamount: item.amount,\r\n\t\t\t\t\t\t\t\t\tunitType: item.unitType,\r\n\t\t\t\t\t\t\t\t\tmedType: item.medType\r\n\t\t\t\t\t\t\t\t}))}\r\n\t\t\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\t\t\tpagination\r\n\t\t\t\t\t\t\t\tpageSize={10}\r\n\t\t\t\t\t\t\t\tonRowClick={(row) => navigate(`/app/medicine/drugstore/detail/${row.row.id}`)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Box>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Medicinepage;\r\n","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Create.js",[],"D:\\CTHS_TOEI\\src\\pages\\Medicine\\Prescription\\Prescription.js",["302","303","304"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box, Grid, Typography, Button } from \"@material-ui/core\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { GET_TREATMENTS_MEDICINE } from \"./GraphQL/Querie\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    boxAdmin: {},\r\n    display: \"flex\",\r\n    \"& div.MuiDataGrid-cell\": {\r\n      color: \"white\",\r\n    },\r\n    \"& div.MuiDataGrid-colCellTitle\": {\r\n      color: \"black\",\r\n    },\r\n    \"& div.MuiToolbar-root\": {\r\n      color: \"white\",\r\n    },\r\n    \"& div.MuiTablePagination-actions\": {\r\n      color: \"white\",\r\n    },\r\n    \"& div.MuiIconButton-label\": {\r\n      color: \"white\",\r\n    },\r\n    \"& div.MuiDataGrid-colCellWrapper\": {\r\n      backgroundColor: \"white\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst columns = [\r\n  { field: \"id\", headerName: \"ID\", width: 250, resizable: true },\r\n  {\r\n    field: \"createdAt\",\r\n    headerName: \"Date\",\r\n    width: 200,\r\n    resizable: true,\r\n  },\r\n  {\r\n    field: \"type\",\r\n    headerName: \"Type\",\r\n    width: 200,\r\n  },\r\n  {\r\n    field: \"name\",\r\n    headerName: \"Name\",\r\n    width: 200,\r\n    resizable: true,\r\n  },\r\n  {\r\n    field: \"lastname\",\r\n    headerName: \"Lastname\",\r\n    width: 200,\r\n    resizable: true,\r\n  },\r\n  {\r\n    field: \"idcardNumber\",\r\n    headerName: \"Idcard Number\",\r\n    width: 200,\r\n  },\r\n];\r\n\r\nconst Dianosispage = () => {\r\n  const classes = useStyles();\r\n  let navigate = useNavigate();\r\n  const { loading, error, data } = useQuery(GET_TREATMENTS_MEDICINE);\r\n  if (loading) return \"Loading...\";\r\n  if (error) return `Error! ${error.message}`;\r\n  return (\r\n    <React.Fragment className={classes.root}>\r\n      <Box className={classes.boxAdmin}>\r\n        <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n          <Grid item xs={6}>\r\n            <Typography paragraph style={{ fontWeight: \"bold\" }} variant=\"h5\">\r\n              Prescription\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6} align=\"right\">\r\n            <Box\r\n              style={{ alignItems: \"center\", justifyContent: \"flex-end\" }}\r\n            ></Box>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ marginTop: 20 }}\r\n        >\r\n          <Grid item xs={12}>\r\n            <div\r\n              style={{ height: 500, width: \"100%\", backgroundColor: \"white\" }}\r\n            >\r\n              <DataGrid\r\n                rows={data.allTreatments.map((item) => ({\r\n                  id: item._id,\r\n                  createdAt: moment(new Date(item.createdAt)).format(\r\n                    \"DD/MM/YYYY\"\r\n                  ),\r\n                  name: item.patient.firstname,\r\n                  lastname: item.patient.lastname,\r\n                  idcardNumber: item.patient.idcardNumber,\r\n                  type: item.type,\r\n                }))}\r\n                columns={columns}\r\n                pagination\r\n                pageSize={10}\r\n                // onRowClick={(row) => navigate(`/app/treatment/detail/${row.row.id}`)}\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Dianosispage;\r\n","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Detail.js",["305"],"import React from 'react';\r\nimport { Box, Grid, Typography, Button, makeStyles } from '@material-ui/core';\r\nimport { InfoCard } from '@mystiny/ui';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport MedicineForm from './Medicine-form';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { GET_MEDICINE } from './graphql/Queries';\r\nimport { useQuery } from '@apollo/client';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcreate: {\r\n\t\tbackgroundColor: green[500],\r\n\t\t'&:hover': {\r\n\t\t\tbackgroundColor: green[700],\r\n\t\t},\r\n\t},\r\n}));\r\n\r\nconst MedicineDetailPage = () => {\r\n\tconst classes = useStyles();\r\n\tconst navigate = useNavigate();\r\n\tlet { id } = useParams();\r\n\tconst { loading, error, data } = useQuery(GET_MEDICINE, {\r\n\t\tvariables: {\r\n\t\t\tid,\r\n\t\t},\r\n\t\tfetchPolicy: 'cache-and-network',\r\n\t});\r\n\r\n\tif (loading) return '...Loading';\r\n\tif (error) return `Error! ${error}`;\r\n    \r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Box>\r\n\t\t\t\t<Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Typography paragraph style={{ fontWeight: 'bold', fontSize: '2em' }}>\r\n\t\t\t\t\t\t\t<DescriptionIcon color=\"primary\" fontSize=\"small\" /> รายละเอียดยา\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6} align=\"right\">\r\n\t\t\t\t\t\t<Box style={{ alignItems: 'center', justifyContent: 'flex-end' }}></Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<InfoCard\r\n\t\t\t\t\t\t\ttitle=\"ข้อมูลยา\"\r\n\t\t\t\t\t\t\tactionTopRight={\r\n\t\t\t\t\t\t\t\t<Box display=\"flex\">\r\n\t\t\t\t\t\t\t\t\t{/* <Button\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => navigate(`/app/treatment/create/patientId/${id}`)}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ marginRight: 10 }}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.create}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tสร้างประวัติการรักษา\r\n\t\t\t\t\t\t\t\t\t</Button> */}\r\n\t\t\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"secondary\" onClick={() => navigate(-1)}>\r\n\t\t\t\t\t\t\t\t\t\tย้อนกลับ\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MedicineForm defaultdata={data} mode={'update'} />\r\n\t\t\t\t\t\t</InfoCard>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Box>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default MedicineDetailPage;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Treatment-form.js",["306","307","308","309","310","311","312","313","314","315","316"],"D:\\CTHS_TOEI\\src\\pages\\Dianosis\\Diagnosis-form.js",["317","318","319","320","321","322","323","324","325"],"import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControlLabel,\r\n  Button,\r\n  TextField as MuiTextField,\r\n} from \"@material-ui/core\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField, Checkbox, Radio, Select } from \"final-form-material-ui\";\r\nimport moment from 'moment'\r\n\r\nconst DiagnosisForm = (props) => {\r\n  const { mode, defaultdata } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item={\"true\"} xs={6}>\r\n        <Field\r\n          fullWidth\r\n          required\r\n          name=\"detail\"\r\n          component={TextField}\r\n          type=\"text\"\r\n          label=\"รายละเอียด\"\r\n          variant=\"outlined\"\r\n          style={{ width: \"100%\" }}\r\n          multiline\r\n          rows={5}\r\n        />\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        <Field\r\n          fullWidth\r\n          required\r\n          name=\"advice\"\r\n          component={TextField}\r\n          type=\"text\"\r\n          label=\"คำแนะนำ\"\r\n          variant=\"outlined\"\r\n          style={{ width: \"100%\" }}\r\n          multiline\r\n          rows={5}\r\n        />\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        <Field\r\n          id=\"date\"\r\n          type=\"date\"\r\n          label=\"วันนัดหมอ\"\r\n          variant=\"outlined\"\r\n          style={{ width: \"100%\" }}\r\n          required={true}\r\n          component={TextField}\r\n          name=\"followUpDate\"\r\n          defaultValue={`${moment(new Date()).format(\r\n            \"YYYY-MM-DD\"\r\n          )}`}\r\n        />\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        <Field\r\n          fullWidth\r\n          required\r\n          name=\"followUpDetail\"\r\n          component={TextField}\r\n          type=\"text\"\r\n          label=\"รายละเอียดการนัด\"\r\n          variant=\"outlined\"\r\n          style={{ width: \"100%\" }}\r\n          multiline\r\n          rows={5}\r\n        />\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default DiagnosisForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\GraphQL\\Querie.js",[],"D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Medicine-form.js",["326","327","328","329","330","331","332","333","334","335","336"],"import React, { useCallback, useEffect, useState } from 'react';\r\nimport {\r\n\tGrid,\r\n\tTypography,\r\n\tMenuItem,\r\n\tRadioGroup,\r\n\tFormControlLabel,\r\n\tFormControl,\r\n\tFormLabel,\r\n\tButton,\r\n\tChip,\r\n\tNativeSelect,\r\n\tInputBase,\r\n\tInputLabel,\r\n} from '@material-ui/core';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { TextField, Radio, Select } from 'final-form-material-ui';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_MEDICINE, UPDATE_MEDICINE_BY_ID } from './graphql/Mutation';\r\nimport { GET_MEDICINES } from './graphql/Queries';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t'& .MuiTextField-root': {\r\n\t\t\twidth: '25ch',\r\n\t\t},\r\n\t},\r\n\tformControl: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tminWidth: 120,\r\n\t\tmaxWidth: 300,\r\n\t},\r\n\tchips: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\tchip: {\r\n\t\tmargin: 2,\r\n\t},\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n\troot: {\r\n\t\t'label + &': {\r\n\t\t\tmarginTop: theme.spacing(3),\r\n\t\t},\r\n\t},\r\n\tinput: {\r\n\t\tborderRadius: 4,\r\n\t\tposition: 'relative',\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\tborder: '1px solid #ced4da',\r\n\t\tfontSize: 16,\r\n\t\twidth: '100%',\r\n\t\tpadding: '10px 26px 10px 12px',\r\n\t\ttransition: theme.transitions.create(['border-color', 'box-shadow']),\r\n\t\tfontFamily: [\r\n\t\t\t'-apple-system',\r\n\t\t\t'BlinkMacSystemFont',\r\n\t\t\t'\"Segoe UI\"',\r\n\t\t\t'Roboto',\r\n\t\t\t'\"Helvetica Neue\"',\r\n\t\t\t'Arial',\r\n\t\t\t'sans-serif',\r\n\t\t\t'\"Apple Color Emoji\"',\r\n\t\t\t'\"Segoe UI Emoji\"',\r\n\t\t\t'\"Segoe UI Symbol\"',\r\n\t\t].join(','),\r\n\t\t'&:focus': {\r\n\t\t\tborderRadius: 4,\r\n\t\t\tborderColor: '#80bdff',\r\n\t\t\tboxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n\t\t},\r\n\t},\r\n}))(InputBase);\r\n\r\nconst MedicineForm = (props) => {\r\n\tconst { mode, defaultdata } = props;\r\n\tlet navigate = useNavigate();\r\n\tconst classes = useStyles();\r\n\tconst [metType, setMedType] = useState('');\r\n\r\n\tconst [addMedicine] = useMutation(ADD_MEDICINE);\r\n\tconst [updateMedicine] = useMutation(UPDATE_MEDICINE_BY_ID);\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetMedType(event.target.value);\r\n\t};\r\n\r\n\tconst normalizeAmount = (value) => {\r\n\t\tif (!value) return value;\r\n\t\tconst onlyNums = value.replace(/[^\\d]/g, '');\r\n\t\tlet number = parseFloat(onlyNums);\r\n\t\treturn number;\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (mode === 'update') {\r\n\t\t\tsetMedType(defaultdata.medicineById.medType);\r\n\t\t\tconsole.log(defaultdata.medicineById);\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst validate = values => {\r\n\t\tconst errors = {}\r\n\t\tif (!values.name) {\r\n\t\t\terrors.name = 'Required'\r\n\t\t}\r\n\t\tif (!values.description) {\r\n\t\t\terrors.description = 'Required'\r\n\t\t}\r\n\t\tif (!values.amount) {\r\n\t\t\terrors.amount = 'Required'\r\n\t\t}\r\n\t\tif (!values.unitType) {\r\n\t\t\terrors.unitType = 'Required'\r\n\t\t}\r\n\r\n\t\treturn errors\r\n\t}\r\n\r\n\tconst onSubmitCreate = useCallback(\r\n\t\tasync (value) => {\r\n\t\t\tconsole.log('create ja')\r\n\t\t\tconst variables = {\r\n\t\t\t\trecord: {\r\n\t\t\t\t\tmedType: metType,\r\n\t\t\t\t\tname: value.name,\r\n\t\t\t\t\tdescription: value.description,\r\n\t\t\t\t\tamount: value.amount,\r\n\t\t\t\t\tunitType: value.unitType,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t\ttry {\r\n\t\t\t\tawait addMedicine({ variables, refetchQueries: [{ query: GET_MEDICINES }] });\r\n\t\t\t\tsetMedType('');\r\n\t\t\t\talert('บันทึกข้อมูลสำเร็จ');\r\n\t\t\t\tnavigate(`/app/medicine/drugstore`);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\talert('เกิดข้อผิดพลาด');\r\n\t\t\t}\r\n\t\t},\r\n\t\t[addMedicine, metType]\r\n\t);\r\n\r\n\tconst onSubmitUpdate = useCallback(\r\n\t\tasync (value) => {\r\n\t\t\tconst variables = {\r\n\t\t\t\tid: defaultdata.medicineById._id,\r\n\t\t\t\trecord: {\r\n\t\t\t\t\tmedType: metType,\r\n\t\t\t\t\tname: value.name,\r\n\t\t\t\t\tdescription: value.description,\r\n\t\t\t\t\tamount: value.amount,\r\n\t\t\t\t\tunitType: value.unitType,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t\ttry {\r\n\t\t\t\tawait updateMedicine({ variables, refetchQueries: [{ query: GET_MEDICINES }] });\r\n\t\t\t\tsetMedType('');\r\n\t\t\t\talert('บันทึกข้อมูลสำเร็จ');\r\n\t\t\t\tnavigate(`/app/medicine/drugstore`);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\talert('เกิดข้อผิดพลาด' + metType);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[updateMedicine, metType]\r\n\t);\r\n\tconst onSubmit = mode === 'update' ? onSubmitUpdate : onSubmitCreate;\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Form\r\n\t\t\t\tonSubmit={onSubmit}\r\n\t\t\t\tvalidate={validate}\r\n\t\t\t\trender={({ handleSubmit, submitting }) => (\r\n\t\t\t\t\t<form className={classes.root}  autoComplete=\"true\" onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t{mode === 'update' ? (\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"ชื่อ\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tinitialValue={defaultdata.medicineById.name}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"ชื่อ\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t{mode === 'update' ? (\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"คำอธิบายยา\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tinitialValue={defaultdata.medicineById.description}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"คำอธิบายยา\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t{mode === 'update' ? (\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tname=\"amount\"\r\n\t\t\t\t\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"จำนวน\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tinitialValue={defaultdata.medicineById.amount}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tparse={normalizeAmount}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tname=\"amount\"\r\n\t\t\t\t\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"จำนวน\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tparse={normalizeAmount}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t{mode === 'update' ? (\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tname=\"unitType\"\r\n\t\t\t\t\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"ประเภทหน่วย\"\r\n\t\t\t\t\t\t\t\t\t\tinitialValue={defaultdata.medicineById.unitType}\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tname=\"unitType\"\r\n\t\t\t\t\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"ประเภทหน่วย\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t{mode === 'update' ? (\r\n\t\t\t\t\t\t\t\t\t<FormControl style={{ width: '100%' }}>\r\n\t\t\t\t\t\t\t\t\t\t<InputLabel id=\"demo-mutiple-name-label\">ประเภท</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t<NativeSelect\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"demo-customized-select-native\"\r\n\t\t\t\t\t\t\t\t\t\t\tinput={<BootstrapInput />}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={metType}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<option aria-label=\"None\" value=\" \" />\r\n\t\t\t\t\t\t\t\t\t\t\t<option value={'MEDICINE'}>ยา</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value={'SUPPLY'}>เวชภัณฑ์</option>\r\n\t\t\t\t\t\t\t\t\t\t</NativeSelect>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<FormControl style={{ width: '100%' }}>\r\n\t\t\t\t\t\t\t\t\t\t<InputLabel id=\"demo-mutiple-name-label\">ประเภท</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t<NativeSelect\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"demo-customized-select-native\"\r\n\t\t\t\t\t\t\t\t\t\t\tinput={<BootstrapInput />}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={metType}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<option aria-label=\"None\" value=\" \" />\r\n\t\t\t\t\t\t\t\t\t\t\t<option value={'MEDICINE'}>ยา</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value={'SUPPLY'}>เวชภัณฑ์</option>\r\n\t\t\t\t\t\t\t\t\t\t</NativeSelect>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12} style={{ marginTop: 16, textAlign: 'center', width: '100%' }}>\r\n\t\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={submitting}>\r\n\t\t\t\t\t\t\t\t\tบันทึกข้อมูล\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\nexport default MedicineForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\graphql\\Queries.js",[],"D:\\CTHS_TOEI\\src\\pages\\Treatment\\PainForm.js",[],"D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\graphql\\Mutation.js",[],"D:\\CTHS_TOEI\\src\\pages\\Treatment\\FeverForm.js",["337","338","339"],"import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControlLabel,\r\n  Checkbox as CheckboxDianosis,\r\n  TextField as MuiTextField,\r\n} from \"@material-ui/core\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField, Checkbox, Radio, Select } from \"final-form-material-ui\";\r\n\r\nconst FeverForm = (props) => {\r\n  const { mode, defaultdata } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container={\"true\"} item sx={12} spacing={2}>\r\n        <Grid item={\"true\"} xs={6} direction=\"column\">\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"ไข้\"\r\n                control={\r\n                  <Field\r\n                    name=\"isFever\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isFever}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isFever}\r\n                label=\"ไข้\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"ไข้\"\r\n                control={\r\n                  <Field name=\"isFever\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"ไอ\"\r\n                control={\r\n                  <Field\r\n                    name=\"isCough\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isCough}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isCough}\r\n                label=\"ไอ\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"ไอ\"\r\n                control={\r\n                  <Field name=\"isCough\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"เสมหะ\"\r\n                control={\r\n                  <Field\r\n                    name=\"isPhlegm\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isPhlegm}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isPhlegm}\r\n                label=\"เสมหะ\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"เสมหะ\"\r\n                control={\r\n                  <Field name=\"isPhlegm\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"น้ำมูก\"\r\n                control={\r\n                  <Field\r\n                    name=\"isSnot\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isSnot}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isSnot}\r\n                label=\"น้ำมูก\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"น้ำมูก\"\r\n                control={\r\n                  <Field name=\"isSnot\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"ปวดศีรษะ\"\r\n                control={\r\n                  <Field\r\n                    name=\"isHeadache\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isHeadache}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isHeadache}\r\n                label=\"ปวดศีรษะ\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"ปวดศีรษะ\"\r\n                control={\r\n                  <Field\r\n                    name=\"isHeadache\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"คัดจมูก\"\r\n                control={\r\n                  <Field\r\n                    name=\"isStuffy\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isStuffy}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isStuffy}\r\n                label=\"คัดจมูก\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"คัดจมูก\"\r\n                control={\r\n                  <Field name=\"isStuffy\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item={\"true\"} xs={6}>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"เบื่ออาหาร\"\r\n                control={\r\n                  <Field\r\n                    name=\"isAnorexia\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isAnorexia}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isAnorexia}\r\n                label=\"เบื่ออาหาร\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"เบื่ออาหาร\"\r\n                control={\r\n                  <Field\r\n                    name=\"isAnorexia\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"เจ็บคอ\"\r\n                control={\r\n                  <Field\r\n                    name=\"isSoreThroat\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isSoreThroat}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isSoreThroat}\r\n                label=\"เจ็บคอ\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"เจ็บคอ\"\r\n                control={\r\n                  <Field\r\n                    name=\"isSoreThroat\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"คันตา\"\r\n                control={\r\n                  <Field\r\n                    name=\"isEyeItching\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isEyeItching}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isEyeItching}\r\n                label=\"คันตา\"\r\n              />\r\n            ) :  (\r\n              <FormControlLabel\r\n                label=\"คันตา\"\r\n                control={\r\n                  <Field\r\n                    name=\"isEyeItching\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"Injected pharynx\"\r\n                control={\r\n                  <Field\r\n                    name=\"isInjectedPharynx\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isInjectedPharynx}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isInjectedPharynx}\r\n                label=\"Injected pharynx\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"Injected pharynx\"\r\n                control={\r\n                  <Field\r\n                    name=\"isInjectedPharynx\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"Exudates\"\r\n                control={\r\n                  <Field\r\n                    name=\"isExudates\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isExudates}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isExudates}\r\n                label=\"Exudates\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"Exudates\"\r\n                control={\r\n                  <Field\r\n                    name=\"isExudates\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"Lungs \"\r\n                control={\r\n                  <Field\r\n                    name=\"isLungClear\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isLungClear}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isLungClear}\r\n                label=\"Lungs\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"Lungs \"\r\n                control={\r\n                  <Field\r\n                    name=\"isLungClear\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item={\"true\"} xs={12}>\r\n          {mode === \"update\" ? (\r\n            <Field\r\n              fullWidth\r\n              required\r\n              name=\"physicalExamination\"\r\n              component={TextField}\r\n              type=\"text\"\r\n              label=\"การตรวจสอบทางกายภาพ\"\r\n              variant=\"outlined\"\r\n              style={{ width: \"100%\" }}\r\n              initialValue={defaultdata.treatmentById.physicalExamination}\r\n            />\r\n          ) : mode === \"diagnosis\" ? (\r\n            <MuiTextField\r\n              id=\"standard-read-only-input\"\r\n              label=\"การตรวจสอบทางกายภาพ\"\r\n              defaultValue={defaultdata.treatmentById.physicalExamination}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          ) : (\r\n            <Field\r\n              fullWidth\r\n              required\r\n              name=\"physicalExamination\"\r\n              component={TextField}\r\n              type=\"text\"\r\n              label=\"การตรวจสอบทางกายภาพ\"\r\n              variant=\"outlined\"\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default FeverForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\AccidentForm.js",["340","341","342"],"import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControlLabel,\r\n  TextField as MuiTextField,\r\n  Checkbox as CheckboxDianosis,\r\n} from \"@material-ui/core\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField, Checkbox, Radio, Select } from \"final-form-material-ui\";\r\nimport moment from \"moment\";\r\n\r\nconst AccidentForm = (props) => {\r\n  const { mode, defaultdata } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item={\"true\"} xs={12}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"woundArea\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"บาดเเผลบริเวณ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n            initialValue={defaultdata.treatmentById.woundArea}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"อาการสำคัญ\"\r\n            defaultValue={defaultdata.treatmentById.woundArea}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"woundArea\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"บาดเเผลบริเวณ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={12}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"woundLocation\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"สถานที่เกิดเหตุ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n            initialValue={defaultdata.treatmentById.woundLocation}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"สถานที่เกิดเหตุ\"\r\n            defaultValue={defaultdata.treatmentById.woundLocation}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"woundLocation\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"สถานที่เกิดเหตุ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={12}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            id=\"date\"\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"วันที่เกิดเหตุ\"\r\n            style={{ width: \"100%\" }}\r\n            required={true}\r\n            component={TextField}\r\n            name=\"woundDate\"\r\n            initialValue={`${moment(defaultdata.treatmentById.woundDate).format(\r\n              \"YYYY-MM-DD\"\r\n            )}`}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"วันที่เกิดเหตุ\"\r\n            defaultValue={`${moment(new Date()).format(\"YYYY-MM-DD\")}`}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            id=\"date\"\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"วันที่เกิดเหตุ\"\r\n            style={{ width: \"100%\" }}\r\n            required={true}\r\n            component={TextField}\r\n            name=\"woundDate\"\r\n            defaultValue={`${moment(new Date()).format(\"YYYY-MM-DD\")}`}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={4}>\r\n        {mode === \"update\" ? (\r\n          <FormControlLabel\r\n            label=\"เคยเข้ารับการรักษามาเเล้ว\"\r\n            control={\r\n              <Field\r\n                name=\"isTreatBefore\"\r\n                component={Checkbox}\r\n                type=\"checkbox\"\r\n                initialValue={defaultdata.treatmentById.isTreatBefore}\r\n              />\r\n            }\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <FormControlLabel\r\n            disabled\r\n            control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n            checked={defaultdata.treatmentById.isTreatBefore}\r\n            label=\"เคยเข้ารับการรักษามาเเล้ว\"\r\n          />\r\n        ) : (\r\n          <FormControlLabel\r\n            label=\"เคยเข้ารับการรักษามาเเล้ว\"\r\n            control={\r\n              <Field\r\n                name=\"isTreatBefore\"\r\n                component={Checkbox}\r\n                type=\"checkbox\"\r\n              />\r\n            }\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={4}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"treatBeforeDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ที่\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            initialValue={defaultdata.treatmentById.treatBeforeDetail}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"ที่\"\r\n            defaultValue={defaultdata.treatmentById.treatBeforeDetail}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"treatBeforeDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ที่\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={4}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            id=\"date\"\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"เมื่อวันที่\"\r\n            style={{ width: \"100%\" }}\r\n            required={true}\r\n            component={TextField}\r\n            name=\"treatBeforeDate\"\r\n            defaultValue={`${moment(\r\n              defaultdata.treatmentById.treatBeforeDate\r\n            ).format(\"YYYY-MM-DD\")}`}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"เมื่อวันที่\"\r\n            defaultValue={`${moment(\r\n              defaultdata.treatmentById.treatBeforeDate\r\n            ).format(\"YYYY-MM-DD\")}`}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            id=\"date\"\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"เมื่อวันที่\"\r\n            style={{ width: \"100%\" }}\r\n            required={true}\r\n            component={TextField}\r\n            name=\"treatBeforeDate\"\r\n            defaultValue={`${moment(new Date()).format(\"YYYY-MM-DD\")}`}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={12} align=\"center\">\r\n        {mode === \"update\" ? (\r\n          <React.Fragment>\r\n            <FormControlLabel\r\n              label=\"ผู้ป่วยฉุกเฉิน\"\r\n              control={\r\n                <Field\r\n                  name=\"isEmergency\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isEmergency}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"เบิกประกันอุบัติเหตุ\"\r\n              control={\r\n                <Field\r\n                  name=\"isInsurance\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isInsurance}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"สวมหมวกันน็อค/คาดเข็มขัด\"\r\n              control={\r\n                <Field\r\n                  name=\"isSafety\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isSafety}\r\n                />\r\n              }\r\n            />\r\n          </React.Fragment>\r\n        ) : mode === \"diagnosis\" ? (\r\n          <React.Fragment>\r\n            <FormControlLabel\r\n              disabled\r\n              control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n              checked={defaultdata.treatmentById.isEmergency}\r\n              label=\"ผู้ป่วยฉุกเฉิน\"\r\n            />\r\n            <FormControlLabel\r\n              disabled\r\n              control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n              checked={defaultdata.treatmentById.isInsurance}\r\n              label=\"เบิกประกันอุบัติเหตุ\"\r\n            />\r\n            <FormControlLabel\r\n              disabled\r\n              control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n              checked={defaultdata.treatmentById.isSafety}\r\n              label=\"สวมหมวกันน็อค/คาดเข็มขัด\"\r\n            />\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            <FormControlLabel\r\n              label=\"ผู้ป่วยฉุกเฉิน\"\r\n              control={\r\n                <Field\r\n                  name=\"isEmergency\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"เบิกประกันอุบัติเหตุ\"\r\n              control={\r\n                <Field\r\n                  name=\"isInsurance\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"สวมหมวกันน็อค/คาดเข็มขัด\"\r\n              control={\r\n                <Field name=\"isSafety\" component={Checkbox} type=\"checkbox\" />\r\n              }\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default AccidentForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Diarrhea.js",["343","344","345"],"import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControlLabel,\r\n  Checkbox as CheckboxDianosis,\r\n  TextField as MuiTextField,\r\n} from \"@material-ui/core\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField, Checkbox, Radio, Select } from \"final-form-material-ui\";\r\n\r\nconst DiarrheaForm = (props) => {\r\n  const { mode, defaultdata } = props;\r\n  const normalizeAmountdiarrhea = (value) => {\r\n    if (!value) return value;\r\n    const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n    let number = parseFloat(onlyNums);\r\n    return number;\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"diarrheaAmount\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"จำนวนครั้งในการถ่าย\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            parse={normalizeAmountdiarrhea}\r\n            initialValue={defaultdata.treatmentById.diarrheaAmount}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"จำนวนครั้งในการถ่าย\"\r\n            defaultValue={defaultdata.treatmentById.diarrheaAmount}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"diarrheaAmount\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"จำนวนครั้งในการถ่าย\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            parse={normalizeAmountdiarrhea}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"diarrheaDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ลักษณะอุจจาระ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            initialValue={defaultdata.treatmentById.diarrheaDetail}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"ลักษณะอุจจาระ\"\r\n            defaultValue={defaultdata.treatmentById.diarrheaDetail}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"diarrheaDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ลักษณะอุจจาระ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"stomachache\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ลักษณะการปวดท้อง\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            initialValue={defaultdata.treatmentById.stomachache}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"ลักษณะการปวดท้อง\"\r\n            defaultValue={defaultdata.treatmentById.stomachache}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"stomachache\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ลักษณะการปวดท้อง\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"bowelSound\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"bowel sound\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            initialValue={defaultdata.treatmentById.bowelSound}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"bowelSound\"\r\n            defaultValue={defaultdata.treatmentById.bowelSound}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"bowelSound\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"bowel sound\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={12} align=\"center\">\r\n        {mode === \"update\" ? (\r\n          <React.Fragment>\r\n            <FormControlLabel\r\n              label=\"คลื่นไส้/อาเจียน\"\r\n              control={\r\n                <Field\r\n                  name=\"isVomit\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isVomit}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"อุจาระมีมูลเลือด\"\r\n              control={\r\n                <Field\r\n                  name=\"isFluxStool\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isFluxStool}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีไข้\"\r\n              control={\r\n                <Field\r\n                  name=\"isFever\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isFever}\r\n                />\r\n              }\r\n            />\r\n          </React.Fragment>\r\n        ) : mode === \"diagnosis\" ? (\r\n          <React.Fragment>\r\n            <FormControlLabel\r\n              disabled\r\n              control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n              checked={defaultdata.treatmentById.isVomit}\r\n              label=\"คลื่นไส้/อาเจียน\"\r\n            />\r\n            <FormControlLabel\r\n              disabled\r\n              control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n              checked={defaultdata.treatmentById.isFluxStool}\r\n              label=\"อุจาระมีมูลเลือด\"\r\n            />\r\n            <FormControlLabel\r\n              disabled\r\n              control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n              checked={defaultdata.treatmentById.isFever}\r\n              label=\"มีไข้\"\r\n            />\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            <FormControlLabel\r\n              label=\"คลื่นไส้/อาเจียน\"\r\n              control={\r\n                <Field name=\"isVomit\" component={Checkbox} type=\"checkbox\" />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"อุจาระมีมูลเลือด\"\r\n              control={\r\n                <Field\r\n                  name=\"isFluxStool\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีไข้\"\r\n              control={\r\n                <Field name=\"isFever\" component={Checkbox} type=\"checkbox\" />\r\n              }\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={12}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"physicalExamination\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"การตรวจสอบทางกายภาพ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            initialValue={defaultdata.treatmentById.physicalExamination}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"การตรวจสอบทางกายภาพ\"\r\n            defaultValue={defaultdata.treatmentById.physicalExamination}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"physicalExamination\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"การตรวจสอบทางกายภาพ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default DiarrheaForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\EyesForm.js",["346","347","348"],"import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControlLabel,\r\n  Checkbox as CheckboxDianosis,\r\n  TextField as MuiTextField,\r\n} from \"@material-ui/core\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField, Checkbox, Radio, Select } from \"final-form-material-ui\";\r\n\r\nconst EyeForm = (props) => {\r\n  const { mode, defaultdata } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container={\"true\"} item sx={12} spacing={2}>\r\n        <Grid item={\"true\"} xs={6} direction=\"column\">\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"ตาซ้าย\"\r\n                control={\r\n                  <Field\r\n                    name=\"leftEye\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.leftEye}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.leftEye}\r\n                label=\"ตาซ้าย\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"ตาซ้าย\"\r\n                control={\r\n                  <Field name=\"leftEye\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"ตาขวา\"\r\n                control={\r\n                  <Field\r\n                    name=\"rightEye\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.rightEye}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.rightEye}\r\n                label=\"ตาขวา\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"ตาขวา\"\r\n                control={\r\n                  <Field name=\"rightEye\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"มีอาการปวด\"\r\n                control={\r\n                  <Field\r\n                    name=\"isPain\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isPain}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isPain}\r\n                label=\"มีอาการปวด\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"มีอาการปวด\"\r\n                control={\r\n                  <Field name=\"isPain\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"มีอาการคัน\"\r\n                control={\r\n                  <Field\r\n                    name=\"isItching\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isItching}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isItching}\r\n                label=\"มีอาการคัน\"\r\n              />\r\n            ) :  (\r\n              <FormControlLabel\r\n                label=\"มีอาการคัน\"\r\n                control={\r\n                  <Field\r\n                    name=\"isItching\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"เป็นโรคตาแดง\"\r\n                control={\r\n                  <Field\r\n                    name=\"isConjunctivitis\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isConjunctivitis}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isConjunctivitis}\r\n                label=\"เป็นโรคตาแดง\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"เป็นโรคตาแดง\"\r\n                control={\r\n                  <Field\r\n                    name=\"isConjunctivitis\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"มีอาการเจ็บ\"\r\n                control={\r\n                  <Field\r\n                    name=\"isSore\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isSore}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isSore}\r\n                label=\"มีอาการเจ็บ\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"มีอาการเจ็บ\"\r\n                control={\r\n                  <Field name=\"isSore\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === 'update' ? (\r\n              <FormControlLabel\r\n              label=\"มีอาการระคายเคือง\"\r\n              control={\r\n                <Field\r\n                  name=\"isIrritation\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isIrritation}\r\n                />\r\n              }\r\n            />\r\n            ): mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isIrritation}\r\n                label=\"มีอาการระคายเคือง\"\r\n              />\r\n            ) :(\r\n              <FormControlLabel\r\n              label=\"มีอาการระคายเคือง\"\r\n              control={\r\n                <Field\r\n                  name=\"isIrritation\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                />\r\n              }\r\n            />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n\r\n\r\n        <Grid item={\"true\"} xs={6}>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"มีอาการบวม\"\r\n                control={\r\n                  <Field\r\n                    name=\"isSwelling\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isSwelling}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isSwelling}\r\n                label=\"มีอาการบวม\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"มีอาการบวม\"\r\n                control={\r\n                  <Field\r\n                    name=\"isSwelling\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"น้ำตาไหล\"\r\n                control={\r\n                  <Field\r\n                    name=\"isTear\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isTear}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isTear}\r\n                label=\"น้ำตาไหล\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"น้ำตาไหล\"\r\n                control={\r\n                  <Field name=\"isTear\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"ตาพร่ามัว\"\r\n                control={\r\n                  <Field\r\n                    name=\"isBlurred\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isBlurred}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isBlurred}\r\n                label=\"ตาพร่ามัว\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"ตาพร่ามัว\"\r\n                control={\r\n                  <Field\r\n                    name=\"isBlurred\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"ขี้ตาเยอะ\"\r\n                control={\r\n                  <Field\r\n                    name=\"isGum\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isGum}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isGum}\r\n                label=\"ขี้ตาเยอะ\"\r\n              />\r\n            ) :(\r\n              <FormControlLabel\r\n                label=\"ขี้ตาเยอะ\"\r\n                control={\r\n                  <Field name=\"isGum\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"เป็นหนอง\"\r\n                control={\r\n                  <Field\r\n                    name=\"isPurulent\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isPurulent}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isPurulent}\r\n                label=\"เป็นหนอง\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"เป็นหนอง\"\r\n                control={\r\n                  <Field\r\n                    name=\"isPurulent\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"สิ่งเเปลกปลอมเข้าดวงตา\"\r\n                control={\r\n                  <Field\r\n                    name=\"isMatter\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isMatter}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isMatter}\r\n                label=\"สิ่งเเปลกปลอมเข้าดวงตา\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"สิ่งเเปลกปลอมเข้าดวงตา\"\r\n                control={\r\n                  <Field name=\"isMatter\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item={\"true\"} xs={12}>\r\n          {mode === \"update\" ? (\r\n            <Field\r\n              fullWidth\r\n              required\r\n              name=\"physicalExamination\"\r\n              component={TextField}\r\n              type=\"text\"\r\n              label=\"การตรวจสอบทางกายภาพ\"\r\n              variant=\"outlined\"\r\n              style={{ width: \"100%\" }}\r\n              initialValue={defaultdata.treatmentById.physicalExamination}\r\n            />\r\n          ) : mode === \"diagnosis\" ? (\r\n            <MuiTextField\r\n              id=\"standard-read-only-input\"\r\n              label=\"การตรวจสอบทางกายภาพ\"\r\n              defaultValue={defaultdata.treatmentById.physicalExamination}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          ) : (\r\n            <Field\r\n              fullWidth\r\n              required\r\n              name=\"physicalExamination\"\r\n              component={TextField}\r\n              type=\"text\"\r\n              label=\"การตรวจสอบทางกายภาพ\"\r\n              variant=\"outlined\"\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default EyeForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\ConAccidentForm.js",["349","350","351","352","353","354","355"],"import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControlLabel,\r\n  InputBase,\r\n  FormControl,\r\n  InputLabel,\r\n  NativeSelect,\r\n  Checkbox as CheckboxDianosis,\r\n  TextField as MuiTextField,\r\n  MenuItem,\r\n  Select as SelectDiagnosis,\r\n} from \"@material-ui/core\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField, Checkbox, Radio, Select } from \"final-form-material-ui\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"100%\",\r\n    padding: \"10px 26px 10px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      borderRadius: 4,\r\n      borderColor: \"#80bdff\",\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst ConAccidentForm = (props) => {\r\n  const { mode, defaultdata, conAccident } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"moreDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ลักษณะบาดเเผล\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={3}\r\n            initialValue={defaultdata.treatmentById.moreDetail}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"ลักษณะบาดเเผล\"\r\n            defaultValue={defaultdata.treatmentById.moreDetail}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            multiline\r\n            rows={3}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"moreDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ลักษณะบาดเเผล\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={3}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"advice\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"คำแนะนำ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={3}\r\n            initialValue={defaultdata.treatmentById.advice}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"คำแนะนำ\"\r\n            defaultValue={defaultdata.treatmentById.advice}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            multiline\r\n            rows={3}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"advice\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"คำแนะนำ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={3}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        {mode === \"diagnosis\" ? (\r\n          <FormControl style={{ width: \"100%\" }} variant=\"outlined\">\r\n            <SelectDiagnosis\r\n              labelId=\"demo-simple-select-readonly-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={conAccident}\r\n              inputProps={{ readOnly: true }}\r\n              name=\"Symthom\"\r\n            >\r\n              <MenuItem value={\"WORSE\"}>แย่ลง</MenuItem>\r\n              <MenuItem value={\"SAME\"}>เท่าเดิม</MenuItem>\r\n              <MenuItem value={\"BETTER\"}>ดีขึ้น</MenuItem>\r\n            </SelectDiagnosis>\r\n          </FormControl>\r\n        ) : (\r\n          <FormControl style={{ width: \"100%\" }} variant=\"outlined\">\r\n            <SelectDiagnosis\r\n              labelId=\"demo-simple-select-readonly-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={conAccident}\r\n              onChange={props.handleChangeAccident}\r\n              name=\"Symthom\"\r\n            >\r\n              <MenuItem value={\"WORSE\"}>แย่ลง</MenuItem>\r\n              <MenuItem value={\"SAME\"}>เท่าเดิม</MenuItem>\r\n              <MenuItem value={\"BETTER\"}>ดีขึ้น</MenuItem>\r\n            </SelectDiagnosis>\r\n          </FormControl>\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <FormControlLabel\r\n            label=\"ผู้ป่วยเบิกประกัน\"\r\n            control={\r\n              <Field\r\n                name=\"isInsurance\"\r\n                component={Checkbox}\r\n                type=\"checkbox\"\r\n                initialValue={defaultdata.treatmentById.isInsurance}\r\n              />\r\n            }\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <FormControlLabel\r\n              disabled\r\n              control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n              checked={defaultdata.treatmentById.isInsurance}\r\n              label=\"ผู้ป่วยเบิกประกัน\"\r\n            />\r\n        ): (\r\n          <FormControlLabel\r\n            label=\"ผู้ป่วยเบิกประกัน\"\r\n            control={\r\n              <Field name=\"isInsurance\" component={Checkbox} type=\"checkbox\" />\r\n            }\r\n          />\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default ConAccidentForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\SkinForm.js",["356","357","358"],"import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControlLabel,\r\n  Checkbox as CheckboxDianosis,\r\n  TextField as MuiTextField,\r\n} from \"@material-ui/core\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField, Checkbox, Radio, Select } from \"final-form-material-ui\";\r\n\r\nconst Rashdatenormalization = (value) => {\r\n  if (!value) return value;\r\n  const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n  let number = parseFloat(onlyNums);\r\n  return number;\r\n};\r\n\r\nconst SkinForm = (props) => {\r\n  const { mode, defaultdata } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"rashArea\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"บริเวณผื่น\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={2}\r\n            initialValue={defaultdata.treatmentById.rashArea}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"บริเวณผื่น\"\r\n            defaultValue={defaultdata.treatmentById.rashArea}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            multiline\r\n            rows={2}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"rashArea\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"บริเวณผื่น\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={2}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"rashDate\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"เป็นมานาน (วัน)\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={2}\r\n            parse={Rashdatenormalization}\r\n            initialValue={defaultdata.treatmentById.rashDate}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"เป็นมานาน (วัน)\"\r\n            defaultValue={defaultdata.treatmentById.rashDate}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            multiline\r\n            rows={2}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"rashDate\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"เป็นมานาน (วัน)\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={2}\r\n            parse={Rashdatenormalization}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"rashDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"สัมผัสโดน\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={2}\r\n            initialValue={defaultdata.treatmentById.rashDetail}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"สัมผัสโดน\"\r\n            defaultValue={defaultdata.treatmentById.rashDetail}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            multiline\r\n            rows={2}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"rashDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"สัมผัสโดน\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={2}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"physicalExamination\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"การตรวจสอบทางกายภาพ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={2}\r\n            initialValue={defaultdata.treatmentById.physicalExamination}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"การตรวจสอบทางกายภาพ\"\r\n            defaultValue={defaultdata.treatmentById.physicalExamination}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            multiline\r\n            rows={2}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"physicalExamination\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"การตรวจสอบทางกายภาพ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={2}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={12} align=\"center\">\r\n        {mode === \"update\" ? (\r\n          <React.Fragment>\r\n            <FormControlLabel\r\n              label=\"มีอาการคัน\"\r\n              control={\r\n                <Field\r\n                  name=\"isItching\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isItching}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีอาการปวด\"\r\n              control={\r\n                <Field\r\n                  name=\"isPain\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isPain}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีอารการแสบ\"\r\n              control={\r\n                <Field\r\n                  name=\"isStinging\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isStinging}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีอาการบวม\"\r\n              control={\r\n                <Field\r\n                  name=\"isSwelling\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isSwelling}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีไข้\"\r\n              control={\r\n                <Field\r\n                  name=\"isFever\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isFever}\r\n                />\r\n              }\r\n            />\r\n          </React.Fragment>\r\n        ) \r\n        //sssssssssssssssssssssssssss\r\n        \r\n        : mode === \"diagnosis\" ? (\r\n          <React.Fragment>\r\n            <FormControlLabel\r\n              disabled\r\n              control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n              checked={defaultdata.treatmentById.isItching}\r\n              label=\"มีอาการคัน\"\r\n            />\r\n            <FormControlLabel\r\n              disabled\r\n              control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n              checked={defaultdata.treatmentById.isPain}\r\n              label=\"มีอาการปวด\"\r\n            />\r\n            <FormControlLabel\r\n              disabled\r\n              control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n              checked={defaultdata.treatmentById.isStinging}\r\n              label=\"มีอารการแสบ\"\r\n            />\r\n            <FormControlLabel\r\n              disabled\r\n              control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n              checked={defaultdata.treatmentById.isSwelling}\r\n              label=\"มีอารการบวม\"\r\n            />\r\n            <FormControlLabel\r\n              disabled\r\n              control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n              checked={defaultdata.treatmentById.isFever}\r\n              label=\"มีอารการไข้\"\r\n            />\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            <FormControlLabel\r\n              label=\"มีอาการคัน\"\r\n              control={\r\n                <Field name=\"isItching\" component={Checkbox} type=\"checkbox\" />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีอาการปวด\"\r\n              control={\r\n                <Field name=\"isPain\" component={Checkbox} type=\"checkbox\" />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีอารการแสบ\"\r\n              control={\r\n                <Field name=\"isStinging\" component={Checkbox} type=\"checkbox\" />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีอาการบวม\"\r\n              control={\r\n                <Field name=\"isSwelling\" component={Checkbox} type=\"checkbox\" />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีไข้\"\r\n              control={\r\n                <Field name=\"isFever\" component={Checkbox} type=\"checkbox\" />\r\n              }\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default SkinForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\GenaralForm.js",["359","360","361","362","363","364"],"import React from \"react\";\r\nimport { Grid, FormControlLabel, Button, TextField as MuiTextField  } from \"@material-ui/core\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField, Checkbox, Radio, Select } from \"final-form-material-ui\";\r\n\r\nconst GeneralForm = (props) => {\r\n  const { mode, defaultdata } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"chiefComplaint\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"อาการสำคัญ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n            initialValue={defaultdata.treatmentById.chiefComplaint}\r\n          />\r\n        ) : mode === \"diagnosis\" ?\r\n        ( \r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"อาการสำคัญ\"\r\n            defaultValue={defaultdata.treatmentById.chiefComplaint}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n          />\r\n        ):\r\n        (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"chiefComplaint\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"อาการสำคัญ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"presentIllness\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ประวัติปัจจุบัน\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n            initialValue={defaultdata.treatmentById.presentIllness}\r\n          />\r\n        ) : mode === \"diagnosis\" ? \r\n        (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"ประวัติปัจจุบัน\"\r\n            defaultValue={defaultdata.treatmentById.presentIllness}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n          />\r\n        ):\r\n        (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"presentIllness\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ประวัติปัจจุบัน\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n          />\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default GeneralForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\GraphQL\\Mutation.js",[],"D:\\CTHS_TOEI\\src\\pages\\Dianosis\\GraphQL\\Querie.js",[],"D:\\CTHS_TOEI\\src\\pages\\Dianosis\\GraphQL\\Mutation.js",[],"D:\\CTHS_TOEI\\src\\pages\\Medicine\\Prescription\\GraphQL\\Querie.js",[],"D:\\CTHS_TOEI\\src\\context\\auth.js",["365","366"],"import {\r\n    createContext, useCallback, useContext, useEffect, useState,\r\n  } from 'react'\r\n  import { useMutation, useLazyQuery } from '@apollo/client'\r\n  import { useCookies } from 'react-cookie'\r\n  \r\n  import { ME_QUERY } from '../GraphQL/UserQuerie'\r\n  import { LOGIN_MUTATION } from '../GraphQL/LoginMutation'\r\n  import { useNavigate } from \"react-router-dom\";\r\n  \r\n  const SessionContext = createContext()\r\n  \r\n  export const SessionProvider = (props) => {\r\n    const { children } = props\r\n    const [user, setUser] = useState(null)\r\n    const [, setCookie, removeCookie] = useCookies(['token'])\r\n    const [loadMe, { loading, data }] = useLazyQuery(ME_QUERY, { fetchPolicy: 'network-only' })\r\n    const [userLogin] = useMutation(LOGIN_MUTATION)\r\n    const handleLogin = useCallback(\r\n      async (username, password) => {\r\n        try {\r\n          const res = await userLogin({ variables: { username, password } })\r\n          console.log(res.data.userLogin?.token)\r\n          if (res?.data?.userLogin?.token) {\r\n            setCookie('token', res?.data?.userLogin?.token, { maxAge: 86400 })\r\n            setUser(res?.data?.userLogin?.user)\r\n          }\r\n        } catch (err) {\r\n          alert('Username หรือ Password ผิดพลาด')\r\n          removeCookie('token', { maxAge: 86400 })\r\n        }\r\n      },\r\n      [userLogin, removeCookie, setCookie],\r\n    )\r\n    const handleLogout = useCallback(\r\n      () => {\r\n        setUser(null)\r\n        removeCookie('token', { maxAge: 86400 })\r\n      },\r\n      [removeCookie],\r\n    )\r\n    useEffect(\r\n      () => {\r\n        if (data?.me) {\r\n          setUser(data?.me)\r\n        }\r\n      },\r\n      [data],\r\n    )\r\n    useEffect(\r\n      () => {\r\n        const loadData = async () => {\r\n          try {\r\n            await loadMe()\r\n            console.log(data)\r\n          } catch (err) {\r\n            removeCookie('token', { maxAge: 86400 })\r\n          }\r\n        }\r\n        loadData()\r\n      },\r\n      [loadMe, removeCookie],\r\n    )\r\n    return (\r\n      <SessionContext.Provider\r\n        value={{\r\n          loading, user, userLogin: handleLogin, logout: handleLogout,\r\n        }}\r\n      >\r\n        {children}\r\n      </SessionContext.Provider>\r\n    )\r\n  }\r\n  \r\n  export const useSession = () => useContext(SessionContext)\r\n  \r\n  export default SessionContext","D:\\CTHS_TOEI\\src\\GraphQL\\UserQuerie.js",[],"D:\\CTHS_TOEI\\src\\GraphQL\\LoginMutation.js",[],{"ruleId":"367","replacedBy":"368"},{"ruleId":"369","replacedBy":"370"},{"ruleId":"371","severity":1,"message":"372","line":48,"column":11,"nodeType":"373","endLine":48,"endColumn":74},{"ruleId":"374","severity":1,"message":"375","line":7,"column":8,"nodeType":"376","messageId":"377","endLine":7,"endColumn":19},{"ruleId":"374","severity":1,"message":"378","line":17,"column":8,"nodeType":"376","messageId":"377","endLine":17,"endColumn":13},{"ruleId":"374","severity":1,"message":"379","line":1,"column":16,"nodeType":"376","messageId":"377","endLine":1,"endColumn":25},{"ruleId":"374","severity":1,"message":"380","line":1,"column":27,"nodeType":"376","messageId":"377","endLine":1,"endColumn":35},{"ruleId":"374","severity":1,"message":"381","line":5,"column":8,"nodeType":"376","messageId":"377","endLine":5,"endColumn":24},{"ruleId":"374","severity":1,"message":"382","line":6,"column":8,"nodeType":"376","messageId":"377","endLine":6,"endColumn":16},{"ruleId":"374","severity":1,"message":"383","line":7,"column":8,"nodeType":"376","messageId":"377","endLine":7,"endColumn":12},{"ruleId":"374","severity":1,"message":"384","line":55,"column":7,"nodeType":"376","messageId":"377","endLine":55,"endColumn":15},{"ruleId":"371","severity":1,"message":"372","line":97,"column":13,"nodeType":"373","endLine":97,"endColumn":76},{"ruleId":"374","severity":1,"message":"380","line":1,"column":41,"nodeType":"376","messageId":"377","endLine":1,"endColumn":49},{"ruleId":"374","severity":1,"message":"385","line":4,"column":5,"nodeType":"376","messageId":"377","endLine":4,"endColumn":15},{"ruleId":"374","severity":1,"message":"386","line":6,"column":5,"nodeType":"376","messageId":"377","endLine":6,"endColumn":15},{"ruleId":"374","severity":1,"message":"381","line":7,"column":5,"nodeType":"376","messageId":"377","endLine":7,"endColumn":21},{"ruleId":"374","severity":1,"message":"387","line":9,"column":5,"nodeType":"376","messageId":"377","endLine":9,"endColumn":14},{"ruleId":"374","severity":1,"message":"388","line":18,"column":21,"nodeType":"376","messageId":"377","endLine":18,"endColumn":26},{"ruleId":"374","severity":1,"message":"389","line":18,"column":28,"nodeType":"376","messageId":"377","endLine":18,"endColumn":34},{"ruleId":"390","severity":1,"message":"391","line":107,"column":8,"nodeType":"392","endLine":107,"endColumn":10,"suggestions":"393"},{"ruleId":"390","severity":1,"message":"394","line":111,"column":8,"nodeType":"392","endLine":111,"endColumn":10,"suggestions":"395"},{"ruleId":"390","severity":1,"message":"396","line":142,"column":9,"nodeType":"392","endLine":142,"endColumn":29,"suggestions":"397"},{"ruleId":"390","severity":1,"message":"398","line":175,"column":9,"nodeType":"392","endLine":175,"endColumn":60,"suggestions":"399"},{"ruleId":"374","severity":1,"message":"400","line":2,"column":47,"nodeType":"376","messageId":"377","endLine":2,"endColumn":57},{"ruleId":"374","severity":1,"message":"380","line":1,"column":28,"nodeType":"376","messageId":"377","endLine":1,"endColumn":36},{"ruleId":"374","severity":1,"message":"401","line":13,"column":18,"nodeType":"376","messageId":"377","endLine":13,"endColumn":34},{"ruleId":"374","severity":1,"message":"402","line":58,"column":10,"nodeType":"376","messageId":"377","endLine":58,"endColumn":17},{"ruleId":"390","severity":1,"message":"403","line":71,"column":5,"nodeType":"392","endLine":71,"endColumn":24,"suggestions":"404"},{"ruleId":"405","severity":1,"message":"406","line":17,"column":1,"nodeType":"407","endLine":36,"endColumn":3},{"ruleId":"374","severity":1,"message":"388","line":18,"column":31,"nodeType":"376","messageId":"377","endLine":18,"endColumn":36},{"ruleId":"374","severity":1,"message":"389","line":18,"column":38,"nodeType":"376","messageId":"377","endLine":18,"endColumn":44},{"ruleId":"390","severity":1,"message":"408","line":84,"column":6,"nodeType":"392","endLine":84,"endColumn":8,"suggestions":"409"},{"ruleId":"390","severity":1,"message":"410","line":113,"column":5,"nodeType":"392","endLine":113,"endColumn":22,"suggestions":"411"},{"ruleId":"390","severity":1,"message":"412","line":141,"column":5,"nodeType":"392","endLine":141,"endColumn":25,"suggestions":"413"},{"ruleId":"374","severity":1,"message":"414","line":12,"column":22,"nodeType":"376","messageId":"377","endLine":12,"endColumn":32},{"ruleId":"374","severity":1,"message":"415","line":14,"column":20,"nodeType":"376","messageId":"377","endLine":14,"endColumn":25},{"ruleId":"374","severity":1,"message":"416","line":19,"column":8,"nodeType":"376","messageId":"377","endLine":19,"endColumn":21},{"ruleId":"374","severity":1,"message":"417","line":20,"column":10,"nodeType":"376","messageId":"377","endLine":20,"endColumn":14},{"ruleId":"374","severity":1,"message":"418","line":20,"column":16,"nodeType":"376","messageId":"377","endLine":20,"endColumn":21},{"ruleId":"374","severity":1,"message":"419","line":3,"column":33,"nodeType":"376","messageId":"377","endLine":3,"endColumn":39},{"ruleId":"374","severity":1,"message":"420","line":4,"column":8,"nodeType":"376","messageId":"377","endLine":4,"endColumn":15},{"ruleId":"374","severity":1,"message":"383","line":5,"column":10,"nodeType":"376","messageId":"377","endLine":5,"endColumn":14},{"ruleId":"374","severity":1,"message":"421","line":10,"column":10,"nodeType":"376","messageId":"377","endLine":10,"endColumn":22},{"ruleId":"374","severity":1,"message":"414","line":6,"column":22,"nodeType":"376","messageId":"377","endLine":6,"endColumn":32},{"ruleId":"374","severity":1,"message":"419","line":3,"column":33,"nodeType":"376","messageId":"377","endLine":3,"endColumn":39},{"ruleId":"374","severity":1,"message":"383","line":4,"column":10,"nodeType":"376","messageId":"377","endLine":4,"endColumn":14},{"ruleId":"374","severity":1,"message":"414","line":12,"column":22,"nodeType":"376","messageId":"377","endLine":12,"endColumn":32},{"ruleId":"374","severity":1,"message":"415","line":14,"column":20,"nodeType":"376","messageId":"377","endLine":14,"endColumn":25},{"ruleId":"374","severity":1,"message":"422","line":69,"column":7,"nodeType":"376","messageId":"377","endLine":69,"endColumn":11},{"ruleId":"374","severity":1,"message":"419","line":3,"column":33,"nodeType":"376","messageId":"377","endLine":3,"endColumn":39},{"ruleId":"374","severity":1,"message":"383","line":4,"column":10,"nodeType":"376","messageId":"377","endLine":4,"endColumn":14},{"ruleId":"374","severity":1,"message":"384","line":69,"column":7,"nodeType":"376","messageId":"377","endLine":69,"endColumn":15},{"ruleId":"374","severity":1,"message":"423","line":21,"column":8,"nodeType":"376","messageId":"377","endLine":21,"endColumn":15},{"ruleId":"374","severity":1,"message":"424","line":5,"column":3,"nodeType":"376","messageId":"377","endLine":5,"endColumn":15},{"ruleId":"374","severity":1,"message":"425","line":7,"column":3,"nodeType":"376","messageId":"377","endLine":7,"endColumn":13},{"ruleId":"374","severity":1,"message":"388","line":17,"column":31,"nodeType":"376","messageId":"377","endLine":17,"endColumn":36},{"ruleId":"374","severity":1,"message":"389","line":17,"column":38,"nodeType":"376","messageId":"377","endLine":17,"endColumn":44},{"ruleId":"374","severity":1,"message":"426","line":39,"column":10,"nodeType":"376","messageId":"377","endLine":39,"endColumn":29},{"ruleId":"374","severity":1,"message":"427","line":40,"column":10,"nodeType":"376","messageId":"377","endLine":40,"endColumn":21},{"ruleId":"374","severity":1,"message":"428","line":73,"column":7,"nodeType":"376","messageId":"377","endLine":73,"endColumn":21},{"ruleId":"390","severity":1,"message":"429","line":150,"column":6,"nodeType":"392","endLine":150,"endColumn":8,"suggestions":"430"},{"ruleId":"390","severity":1,"message":"431","line":579,"column":5,"nodeType":"392","endLine":591,"endColumn":6,"suggestions":"432"},{"ruleId":"390","severity":1,"message":"433","line":983,"column":5,"nodeType":"392","endLine":995,"endColumn":6,"suggestions":"434"},{"ruleId":"390","severity":1,"message":"435","line":1017,"column":6,"nodeType":"392","endLine":1017,"endColumn":8,"suggestions":"436"},{"ruleId":"374","severity":1,"message":"381","line":4,"column":3,"nodeType":"376","messageId":"377","endLine":4,"endColumn":19},{"ruleId":"374","severity":1,"message":"419","line":5,"column":3,"nodeType":"376","messageId":"377","endLine":5,"endColumn":9},{"ruleId":"374","severity":1,"message":"437","line":6,"column":16,"nodeType":"376","messageId":"377","endLine":6,"endColumn":28},{"ruleId":"374","severity":1,"message":"417","line":8,"column":10,"nodeType":"376","messageId":"377","endLine":8,"endColumn":14},{"ruleId":"374","severity":1,"message":"382","line":9,"column":21,"nodeType":"376","messageId":"377","endLine":9,"endColumn":29},{"ruleId":"374","severity":1,"message":"388","line":9,"column":31,"nodeType":"376","messageId":"377","endLine":9,"endColumn":36},{"ruleId":"374","severity":1,"message":"389","line":9,"column":38,"nodeType":"376","messageId":"377","endLine":9,"endColumn":44},{"ruleId":"374","severity":1,"message":"438","line":13,"column":11,"nodeType":"376","messageId":"377","endLine":13,"endColumn":15},{"ruleId":"374","severity":1,"message":"439","line":13,"column":17,"nodeType":"376","messageId":"377","endLine":13,"endColumn":28},{"ruleId":"374","severity":1,"message":"385","line":4,"column":2,"nodeType":"376","messageId":"377","endLine":4,"endColumn":12},{"ruleId":"374","severity":1,"message":"440","line":5,"column":2,"nodeType":"376","messageId":"377","endLine":5,"endColumn":10},{"ruleId":"374","severity":1,"message":"386","line":6,"column":2,"nodeType":"376","messageId":"377","endLine":6,"endColumn":12},{"ruleId":"374","severity":1,"message":"381","line":7,"column":2,"nodeType":"376","messageId":"377","endLine":7,"endColumn":18},{"ruleId":"374","severity":1,"message":"387","line":9,"column":2,"nodeType":"376","messageId":"377","endLine":9,"endColumn":11},{"ruleId":"374","severity":1,"message":"441","line":11,"column":2,"nodeType":"376","messageId":"377","endLine":11,"endColumn":6},{"ruleId":"374","severity":1,"message":"388","line":18,"column":21,"nodeType":"376","messageId":"377","endLine":18,"endColumn":26},{"ruleId":"374","severity":1,"message":"389","line":18,"column":28,"nodeType":"376","messageId":"377","endLine":18,"endColumn":34},{"ruleId":"390","severity":1,"message":"442","line":106,"column":5,"nodeType":"392","endLine":106,"endColumn":7,"suggestions":"443"},{"ruleId":"390","severity":1,"message":"410","line":148,"column":3,"nodeType":"392","endLine":148,"endColumn":25,"suggestions":"444"},{"ruleId":"390","severity":1,"message":"445","line":173,"column":3,"nodeType":"392","endLine":173,"endColumn":28,"suggestions":"446"},{"ruleId":"374","severity":1,"message":"417","line":8,"column":10,"nodeType":"376","messageId":"377","endLine":8,"endColumn":14},{"ruleId":"374","severity":1,"message":"388","line":9,"column":31,"nodeType":"376","messageId":"377","endLine":9,"endColumn":36},{"ruleId":"374","severity":1,"message":"389","line":9,"column":38,"nodeType":"376","messageId":"377","endLine":9,"endColumn":44},{"ruleId":"374","severity":1,"message":"417","line":8,"column":10,"nodeType":"376","messageId":"377","endLine":8,"endColumn":14},{"ruleId":"374","severity":1,"message":"388","line":9,"column":31,"nodeType":"376","messageId":"377","endLine":9,"endColumn":36},{"ruleId":"374","severity":1,"message":"389","line":9,"column":38,"nodeType":"376","messageId":"377","endLine":9,"endColumn":44},{"ruleId":"374","severity":1,"message":"417","line":8,"column":10,"nodeType":"376","messageId":"377","endLine":8,"endColumn":14},{"ruleId":"374","severity":1,"message":"388","line":9,"column":31,"nodeType":"376","messageId":"377","endLine":9,"endColumn":36},{"ruleId":"374","severity":1,"message":"389","line":9,"column":38,"nodeType":"376","messageId":"377","endLine":9,"endColumn":44},{"ruleId":"374","severity":1,"message":"417","line":8,"column":10,"nodeType":"376","messageId":"377","endLine":8,"endColumn":14},{"ruleId":"374","severity":1,"message":"388","line":9,"column":31,"nodeType":"376","messageId":"377","endLine":9,"endColumn":36},{"ruleId":"374","severity":1,"message":"389","line":9,"column":38,"nodeType":"376","messageId":"377","endLine":9,"endColumn":44},{"ruleId":"374","severity":1,"message":"425","line":7,"column":3,"nodeType":"376","messageId":"377","endLine":7,"endColumn":13},{"ruleId":"374","severity":1,"message":"424","line":8,"column":3,"nodeType":"376","messageId":"377","endLine":8,"endColumn":15},{"ruleId":"374","severity":1,"message":"417","line":14,"column":10,"nodeType":"376","messageId":"377","endLine":14,"endColumn":14},{"ruleId":"374","severity":1,"message":"388","line":15,"column":31,"nodeType":"376","messageId":"377","endLine":15,"endColumn":36},{"ruleId":"374","severity":1,"message":"389","line":15,"column":38,"nodeType":"376","messageId":"377","endLine":15,"endColumn":44},{"ruleId":"374","severity":1,"message":"447","line":16,"column":10,"nodeType":"376","messageId":"377","endLine":16,"endColumn":20},{"ruleId":"374","severity":1,"message":"428","line":17,"column":7,"nodeType":"376","messageId":"377","endLine":17,"endColumn":21},{"ruleId":"374","severity":1,"message":"417","line":8,"column":10,"nodeType":"376","messageId":"377","endLine":8,"endColumn":14},{"ruleId":"374","severity":1,"message":"388","line":9,"column":31,"nodeType":"376","messageId":"377","endLine":9,"endColumn":36},{"ruleId":"374","severity":1,"message":"389","line":9,"column":38,"nodeType":"376","messageId":"377","endLine":9,"endColumn":44},{"ruleId":"374","severity":1,"message":"381","line":2,"column":16,"nodeType":"376","messageId":"377","endLine":2,"endColumn":32},{"ruleId":"374","severity":1,"message":"419","line":2,"column":34,"nodeType":"376","messageId":"377","endLine":2,"endColumn":40},{"ruleId":"374","severity":1,"message":"417","line":3,"column":10,"nodeType":"376","messageId":"377","endLine":3,"endColumn":14},{"ruleId":"374","severity":1,"message":"382","line":4,"column":21,"nodeType":"376","messageId":"377","endLine":4,"endColumn":29},{"ruleId":"374","severity":1,"message":"388","line":4,"column":31,"nodeType":"376","messageId":"377","endLine":4,"endColumn":36},{"ruleId":"374","severity":1,"message":"389","line":4,"column":38,"nodeType":"376","messageId":"377","endLine":4,"endColumn":44},{"ruleId":"374","severity":1,"message":"448","line":9,"column":12,"nodeType":"376","messageId":"377","endLine":9,"endColumn":23},{"ruleId":"390","severity":1,"message":"394","line":62,"column":7,"nodeType":"392","endLine":62,"endColumn":29,"suggestions":"449"},"no-native-reassign",["450"],"no-negated-in-lhs",["451"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'CardActions' is defined but never used.","Identifier","unusedVar","'Paper' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Link' is defined but never used.","'navigate' is assigned a value but never used.","'Typography' is defined but never used.","'RadioGroup' is defined but never used.","'FormLabel' is defined but never used.","'Radio' is defined but never used.","'Select' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'defaultdata.patientById.bloodType', 'defaultdata.patientById.nationality', 'defaultdata.patientById.race', 'defaultdata.patientById.status', and 'mode'. Either include them or remove the dependency array.","ArrayExpression",["452"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["453"],"React Hook useCallback has missing dependencies: 'navigate', 'selectNationality', 'selectRace', and 'status'. Either include them or remove the dependency array.",["454"],"React Hook useCallback has missing dependencies: 'defaultdata.patientById._id', 'navigate', 'status', and 'updatePatient'. Either include them or remove the dependency array.",["455"],"'IconButton' is defined but never used.","'HiDocumentReport' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onMobileClose' and 'openMobile'. Either include them or remove the dependency array. If 'onMobileClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["456"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'defaultdata.userById' and 'mode'. Either include them or remove the dependency array.",["457"],"React Hook useCallback has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["458"],"React Hook useCallback has missing dependencies: 'defaultdata.userById._id' and 'navigate'. Either include them or remove the dependency array.",["459"],"'withStyles' is defined but never used.","'Query' is defined but never used.","'DiagnosisForm' is defined but never used.","'Form' is defined but never used.","'Field' is defined but never used.","'Button' is defined but never used.","'AddIcon' is defined but never used.","'isObjectType' is defined but never used.","'rows' is assigned a value but never used.","'classes' is assigned a value but never used.","'NativeSelect' is defined but never used.","'InputLabel' is defined but never used.","'GET_TREATMENT_BY_ID' is defined but never used.","'GET_PATIENT' is defined but never used.","'BootstrapInput' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'defaultdata.treatmentById.__typename', 'defaultdata.treatmentById.lesion', 'defaultdata.treatmentById.status', and 'mode'. Either include them or remove the dependency array.",["460"],"React Hook useCallback has missing dependencies: 'id', 'navigate', and 'user._id'. Either include them or remove the dependency array.",["461"],"React Hook useCallback has missing dependencies: 'defaultdata.treatmentById._id', 'defaultdata.treatmentById.patientId', 'navigate', 'updateAccidentForm', 'updateConAccidentForm', 'updateDiarrheaForm', 'updateEyesForm', 'updateFeverForm', 'updateGeneralForm', 'updatePainForm', and 'updateSkinForm'. Either include them or remove the dependency array.",["462"],"React Hook useCallback has missing dependencies: 'addDiagnosis', 'defaultdata.treatmentById._id', and 'user._id'. Either include them or remove the dependency array.",["463"],"'MuiTextField' is defined but never used.","'mode' is assigned a value but never used.","'defaultdata' is assigned a value but never used.","'MenuItem' is defined but never used.","'Chip' is defined but never used.","React Hook useEffect has missing dependencies: 'defaultdata.medicineById' and 'mode'. Either include them or remove the dependency array.",["464"],["465"],"React Hook useCallback has missing dependencies: 'defaultdata.medicineById._id' and 'navigate'. Either include them or remove the dependency array.",["466"],"'makeStyles' is defined but never used.","'useNavigate' is defined but never used.",["467"],"no-global-assign","no-unsafe-negation",{"desc":"468","fix":"469"},{"desc":"470","fix":"471"},{"desc":"472","fix":"473"},{"desc":"474","fix":"475"},{"desc":"476","fix":"477"},{"desc":"478","fix":"479"},{"desc":"480","fix":"481"},{"desc":"482","fix":"483"},{"desc":"484","fix":"485"},{"desc":"486","fix":"487"},{"desc":"488","fix":"489"},{"desc":"490","fix":"491"},{"desc":"492","fix":"493"},{"desc":"494","fix":"495"},{"desc":"496","fix":"497"},{"desc":"498","fix":"499"},"Update the dependencies array to be: [defaultdata.patientById.bloodType, defaultdata.patientById.nationality, defaultdata.patientById.race, defaultdata.patientById.status, mode]",{"range":"500","text":"501"},"Update the dependencies array to be: [data]",{"range":"502","text":"503"},"Update the dependencies array to be: [addPatient, navigate, select, selectNationality, selectRace, status]",{"range":"504","text":"505"},"Update the dependencies array to be: [defaultdata.patientById._id, navigate, select, selectNationality, selectRace, status, updatePatient]",{"range":"506","text":"507"},"Update the dependencies array to be: [location.pathname, onMobileClose, openMobile]",{"range":"508","text":"509"},"Update the dependencies array to be: [defaultdata.userById, mode]",{"range":"510","text":"511"},"Update the dependencies array to be: [addUser, navigate, select]",{"range":"512","text":"513"},"Update the dependencies array to be: [defaultdata.userById._id, select, updateUser, navigate]",{"range":"514","text":"515"},"Update the dependencies array to be: [defaultdata.treatmentById.__typename, defaultdata.treatmentById.lesion, defaultdata.treatmentById.status, mode]",{"range":"516","text":"517"},"Update the dependencies array to be: [form, id, user._id, status, addGeneralForm, navigate, addSkinForm, addAccidentForm, conAccident, addConAccidentForm, addEyesForm, addFeverForm, addDiarrheaForm, addPainForm]",{"range":"518","text":"519"},"Update the dependencies array to be: [form, defaultdata.treatmentById._id, defaultdata.treatmentById.patientId, status, updateGeneralForm, navigate, updateSkinForm, updateAccidentForm, conAccident, updateConAccidentForm, updateEyesForm, updateFeverForm, updateDiarrheaForm, updatePainForm]",{"range":"520","text":"521"},"Update the dependencies array to be: [addDiagnosis, defaultdata.treatmentById._id, user._id]",{"range":"522","text":"523"},"Update the dependencies array to be: [defaultdata.medicineById, mode]",{"range":"524","text":"525"},"Update the dependencies array to be: [addMedicine, metType, navigate]",{"range":"526","text":"527"},"Update the dependencies array to be: [defaultdata.medicineById._id, metType, updateMedicine, navigate]",{"range":"528","text":"529"},"Update the dependencies array to be: [data, loadMe, removeCookie]",{"range":"530","text":"531"},[3236,3238],"[defaultdata.patientById.bloodType, defaultdata.patientById.nationality, defaultdata.patientById.race, defaultdata.patientById.status, mode]",[3354,3356],"[data]",[4530,4550],"[addPatient, navigate, select, selectNationality, selectRace, status]",[5788,5839],"[defaultdata.patientById._id, navigate, select, selectNationality, selectRace, status, updatePatient]",[1856,1875],"[location.pathname, onMobileClose, openMobile]",[2221,2223],"[defaultdata.userById, mode]",[3033,3050],"[addUser, navigate, select]",[3831,3851],"[defaultdata.userById._id, select, updateUser, navigate]",[4671,4673],"[defaultdata.treatmentById.__typename, defaultdata.treatmentById.lesion, defaultdata.treatmentById.status, mode]",[19716,19951],"[form, id, user._id, status, addGeneralForm, navigate, addSkinForm, addAccidentForm, conAccident, addConAccidentForm, addEyesForm, addFeverForm, addDiarrheaForm, addPainForm]",[34466,34701],"[form, defaultdata.treatmentById._id, defaultdata.treatmentById.patientId, status, updateGeneralForm, navigate, updateSkinForm, updateAccidentForm, conAccident, updateConAccidentForm, updateEyesForm, updateFeverForm, updateDiarrheaForm, updatePainForm]",[35342,35344],"[addDiagnosis, defaultdata.treatmentById._id, user._id]",[2497,2499],"[defaultdata.medicineById, mode]",[3402,3424],"[addMedicine, metType, navigate]",[4022,4047],"[defaultdata.medicineById._id, metType, updateMedicine, navigate]",[1947,1969],"[data, loadMe, removeCookie]"]