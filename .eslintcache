[{"D:\\CTHS_TOEI\\src\\index.js":"1","D:\\CTHS_TOEI\\src\\reportWebVitals.js":"2","D:\\CTHS_TOEI\\src\\App.js":"3","D:\\CTHS_TOEI\\src\\routes.js":"4","D:\\CTHS_TOEI\\src\\components\\GlobalStyles.js":"5","D:\\CTHS_TOEI\\src\\pages\\Register.js":"6","D:\\CTHS_TOEI\\src\\pages\\Homepage.js":"7","D:\\CTHS_TOEI\\src\\pages\\Report.js":"8","D:\\CTHS_TOEI\\src\\pages\\Patients\\Patients.js":"9","D:\\CTHS_TOEI\\src\\pages\\Patients\\Create.js":"10","D:\\CTHS_TOEI\\src\\pages\\Patients\\Detail.js":"11","D:\\CTHS_TOEI\\src\\pages\\Admins\\User.js":"12","D:\\CTHS_TOEI\\src\\pages\\Admins\\Creat.js":"13","D:\\CTHS_TOEI\\src\\pages\\Admins\\Detail.js":"14","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Treatments.js":"15","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Create.js":"16","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Detail.js":"17","D:\\CTHS_TOEI\\src\\pages\\Login.js":"18","D:\\CTHS_TOEI\\src\\components\\Navbar\\Main\\index.js":"19","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Detail.js":"20","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Medicine.js":"21","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Create.js":"22","D:\\CTHS_TOEI\\src\\pages\\Medicine\\Prescription\\Prescription.js":"23","D:\\CTHS_TOEI\\src\\components\\Navbar\\index.js":"24","D:\\CTHS_TOEI\\src\\pages\\Patients\\Patients-form.js":"25","D:\\CTHS_TOEI\\src\\components\\Navbar\\Topbar.js":"26","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Treatment-form.js":"27","D:\\CTHS_TOEI\\src\\pages\\Patients\\GraphQL\\Querie.js":"28","D:\\CTHS_TOEI\\src\\pages\\Treatment\\GraphQL\\Querie.js":"29","D:\\CTHS_TOEI\\src\\components\\Navbar\\Sidebar.js":"30","D:\\CTHS_TOEI\\src\\pages\\Treatment\\PainForm.js":"31","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Diarrhea.js":"32","D:\\CTHS_TOEI\\src\\pages\\Treatment\\FeverForm.js":"33","D:\\CTHS_TOEI\\src\\pages\\Treatment\\ConAccidentForm.js":"34","D:\\CTHS_TOEI\\src\\pages\\Treatment\\EyesForm.js":"35","D:\\CTHS_TOEI\\src\\pages\\Treatment\\SkinForm.js":"36","D:\\CTHS_TOEI\\src\\pages\\Treatment\\AccidentForm.js":"37","D:\\CTHS_TOEI\\src\\pages\\Treatment\\GenaralForm.js":"38","D:\\CTHS_TOEI\\src\\pages\\Treatment\\GraphQL\\Mutation.js":"39","D:\\CTHS_TOEI\\src\\pages\\Patients\\GraphQL\\Mutation.js":"40","D:\\CTHS_TOEI\\src\\MulitiSelect.jsx":"41","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Medicine-form.js":"42","D:\\CTHS_TOEI\\src\\pages\\Admins\\GraphQL\\Querie.js":"43","D:\\CTHS_TOEI\\src\\pages\\Admins\\User-form.js":"44","D:\\CTHS_TOEI\\src\\pages\\Admins\\GraphQL\\Mutation.js":"45","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\graphql\\Mutation.js":"46","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\graphql\\Queries.js":"47","D:\\CTHS_TOEI\\src\\pages\\Dianosis\\Dianosis.js":"48","D:\\CTHS_TOEI\\src\\pages\\Dianosis\\GraphQL\\Querie.js":"49","D:\\CTHS_TOEI\\src\\pages\\Medicine\\Prescription\\GraphQL\\Querie.js":"50"},{"size":771,"mtime":1616856986962,"results":"51","hashOfConfig":"52"},{"size":375,"mtime":1616614429078,"results":"53","hashOfConfig":"52"},{"size":419,"mtime":1617974023536,"results":"54","hashOfConfig":"52"},{"size":2425,"mtime":1618067328929,"results":"55","hashOfConfig":"52"},{"size":819,"mtime":1617974023537,"results":"56","hashOfConfig":"52"},{"size":4115,"mtime":1617091332682,"results":"57","hashOfConfig":"52"},{"size":704,"mtime":1617974023542,"results":"58","hashOfConfig":"52"},{"size":644,"mtime":1617974023567,"results":"59","hashOfConfig":"52"},{"size":2924,"mtime":1617974023566,"results":"60","hashOfConfig":"52"},{"size":1890,"mtime":1617974023557,"results":"61","hashOfConfig":"52"},{"size":4827,"mtime":1618044599850,"results":"62","hashOfConfig":"52"},{"size":3367,"mtime":1617974023541,"results":"63","hashOfConfig":"52"},{"size":1861,"mtime":1617974023539,"results":"64","hashOfConfig":"52"},{"size":2103,"mtime":1617974023539,"results":"65","hashOfConfig":"52"},{"size":3900,"mtime":1618044806632,"results":"66","hashOfConfig":"52"},{"size":6799,"mtime":1617974023568,"results":"67","hashOfConfig":"52"},{"size":7204,"mtime":1617974023568,"results":"68","hashOfConfig":"52"},{"size":4205,"mtime":1617091332681,"results":"69","hashOfConfig":"52"},{"size":1031,"mtime":1617974023537,"results":"70","hashOfConfig":"52"},{"size":2290,"mtime":1618039684815,"results":"71","hashOfConfig":"52"},{"size":3396,"mtime":1617974385972,"results":"72","hashOfConfig":"52"},{"size":1857,"mtime":1617974023542,"results":"73","hashOfConfig":"52"},{"size":3399,"mtime":1618069843377,"results":"74","hashOfConfig":"52"},{"size":1371,"mtime":1617974023538,"results":"75","hashOfConfig":"52"},{"size":25914,"mtime":1617974274662,"results":"76","hashOfConfig":"52"},{"size":1584,"mtime":1617974023538,"results":"77","hashOfConfig":"52"},{"size":47009,"mtime":1618067726363,"results":"78","hashOfConfig":"52"},{"size":954,"mtime":1618044523274,"results":"79","hashOfConfig":"52"},{"size":2415,"mtime":1618044776570,"results":"80","hashOfConfig":"52"},{"size":7827,"mtime":1617974023538,"results":"81","hashOfConfig":"52"},{"size":6179,"mtime":1618049618567,"results":"82","hashOfConfig":"52"},{"size":6764,"mtime":1618048989304,"results":"83","hashOfConfig":"52"},{"size":10906,"mtime":1618048667032,"results":"84","hashOfConfig":"52"},{"size":4476,"mtime":1618047305504,"results":"85","hashOfConfig":"52"},{"size":11421,"mtime":1618047943718,"results":"86","hashOfConfig":"52"},{"size":7291,"mtime":1618045473964,"results":"87","hashOfConfig":"52"},{"size":7981,"mtime":1618046557574,"results":"88","hashOfConfig":"52"},{"size":2142,"mtime":1618044268772,"results":"89","hashOfConfig":"52"},{"size":9080,"mtime":1618065202423,"results":"90","hashOfConfig":"52"},{"size":872,"mtime":1617974023565,"results":"91","hashOfConfig":"52"},{"size":878,"mtime":1617974023537,"results":"92","hashOfConfig":"52"},{"size":8943,"mtime":1617974367844,"results":"93","hashOfConfig":"52"},{"size":458,"mtime":1617974023540,"results":"94","hashOfConfig":"52"},{"size":17017,"mtime":1617974023540,"results":"95","hashOfConfig":"52"},{"size":657,"mtime":1617974023540,"results":"96","hashOfConfig":"52"},{"size":548,"mtime":1617974023556,"results":"97","hashOfConfig":"52"},{"size":379,"mtime":1617974023556,"results":"98","hashOfConfig":"52"},{"size":3833,"mtime":1618069630401,"results":"99","hashOfConfig":"52"},{"size":502,"mtime":1618068817096,"results":"100","hashOfConfig":"52"},{"size":500,"mtime":1618069822657,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"yh3044",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"104"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"104"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"104"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"104"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"104"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"104"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"104"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"104"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"104"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"104"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"104"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"104"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"104"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"104"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"104"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"104"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"104"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"104"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"104"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\CTHS_TOEI\\src\\index.js",[],["225","226"],"D:\\CTHS_TOEI\\src\\reportWebVitals.js",[],"D:\\CTHS_TOEI\\src\\App.js",[],"D:\\CTHS_TOEI\\src\\routes.js",[],"D:\\CTHS_TOEI\\src\\components\\GlobalStyles.js",[],"D:\\CTHS_TOEI\\src\\pages\\Register.js",["227"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Logouser from \"../img/user.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(10),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"#ecb79c\",\r\n    color: \"white\",\r\n  },\r\n  logo: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function Register() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <div className={classes.logo}>\r\n          <img src={Logouser} style={{ width: \"80%\", height: \"auto\" }} />\r\n        </div>\r\n        <Typography component=\"h1\" variant=\"h5\" style={{ margin: 30 }}>\r\n          Register\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n                name=\"confirm password\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            <Typography component=\"subtitle1\" variant=\"subtitle1\">\r\n              Register\r\n            </Typography>\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/login\" variant=\"body2\">\r\n                <Typography component=\"subtitle1\" variant=\"subtitle1\">\r\n                  Already have an account? Sign in\r\n                </Typography>\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","D:\\CTHS_TOEI\\src\\pages\\Homepage.js",[],"D:\\CTHS_TOEI\\src\\pages\\Report.js",[],"D:\\CTHS_TOEI\\src\\pages\\Patients\\Patients.js",[],"D:\\CTHS_TOEI\\src\\pages\\Patients\\Create.js",[],"D:\\CTHS_TOEI\\src\\pages\\Patients\\Detail.js",["228","229"],"import React, {useEffect, useState} from 'react';\r\nimport { Box, Grid, Typography, Button, makeStyles } from '@material-ui/core';\r\nimport { InfoCard } from '@mystiny/ui';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport PatientsForm from './Patients-form'\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { GET_PATIENT } from './GraphQL/Querie'\r\nimport { useQuery } from '@apollo/client';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport moment from 'moment'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    create: {\r\n        backgroundColor: green[500],\r\n        '&:hover': {\r\n            backgroundColor: green[700],\r\n        },\r\n    },\r\n}));\r\n\r\nconst columns = [\r\n    { field: 'id', headerName: 'ID', width: 250, resizable: true },\r\n    {\r\n        field: 'createdAt',\r\n        headerName: 'Date',\r\n        width: 200,\r\n        resizable: true,\r\n    },\r\n    {\r\n        field: 'type',\r\n        headerName: 'Type',\r\n        width: 200,\r\n        resizable: true,\r\n    },\r\n    {\r\n        field: 'status',\r\n        headerName: 'Status',\r\n        width: 250,\r\n        resizable: true,\r\n    },\r\n];\r\n\r\nconst PatientDetailPage = () => {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    let { id } = useParams();\r\n    const { loading, error, data } = useQuery(GET_PATIENT, {\r\n        variables: {\r\n            id\r\n        },\r\n        fetchPolicy: 'cache-and-network'\r\n    });\r\n \r\n\r\n    if (loading) return \"...Loading\";\r\n    if (error) return `Error! ${error}`;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box >\r\n                <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n                    <Grid item xs={6}>\r\n                        <Typography paragraph style={{ fontWeight: 'bold', fontSize: '2em' }} >\r\n                            <DescriptionIcon color=\"primary\" fontSize=\"small\" /> รายละเอียดผู้ป่วย\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6} align='right'>\r\n                        <Box style={{ alignItems: 'center', justifyContent: 'flex-end' }}>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <InfoCard title='ข้อมูลผู้ป่วย' actionTopRight={\r\n                            <Box display=\"flex\">\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => navigate(`/app/treatment/create/patientId/${id}`)} style={{ marginRight: 10 }} className={classes.create}>\r\n                                    สร้างประวัติการรักษา\r\n                                </Button>\r\n                                <Button variant=\"contained\" color=\"secondary\" onClick={() => navigate(-1)} >\r\n                                    ย้อนกลับ\r\n                                </Button>\r\n                            </Box>\r\n                        }>\r\n                            <PatientsForm defaultdata={data} mode={'update'} />\r\n                        </InfoCard>\r\n                    </Grid>\r\n                    <Grid item xs={12} style={{ marginTop: 20 }}>\r\n                        <InfoCard title='ประวัติการรักษา'>\r\n                            <Grid container spacing={0} alignItems=\"center\" justify=\"center\" style={{ marginTop: 20 }}>\r\n                                <Grid item xs={12}>\r\n                                    <div style={{ height: 500, width: '100%', backgroundColor: 'white' }}>\r\n                                        <DataGrid\r\n                                            rows={data.patientById.treatment?.map((item) => ({\r\n                                                id: item._id,\r\n                                                createdAt: moment(new Date(item.createdAt)).format('DD/MM/YYYY'),\r\n                                                type: item.type,\r\n                                                status: item.status,\r\n                                            }))}\r\n                                            columns={columns}\r\n                                            pagination\r\n                                            pageSize={10}\r\n                                            onRowClick={(row) => navigate(`/app/treatment/detail/${row.row.id}`)}\r\n                                        />\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </InfoCard>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default PatientDetailPage","D:\\CTHS_TOEI\\src\\pages\\Admins\\User.js",[],"D:\\CTHS_TOEI\\src\\pages\\Admins\\Creat.js",[],"D:\\CTHS_TOEI\\src\\pages\\Admins\\Detail.js",[],"D:\\CTHS_TOEI\\src\\pages\\Treatment\\Treatments.js",["230","231","232","233"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, Grid, Typography, Button } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { GET_TREATMENTS } from './GraphQL/Querie'\r\nimport { useQuery } from '@apollo/client';\r\nimport moment from 'moment'\r\nimport { isObjectType } from 'graphql';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        boxAdmin: {},\r\n        display: 'flex',\r\n        '& div.MuiDataGrid-cell': {\r\n            color: 'white',\r\n        },\r\n        '& div.MuiDataGrid-colCellTitle': {\r\n            color: 'black',\r\n        },\r\n        '& div.MuiToolbar-root': {\r\n            color: 'white',\r\n        },\r\n        '& div.MuiTablePagination-actions': {\r\n            color: 'white',\r\n        },\r\n        '& div.MuiIconButton-label': {\r\n            color: 'white',\r\n        },\r\n        '& div.MuiDataGrid-colCellWrapper': {\r\n            backgroundColor: 'white',\r\n        },\r\n    },\r\n}));\r\n\r\nconst columns = [\r\n    { field: 'id', headerName: 'ID', width: 250, resizable: true },\r\n    {\r\n        field: 'createdAt',\r\n        headerName: 'Date',\r\n        width: 200,\r\n        resizable: true,\r\n    },\r\n    {\r\n        field: 'type',\r\n        headerName: 'Type',\r\n        width: 200,\r\n    },\r\n    {\r\n        field: 'name',\r\n        headerName: 'Name',\r\n        width: 200,\r\n        resizable: true,\r\n    },\r\n    {\r\n        field: 'lastname',\r\n        headerName: 'Lastname',\r\n        width: 200,\r\n        resizable: true,\r\n    },\r\n    {\r\n        field: 'idcardNumber',\r\n        headerName: 'Idcard Number',\r\n        width: 200,\r\n    },\r\n];\r\n\r\nconst Treatmentpage = () => {\r\n    const classes = useStyles();\r\n    let navigate = useNavigate();\r\n    const { loading, error, data } = useQuery(GET_TREATMENTS);\r\n    if (loading) return 'Loading...';\r\n    if (error) return `Error! ${error.message}`;\r\n    return (\r\n        <React.Fragment className={classes.root}>\r\n            <Box className={classes.boxAdmin}>\r\n                <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n                    <Grid item xs={6}>\r\n                        <Typography paragraph style={{ fontWeight: 'bold' }} variant=\"h5\">\r\n                          Treatment\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6} align='right'>\r\n                        <Box style={{ alignItems: 'center', justifyContent: 'flex-end' }}>\r\n\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={0} alignItems=\"center\" justify=\"center\" style={{ marginTop: 20 }}>\r\n                    <Grid item xs={12}>\r\n                        <div style={{ height: 500, width: '100%', backgroundColor: 'white' }}>\r\n                            <DataGrid\r\n\t\t\t\t\t\t\t\trows={data.allTreatments.map((item) => ({\r\n                                    id: item._id,\r\n                                    createdAt: moment(new Date(item.createdAt)).format('DD/MM/YYYY'),\r\n                                    name: item.patient.firstname,\r\n                                    lastname: item.patient.lastname,\r\n                                    idcardNumber: item.patient.idcardNumber,\r\n                                    type: item.type\r\n                                }))}\r\n                                columns={columns}\r\n                                pagination\r\n                                pageSize={10}\r\n                                onRowClick={(row) => navigate(`/app/treatment/detail/${row.row.id}`)}\r\n\t\t\t\t\t\t\t/>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Treatmentpage;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Create.js",["234"],"import React from 'react';\r\nimport { Box, Grid, Typography, Button, TextField as MuiTextField } from '@material-ui/core';\r\nimport { InfoCard } from '@mystiny/ui';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_PATIENT } from '../Patients/GraphQL/Querie'\r\nimport moment from 'moment';\r\nimport TreatmentForm from './Treatment-form'\r\nconst useStyles = makeStyles((theme) => ({\r\n    create: {\r\n        backgroundColor: green[500],\r\n        '&:hover': {\r\n            backgroundColor: green[700],\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nconst CreateTreatmentPage = () => {\r\n    const navigate = useNavigate();\r\n    const classes = useStyles();\r\n    let { id } = useParams();\r\n    const { loading, error, data } = useQuery(GET_PATIENT, {\r\n        variables: {\r\n            id\r\n        },\r\n        fetchPolicy: 'cache-and-network',\r\n    });\r\n\r\n    if (loading) return \"...Loading\";\r\n    if (error) return `Error! ${error}`;\r\n    return (\r\n        <React.Fragment>\r\n            <Box >\r\n                <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n                    <Grid item xs={6}>\r\n                        <Typography paragraph style={{ fontWeight: 'bold', fontSize: '2em' }} >\r\n                            <DescriptionIcon color=\"primary\" fontSize=\"small\" /> สร้างประวัติการรักษา\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6} align='right'>\r\n                        <Box style={{ alignItems: 'center', justifyContent: 'flex-end' }}>\r\n\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <InfoCard title={\r\n                            <React.Fragment>\r\n                                <Box display=\"flex \" style={{ fontSize: '1em', justifyContent: 'center', alignItems: 'center' }}>\r\n                                    <h4>ข้อมูลผู้ป่วย</h4>\r\n                                    <Button variant=\"contained\" color=\"secondary\" onClick={() => navigate(`/app/patients/detail/${id}`)} style={{ marginLeft: 20 }} className={classes.create}>\r\n                                        ดูข้อมูลเพิ่มเติม\r\n                                    </Button>\r\n                                </Box>\r\n                            </React.Fragment>\r\n                        }\r\n                        actionTopRight={\r\n                            <Box display=\"flex\">\r\n                                <Button variant=\"contained\" color=\"secondary\" onClick={() => navigate(-1)} >\r\n                                    ย้อนกลับ\r\n                                </Button>\r\n                            </Box>\r\n                        }>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={6}>\r\n                                    <MuiTextField\r\n                                        id=\"standard-read-only-input\"\r\n                                        label=\"ชื่อ\"\r\n                                        defaultValue={data.patientById.firstname}\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <MuiTextField\r\n                                        id=\"standard-read-only-input\"\r\n                                        label=\"นามสกุล\"\r\n                                        defaultValue={data.patientById.lastname}\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <MuiTextField\r\n                                        id=\"standard-read-only-input\"\r\n                                        label=\"โรคประจำตัว\"\r\n                                        defaultValue={data.patientById.congenitalDisease.toString()}\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <MuiTextField\r\n                                        id=\"standard-read-only-input\"\r\n                                        label=\"วัน/เดือน/ปีเกิด\"\r\n                                        defaultValue={`${moment(new Date(data.patientById.birthdate)).format(\"DD-MM-YYYY\")}`}\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </InfoCard>\r\n                    </Grid>\r\n                    <Grid item xs={12} style={{ marginTop: 20 }}>\r\n                        <InfoCard\r\n                            title={\r\n                                <React.Fragment>\r\n                                    <Box display=\"flex \" style={{ fontSize: '1em', justifyContent: 'center', alignItems: 'center' }}>\r\n                                        <h4>ประวัติการรักษา</h4>\r\n                                    </Box>\r\n                                </React.Fragment>\r\n                            }\r\n                        >\r\n                            <TreatmentForm />\r\n                        </InfoCard>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CreateTreatmentPage","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Detail.js",["235","236"],"import React from 'react';\r\nimport { Box, Grid, Typography, Button, TextField as MuiTextField } from '@material-ui/core';\r\nimport { InfoCard } from '@mystiny/ui';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { useQuery, Query } from '@apollo/client';\r\nimport { GET_TREATMENT_BY_ID } from './GraphQL/Querie'\r\nimport { GET_PATIENT } from '../Patients/GraphQL/Querie'\r\nimport moment from 'moment';\r\nimport TreatmentForm from './Treatment-form'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    create: {\r\n        backgroundColor: green[500],\r\n        '&:hover': {\r\n            backgroundColor: green[700],\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nconst DetailTreatmentPage = () => {\r\n    const navigate = useNavigate();\r\n    const classes = useStyles();\r\n    let { id } = useParams();\r\n    const { loading, error, data } = useQuery(GET_TREATMENT_BY_ID, {\r\n        variables: {\r\n            id\r\n        },\r\n        fetchPolicy: 'cache-and-network',\r\n    });\r\n\r\n    const PatientId = data?.treatmentById?.patientId\r\n\r\n    const { loading: loadingPatient, error: errorPatient, data: dataPatient } = useQuery(GET_PATIENT, {\r\n        variables: {\r\n            id: PatientId\r\n        },\r\n        fetchPolicy: 'cache-and-network',\r\n    });\r\n\r\n    if (loading) return \"...Loading\";\r\n    if (error) return `Error! ${error}`;\r\n    if (loadingPatient) return \"...Loading\";\r\n    if (errorPatient) return `Error! ${error}`;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box >\r\n                <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n                    <Grid item xs={6}>\r\n                        <Typography paragraph style={{ fontWeight: 'bold', fontSize: '2em' }} >\r\n                            <DescriptionIcon color=\"primary\" fontSize=\"small\" /> รายละเอียดการรักษา \r\n                    </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6} align='right'>\r\n                        <Box style={{ alignItems: 'center', justifyContent: 'flex-end' }}>\r\n\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <InfoCard title={\r\n                            <React.Fragment>\r\n                                <Box display=\"flex \" style={{ fontSize: '1em', justifyContent: 'center', alignItems: 'center' }}>\r\n                                    <h4>ข้อมูลผู้ป่วย</h4>\r\n                                    <Button variant=\"contained\" color=\"secondary\" onClick={() => navigate(-1)} style={{ marginLeft: 20 }} className={classes.create}>\r\n                                        ดูข้อมูลเพิ่มเติม\r\n                                    </Button>\r\n                                </Box>\r\n                            </React.Fragment>\r\n                        }\r\n                            actionTopRight={\r\n                                <Box display=\"flex\">\r\n                                    <Button variant=\"contained\" color=\"secondary\" onClick={() => navigate(-1)} >\r\n                                        ย้อนกลับ\r\n                                    </Button>\r\n                                </Box>\r\n                            }\r\n                        >\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={6}>\r\n                                    <MuiTextField\r\n                                        id=\"standard-read-only-input\"\r\n                                        label=\"ชื่อ\"\r\n                                        defaultValue={dataPatient.patientById.firstname}\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <MuiTextField\r\n                                        id=\"standard-read-only-input\"\r\n                                        label=\"นามสกุล\"\r\n                                        defaultValue={dataPatient.patientById.lastname}\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <MuiTextField\r\n                                        id=\"standard-read-only-input\"\r\n                                        label=\"โรคประจำตัว\"\r\n                                        defaultValue={dataPatient.patientById.congenitalDisease.toString()}\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <MuiTextField\r\n                                        id=\"standard-read-only-input\"\r\n                                        label=\"วัน/เดือน/ปีเกิด\"\r\n                                        defaultValue={`${moment(new Date(dataPatient.patientById.birthdate)).format(\"DD-MM-YYYY\")}`}\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </InfoCard>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} style={{ marginTop: 20 }}>\r\n                    <InfoCard title={\r\n                        <React.Fragment>\r\n                            <Box display=\"flex \" style={{ fontSize: '1em', justifyContent: 'center', alignItems: 'center' }}>\r\n                                <h4>ข้อมูลเบื้องต้น</h4>\r\n                            </Box>\r\n                        </React.Fragment>\r\n                    }>\r\n                        <TreatmentForm defaultdata={data} mode={'update'} />\r\n                    </InfoCard>\r\n                </Grid>\r\n            </Box>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DetailTreatmentPage","D:\\CTHS_TOEI\\src\\pages\\Login.js",["237"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Logouser from \"../img/user.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(https://i.imgur.com/u9flexs.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"#5780f7\",\r\n    color: \"white\",\r\n    padding: 8\r\n  },\r\n  logo: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function SignInSide() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <fullWidthClassName />\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={6} className={classes.image} />\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        sm={8}\r\n        md={6}\r\n        component={Paper}\r\n        square\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <div className={classes.paper}>\r\n          <div className={classes.logo}>\r\n            <img src={Logouser} style={{ width: \"80%\", height: \"auto\" }} />\r\n          </div>\r\n          <Typography component=\"h1\" variant=\"h5\" style={{margin: 30}}>\r\n            Clinic Treatment History System\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"filled\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              // style={{ boxShadow: \"5px 10px #777\" }}\r\n            />\r\n            <TextField\r\n              variant=\"filled\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              className={classes.submit}\r\n            >\r\n              <Typography component=\"subtitle1\" variant=\"subtitle1\">\r\n                Login\r\n              </Typography>\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <FormControlLabel\r\n                  control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                  label=\"Remember me\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"/register\" variant=\"body2\">\r\n                  <Typography\r\n                    component=\"subtitle1\"\r\n                    variant=\"subtitle1\"\r\n                    style={{ marginRight: 10 }}\r\n                  >\r\n                    Don't Have an Account?\r\n                  </Typography>\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  <Typography component=\"subtitle1\" variant=\"subtitle1\">\r\n                    Forgot Password?\r\n                  </Typography>\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","D:\\CTHS_TOEI\\src\\components\\Navbar\\Main\\index.js",[],"D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Detail.js",["238"],"import React from 'react';\r\nimport { Box, Grid, Typography, Button, makeStyles } from '@material-ui/core';\r\nimport { InfoCard } from '@mystiny/ui';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport MedicineForm from './Medicine-form';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { GET_MEDICINE } from './graphql/Queries';\r\nimport { useQuery } from '@apollo/client';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcreate: {\r\n\t\tbackgroundColor: green[500],\r\n\t\t'&:hover': {\r\n\t\t\tbackgroundColor: green[700],\r\n\t\t},\r\n\t},\r\n}));\r\n\r\nconst MedicineDetailPage = () => {\r\n\tconst classes = useStyles();\r\n\tconst navigate = useNavigate();\r\n\tlet { id } = useParams();\r\n\tconst { loading, error, data } = useQuery(GET_MEDICINE, {\r\n\t\tvariables: {\r\n\t\t\tid,\r\n\t\t},\r\n\t\tfetchPolicy: 'cache-and-network',\r\n\t});\r\n\r\n\tif (loading) return '...Loading';\r\n\tif (error) return `Error! ${error}`;\r\n    \r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Box>\r\n\t\t\t\t<Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Typography paragraph style={{ fontWeight: 'bold', fontSize: '2em' }}>\r\n\t\t\t\t\t\t\t<DescriptionIcon color=\"primary\" fontSize=\"small\" /> รายละเอียดยา\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6} align=\"right\">\r\n\t\t\t\t\t\t<Box style={{ alignItems: 'center', justifyContent: 'flex-end' }}></Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<InfoCard\r\n\t\t\t\t\t\t\ttitle=\"ข้อมูลยา\"\r\n\t\t\t\t\t\t\tactionTopRight={\r\n\t\t\t\t\t\t\t\t<Box display=\"flex\">\r\n\t\t\t\t\t\t\t\t\t{/* <Button\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => navigate(`/app/treatment/create/patientId/${id}`)}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ marginRight: 10 }}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.create}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tสร้างประวัติการรักษา\r\n\t\t\t\t\t\t\t\t\t</Button> */}\r\n\t\t\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"secondary\" onClick={() => navigate(-1)}>\r\n\t\t\t\t\t\t\t\t\t\tย้อนกลับ\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MedicineForm defaultdata={data} mode={'update'} />\r\n\t\t\t\t\t\t</InfoCard>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Box>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default MedicineDetailPage;\r\n","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Medicine.js",["239"],"import React from 'react';\r\nimport { Box, Grid, Typography, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { GET_MEDICINES } from './graphql/Queries';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t\t'& div.MuiDataGrid-cell': {\r\n\t\t\tcolor: 'white',\r\n\t\t},\r\n\t\t'& div.MuiDataGrid-colCellTitle': {\r\n\t\t\tcolor: 'black',\r\n\t\t},\r\n\t\t'& div.MuiToolbar-root': {\r\n\t\t\tcolor: 'white',\r\n\t\t},\r\n\t\t'& div.MuiTablePagination-actions': {\r\n\t\t\tcolor: 'white',\r\n\t\t},\r\n\t\t'& div.MuiIconButton-label': {\r\n\t\t\tcolor: 'white',\r\n\t\t},\r\n\t\t'& div.MuiDataGrid-colCellWrapper': {\r\n\t\t\tbackgroundColor: 'white',\r\n\t\t},\r\n\t},\r\n\tboxAdmin: {},\r\n}));\r\n\r\nconst columns = [\r\n\t{ field: 'id', headerName: 'ID', width: 300, resizable: true },\r\n\t{\r\n\t\tfield: 'name',\r\n\t\theaderName: 'Name',\r\n\t\twidth: 300,\r\n\t\tresizable: true,\r\n\t},\r\n\t{\r\n\t\tfield: 'description',\r\n\t\theaderName: 'Description',\r\n\t\twidth: 400,\r\n\t\tresizable: true,\r\n\t},\r\n\t{\r\n\t\tfield: 'amount',\r\n\t\theaderName: 'Amount',\r\n\t\twidth: 150,\r\n\t\tresizable: true,\r\n\t},\r\n\t{\r\n\t\tfield: 'unitType',\r\n\t\theaderName: 'Unit Type',\r\n\t\tresizable: true,\r\n\t\twidth: 200,\r\n\t},\r\n\t{\r\n\t\tfield: 'medType',\r\n\t\theaderName: 'Med Type',\r\n\t\tresizable: true,\r\n\t\twidth: 200,\r\n\t},\r\n];\r\n\r\nconst rows = [\r\n\t{ id: '1', name: 'Sara', description: 'แก้ปวด', amount: 500, unitType: 'ขวด' },\r\n\t{ id: '2', name: 'Para', description: 'แก้ปวด', amount: 500, unitType: 'ขวด' },\r\n];\r\n\r\nconst Medicinepage = () => {\r\n\tconst classes = useStyles();\r\n\tlet navigate = useNavigate();\r\n\tconst { loading, error, data } = useQuery(GET_MEDICINES);\r\n\tif (loading) return 'Loading...';\r\n\tif (error) return `Error! ${error.message}`;\r\n\r\n\tconsole.log(data);\r\n\treturn (\r\n\t\t<React.Fragment className={classes.root}>\r\n\t\t\t<Box className={classes.boxAdmin}>\r\n\t\t\t\t<Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={12} md={6}>\r\n\t\t\t\t\t\t<Typography variant=\"h5\" paragraph style={{ fontWeight: 'bolder' }}>\r\n\t\t\t\t\t\t\tDrug Storehouse\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} md={6} align=\"right\">\r\n\t\t\t\t\t\t<Box style={{ alignItems: 'center', justifyContent: 'flex-end' }}>\r\n\t\t\t\t\t\t\t<Link to=\"/app/medicine/drugstore/create\" style={{ textDecoration: 'none' }}>\r\n\t\t\t\t\t\t\t\t<Button startIcon={<AddIcon />} variant=\"contained\" color=\"primary\">\r\n\t\t\t\t\t\t\t\t\tCreate new medicine\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid container spacing={0} alignItems=\"center\" justify=\"center\" style={{ marginTop: 20 }}>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<div style={{ height: 500, width: '100%', backgroundColor: 'white' }}>\r\n\t\t\t\t\t\t\t<DataGrid\r\n\t\t\t\t\t\t\t\trows={data.allMedicines.map((item) => ({\r\n\t\t\t\t\t\t\t\t\tid: item._id,\r\n\t\t\t\t\t\t\t\t\tname: item.name,\r\n\t\t\t\t\t\t\t\t\tdescription: item.description,\r\n\t\t\t\t\t\t\t\t\tamount: item.amount,\r\n\t\t\t\t\t\t\t\t\tunitType: item.unitType,\r\n\t\t\t\t\t\t\t\t\tmedType: item.medType\r\n\t\t\t\t\t\t\t\t}))}\r\n\t\t\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\t\t\tpagination\r\n\t\t\t\t\t\t\t\tpageSize={10}\r\n\t\t\t\t\t\t\t\tonRowClick={(row) => navigate(`/app/medicine/drugstore/detail/${row.row.id}`)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Box>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Medicinepage;\r\n","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Create.js",[],"D:\\CTHS_TOEI\\src\\pages\\Medicine\\Prescription\\Prescription.js",["240","241","242"],"D:\\CTHS_TOEI\\src\\components\\Navbar\\index.js",[],"D:\\CTHS_TOEI\\src\\pages\\Patients\\Patients-form.js",["243","244","245","246","247","248","249","250","251","252","253"],"import React, { useCallback, useEffect, useState } from 'react'\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    MenuItem,\r\n    RadioGroup,\r\n    FormControlLabel,\r\n    FormControl,\r\n    FormLabel,\r\n    Button,\r\n    Chip,\r\n    NativeSelect,\r\n    InputBase,\r\n    InputLabel,\r\n} from '@material-ui/core';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { TextField, Radio, Select } from 'final-form-material-ui';\r\nimport MultiSelect from \"../../MulitiSelect\";\r\nimport \"../../App.css\"\r\nimport { ADD_PATIENT, UPDATE_PATIENT_BY_ID } from './GraphQL/Mutation'\r\nimport { useMutation } from '@apollo/client';\r\nimport { GET_PATIENTS } from './GraphQL/Querie'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport moment from 'moment';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            width: '25ch',\r\n        },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        maxWidth: 300,\r\n    },\r\n    chips: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n        margin: 2,\r\n    },\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n    root: {\r\n        'label + &': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    input: {\r\n        borderRadius: 4,\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        width: \"100%\",\r\n        padding: '10px 26px 10px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n        '&:focus': {\r\n            borderRadius: 4,\r\n            borderColor: '#80bdff',\r\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n        },\r\n    },\r\n}))(InputBase);\r\n\r\nconst PatientsForm = (props) => {\r\n    const { mode, defaultdata } = props\r\n    const classes = useStyles();\r\n    let navigate = useNavigate();\r\n    const test = ['โรคหัวใจ', 'โรคความดัน', 'โรคเบาหวาน', 'โรคสมอง'];\r\n    const [select, setSelect] = React.useState('')\r\n    const [status, setStatus] = React.useState('')\r\n    const [addPatient] = useMutation(ADD_PATIENT);\r\n    const [updatePatient] = useMutation(UPDATE_PATIENT_BY_ID)\r\n    const [nationality, setNationality] = React.useState([])\r\n    const [selectNationality, setSelectNationality] = React.useState('')\r\n    const [selectRace, setSelectRace] = React.useState('')\r\n\r\n    let data = require('npm-nationality-list')\r\n\r\n    useEffect(() => {\r\n        if (mode === 'update') {\r\n            setSelect(defaultdata.patientById.bloodType)\r\n            setStatus(defaultdata.patientById.status)\r\n            setSelectNationality(defaultdata.patientById.nationality)\r\n            setSelectRace(defaultdata.patientById.race)\r\n        } else {\r\n            return null\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        data.getList().map((item) => setNationality((prev) => [...prev, item]))\r\n    }, [])\r\n\r\n    const onSubmitCreate = useCallback(\r\n        async (value) => {\r\n            const variables = {\r\n                record: {\r\n                    firstname: value.firstname,\r\n                    lastname: value.lastname,\r\n                    idcardNumber: value.idcardNumber,\r\n                    birthdate: value.birthdate,\r\n                    nationality: selectNationality,\r\n                    race: selectRace,\r\n                    status: status,\r\n                    bloodType: select,\r\n                    phone: value.phone,\r\n                    address: value.address,\r\n                    hospitalRefer: value.hospitalRefer,\r\n                    congenitalDisease: value.congenitalDisease,\r\n                }\r\n            }\r\n            try {\r\n                await addPatient({ variables, refetchQueries: [{ query: GET_PATIENTS }] })\r\n                alert('บันทึกข้อมูลสำเร็จ')\r\n                setSelectNationality('')\r\n                setSelectRace('')\r\n                navigate(`/app/patients`)\r\n            } catch (err) {\r\n                console.log(err)\r\n                alert('เกิดข้อผิดพลาด' + err.message)\r\n            }\r\n        },\r\n        [addPatient, select]\r\n    )\r\n\r\n    const onSubmitUpdate = useCallback(\r\n        async (value) => {\r\n            const variables = {\r\n                id: defaultdata.patientById._id,\r\n                record: {\r\n                    firstname: value.firstname,\r\n                    lastname: value.lastname,\r\n                    idcardNumber: value.idcardNumber,\r\n                    birthdate: value.birthdate,\r\n                    nationality: selectNationality,\r\n                    race: selectRace,\r\n                    status: status,\r\n                    bloodType: select,\r\n                    phone: value.phone,\r\n                    address: value.address,\r\n                    hospitalRefer: value.hospitalRefer,\r\n                    congenitalDisease: value.congenitalDisease,\r\n                }\r\n            }\r\n            try {\r\n                await updatePatient({ variables, refetchQueries: [{ query: GET_PATIENTS }] })\r\n                alert('บันทึกข้อมูลสำเร็จ')\r\n                setSelectNationality('')\r\n                setSelectRace('')\r\n                navigate(`/app/patients`)\r\n            } catch (err) {\r\n                console.log(err)\r\n                alert('เกิดข้อผิดพลาด     ' + err.message)\r\n            }\r\n        },\r\n        [addPatient, select, selectNationality, selectRace]\r\n    )\r\n\r\n    const onSubmit = mode === 'update' ? onSubmitUpdate : onSubmitCreate\r\n\r\n    const handleChangeblood = (event) => {\r\n        setSelect(event.target.value);\r\n    };\r\n\r\n    const handleChangestatus = (event) => {\r\n        setStatus(event.target.value)\r\n    }\r\n\r\n    const handleSelectNationality = (event) => {\r\n        setSelectNationality(event.target.value)\r\n    }\r\n    const handleSelectRace = (event) => {\r\n        setSelectRace(event.target.value)\r\n    }\r\n\r\n    const normalizeIdcard = value => {\r\n        if (!value) return value;\r\n        const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n        if (onlyNums.length <= 13) return onlyNums;\r\n    }\r\n\r\n    const normalizePhone = value => {\r\n        if (!value) return value;\r\n        const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n        if (onlyNums.length <= 10) return onlyNums;\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Form\r\n                onSubmit={onSubmit}\r\n                render={({ handleSubmit, submitting }) => (\r\n                    <form className={classes.root} noValidate autoComplete=\"true\" onSubmit={handleSubmit}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        fullWidth\r\n                                        required\r\n                                        name=\"firstname\"\r\n                                        component={TextField}\r\n                                        type=\"text\"\r\n                                        label=\"ชื่อ\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        initialValue={defaultdata.patientById.firstname}\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        fullWidth\r\n                                        required\r\n                                        name=\"firstname\"\r\n                                        component={TextField}\r\n                                        type=\"text\"\r\n                                        label=\"ชื่อ\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        name=\"lastname\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        component={TextField}\r\n                                        label=\"นามสกุล\"\r\n                                        initialValue={defaultdata.patientById.lastname}\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        name=\"lastname\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        component={TextField}\r\n                                        label=\"นามสกุล\"\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"รหัสบัตรประชาชน\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"idcardNumber\"\r\n                                        component={TextField}\r\n                                        initialValue={defaultdata.patientById.idcardNumber}\r\n                                        parse={normalizeIdcard}\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        label=\"รหัสบัตรประชาชน\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"idcardNumber\"\r\n                                        component={TextField}\r\n                                        parse={normalizeIdcard}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        id=\"date\"\r\n                                        type=\"date\"\r\n                                        label=\"วัน/เดือน/ปีเกิด\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required={true}\r\n                                        component={TextField}\r\n                                        name='birthdate'\r\n                                        defaultValue={`${moment(defaultdata.patientById.birthdate).format(\"YYYY-MM-DD\")}`}\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        id=\"date\"\r\n                                        type=\"date\"\r\n                                        variant=\"outlined\"\r\n                                        label=\"วัน/เดือน/ปีเกิด\"\r\n                                        style={{ width: '100%' }}\r\n                                        required={true}\r\n                                        component={TextField}\r\n                                        name='birthdate'\r\n                                        defaultValue={`${moment(new Date()).format(\"YYYY-MM-DD\")}`}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl style={{ width: \"100%\" }}>\r\n                                    <InputLabel id=\"demo-mutiple-name-label\">สัญชาติ</InputLabel>\r\n                                    <NativeSelect\r\n                                        id=\"demo-customized-select-native\"\r\n                                        input={<BootstrapInput />}\r\n                                        value={selectNationality}\r\n                                        onChange={handleSelectNationality}\r\n                                        required={true}\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\" \" />\r\n                                        {nationality?.map((data, index) => (\r\n                                            <option value={`${data.nationality}`}>\r\n                                                {data.nationality}\r\n                                            </option>\r\n                                        ))}\r\n                                    </NativeSelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl style={{ width: \"100%\" }}>\r\n                                    <InputLabel id=\"demo-mutiple-name-label\">เชื้อชาติ</InputLabel>\r\n                                    <NativeSelect\r\n                                        id=\"demo-customized-select-native\"\r\n                                        input={<BootstrapInput />}\r\n                                        value={selectRace}\r\n                                        onChange={handleSelectRace}\r\n                                        required={true}\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\" \" />\r\n                                        {nationality?.map((data, index) => (\r\n                                            <option value={`${data.nationality}`}>\r\n                                                {data.nationality}\r\n                                            </option>\r\n                                        ))}\r\n                                    </NativeSelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl style={{ width: \"100%\" }}>\r\n                                    <InputLabel id=\"demo-mutiple-name-label\">สถานะ</InputLabel>\r\n                                    <NativeSelect\r\n                                        id=\"demo-customized-select-native\"\r\n                                        input={<BootstrapInput />}\r\n                                        value={status}\r\n                                        onChange={handleChangestatus}\r\n                                        required={true}\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\"เลือกสถานะ\" />\r\n                                        <option value={'SINGLE'}>โสด</option>\r\n                                        <option value={'MARRIED'}>สมรส</option>\r\n                                        <option value={'OTHER'}>อื่น ๆ</option>\r\n                                    </NativeSelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl style={{ width: \"100%\" }}>\r\n                                    <InputLabel id=\"demo-mutiple-name-label\">กรุ๊ปเลือด</InputLabel>\r\n                                    <NativeSelect\r\n                                        id=\"demo-customized-select-native\"\r\n                                        input={<BootstrapInput />}\r\n                                        value={select}\r\n                                        onChange={handleChangeblood}\r\n                                        required={true}\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\" \" />\r\n                                        <option value={'O'}>O</option>\r\n                                        <option value={'A'}>A</option>\r\n                                        <option value={'B'}>B</option>\r\n                                        <option value={'AB'}>AB</option>\r\n                                    </NativeSelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"เบอร์โทรศัพท์\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"phone\"\r\n                                        component={TextField}\r\n                                        initialValue={defaultdata.patientById.phone}\r\n                                        parse={normalizePhone}\r\n\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        label=\"เบอร์โทรศัพท์\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"phone\"\r\n                                        component={TextField}\r\n                                        parse={normalizePhone}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"โรงพยาบาลที่ส่งต่อ\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"hospitalRefer\"\r\n                                        component={TextField}\r\n                                        initialValue={defaultdata.patientById.hospitalRefer}\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        label=\"โรงพยาบาลที่ส่งต่อ\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"hospitalRefer\"\r\n                                        component={TextField}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        name=\"congenitalDisease\"\r\n                                        styling=\"field\"\r\n                                        labelname=\"โรคประจำตัว\"\r\n                                        component={MultiSelect}\r\n                                        variant=\"outlined\"\r\n                                        initialValue={defaultdata.patientById.congenitalDisease}\r\n                                        renderValue={selected => (\r\n                                            <div className=\"multi-select-chips\">\r\n                                                {selected.map(value => (\r\n                                                    <Chip\r\n                                                        key={value}\r\n                                                        label={value}\r\n                                                        className=\"multi-select-chip\"\r\n                                                    />\r\n                                                ))}\r\n                                            </div>\r\n                                        )}\r\n                                    >\r\n                                        {test.map((data, index) => (\r\n                                            <MenuItem key={index} value={data}>\r\n                                                {data}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Field>\r\n                                ) : (\r\n                                    <Field\r\n                                        name=\"congenitalDisease\"\r\n                                        styling=\"field\"\r\n                                        labelname=\"โรคประจำตัว\"\r\n                                        component={MultiSelect}\r\n                                        variant=\"outlined\"\r\n                                        renderValue={selected => (\r\n                                            <div className=\"multi-select-chips\">\r\n                                                {selected.map(value => (\r\n                                                    <Chip\r\n                                                        key={value}\r\n                                                        label={value}\r\n                                                        className=\"multi-select-chip\"\r\n                                                    />\r\n                                                ))}\r\n                                            </div>\r\n                                        )}\r\n                                    >\r\n                                        {test.map((data, index) => (\r\n                                            <MenuItem key={index} value={data}>\r\n                                                {data}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Field>\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"ที่อยู่\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"address\"\r\n                                        component={TextField}\r\n                                        initialValue={defaultdata.patientById.address}\r\n\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        label=\"ที่อยู่\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"address\"\r\n                                        component={TextField}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12} style={{ marginTop: 16, textAlign: 'center', width: '100%' }}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    disabled={submitting}\r\n                                >\r\n                                    บันทึกข้อมูล\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                )\r\n                }\r\n            />\r\n        </React.Fragment >\r\n    )\r\n}\r\nexport default PatientsForm","D:\\CTHS_TOEI\\src\\components\\Navbar\\Topbar.js",["254"],"import React from 'react';\r\nimport { AppBar, Hidden, Toolbar, makeStyles, IconButton, Box, Typography } from '@material-ui/core';\r\nimport Icon from '../../img/logo.png';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// icon\r\nimport { IconContext } from 'react-icons';\r\nimport { GiHamburgerMenu } from 'react-icons/gi';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\troot: {\r\n\t\tbackgroundColor: '#FFF',\r\n\t\tpadding: 10,\r\n\t},\r\n}));\r\n\r\nconst Layout = ({ className, onMobileNavOpen, ...rest }) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<AppBar className={clsx(classes.root, className)} {...rest}>\r\n\t\t\t<Toolbar>\r\n\t\t\t\t<Link to=\"/app/homepage\" style={{ textDecoration: 'none' }}>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<img src={Icon} alt=\"icon\" style={{ height: 70, width: 70 }} />\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\t\t\ttextTransform: 'uppercase',\r\n\t\t\t\t\t\t\t\tcolor: '#000',\r\n\t\t\t\t\t\t\t\tmarginLeft: 15,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tClinic Treatment History\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Box flexGrow={1} />\r\n\t\t\t\t<Hidden lgUp>\r\n\t\t\t\t\t<IconContext.Provider value={{ color: 'red', size: '30' }}>\r\n\t\t\t\t\t\t<GiHamburgerMenu onClick={onMobileNavOpen} />\r\n\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t</Hidden>\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t);\r\n};\r\n\r\nLayout.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\tonMobileNavOpen: PropTypes.func,\r\n};\r\n\r\nexport default Layout;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Treatment-form.js",["255","256","257","258","259","260","261","262"],"D:\\CTHS_TOEI\\src\\pages\\Patients\\GraphQL\\Querie.js",[],"D:\\CTHS_TOEI\\src\\pages\\Treatment\\GraphQL\\Querie.js",[],"D:\\CTHS_TOEI\\src\\components\\Navbar\\Sidebar.js",["263","264"],"import React, { useEffect, useState } from 'react';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Avatar, Box, Button, Divider, Drawer, Hidden, List, Typography, makeStyles } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\n// icon\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { IconContext } from 'react-icons';\r\nimport { HiHome, HiDocumentReport } from 'react-icons/hi';\r\nimport { FaUserInjured, FaUserShield, FaUserMd } from 'react-icons/fa';\r\nimport { IoBandageSharp } from 'react-icons/io5';\r\nimport { GiMedicines } from 'react-icons/gi';\r\nimport { AiOutlineMedicineBox } from 'react-icons/ai';\r\nimport { MdExpandLess, MdExpandMore } from 'react-icons/md';\r\n\r\nconst user = {\r\n\tavatar: '',\r\n\tjobTitle: 'Senior Developer',\r\n\tname: 'Katarina Smith',\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\tmobileDrawer: {\r\n\t\twidth: 256,\r\n\t},\r\n\tdesktopDrawer: {\r\n\t\twidth: 256,\r\n\t\ttop: 90,\r\n\t\theight: 'calc(100% - 90px)',\r\n\t},\r\n\tavatar: {\r\n\t\tcursor: 'pointer',\r\n\t\twidth: 90,\r\n\t\theight: 90,\r\n\t},\r\n\tnavTab: {\r\n\t\tpadding: 10,\r\n\t\tpaddingBottom: 20,\r\n\t},\r\n\tname: {\r\n\t\tmargin: 5,\r\n\t\tcolor: 'white',\r\n\t},\r\n\ttextsidebar: {\r\n\t\tfontWeight: 'bold',\r\n\t\tcolor: 'white',\r\n\t},\r\n\tnested: {\r\n\t\tpaddingTop: 10,\r\n\t\tpaddingBottom: 10,\r\n\t\tpaddingLeft: 30,\r\n\t},\r\n}));\r\n\r\nconst Sidebar = ({ onMobileClose, openMobile }) => {\r\n\tconst classes = useStyles();\r\n\tconst location = useLocation();\r\n\tconst [open, setOpen] = React.useState(true);\r\n\r\n\tconst handleClick = () => {\r\n\t\tsetOpen(!open);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (openMobile && onMobileClose) {\r\n\t\t\tonMobileClose();\r\n\t\t}\r\n\t}, [location.pathname]);\r\n\r\n\tconst content = (\r\n\t\t<Box height=\"120vh\" display=\"flex\" flexDirection=\"column\" style={{ backgroundColor: '#0f123f' }} >\r\n\t\t\t<Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\" p={5}>\r\n\t\t\t\t<Avatar className={classes.avatar} component={RouterLink} src={user.avatar} to=\"\" />\r\n\t\t\t\t<Typography className={classes.name} color=\"textPrimary\" variant=\"h6\">\r\n\t\t\t\t\t{user.name}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography className={classes.name} color=\"textSecondary\" variant=\"body2\">\r\n\t\t\t\t\t{user.jobTitle}\r\n\t\t\t\t</Typography>\r\n\t\t\t</Box>\r\n\t\t\t<Divider style={{ backgroundColor: 'white' }} />\r\n\t\t\t<Box p={2}>\r\n\t\t\t\t<List>\r\n\t\t\t\t\t<ListItem button component={Link} className={classes.navTab} to=\"/\">\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<IconContext.Provider value={{ color: 'white', size: '30' }}>\r\n\t\t\t\t\t\t\t\t<HiHome />\r\n\t\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t<Typography className={classes.textsidebar}>Home</Typography>\r\n\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t</ListItem>\r\n\r\n\t\t\t\t\t<ListItem button component={Link} className={classes.navTab} to=\"/app/patients\">\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<IconContext.Provider value={{ color: 'white', size: '30' }}>\r\n\t\t\t\t\t\t\t\t<FaUserInjured />\r\n\t\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t<Typography className={classes.textsidebar}>Patients</Typography>\r\n\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t</ListItem>\r\n\r\n\t\t\t\t\t<ListItem button component={Link} className={classes.navTab} to=\"/app/treatment\">\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<IconContext.Provider value={{ color: 'white', size: '30' }}>\r\n\t\t\t\t\t\t\t\t<IoBandageSharp />\r\n\t\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t<Typography className={classes.textsidebar}>Treatment</Typography>\r\n\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t</ListItem>\r\n\r\n\t\t\t\t\t<ListItem button component={Link} className={classes.navTab} to=\"/app/diagnosis\">\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<IconContext.Provider value={{ color: 'white', size: '30' }}>\r\n\t\t\t\t\t\t\t\t<FaUserMd />\r\n\t\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t<Typography className={classes.textsidebar}>Diagnosis</Typography>\r\n\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t</ListItem>\r\n\r\n\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\tcomponent={Link}\r\n\t\t\t\t\t\tclassName={classes.navTab}\r\n\t\t\t\t\t\tto=\"/app/medicine\"\r\n\t\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<IconContext.Provider value={{ color: 'white', size: '30' }}>\r\n\t\t\t\t\t\t\t\t<AiOutlineMedicineBox />\r\n\t\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t<Typography className={classes.textsidebar}>Medicine</Typography>\r\n\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t\t{open ? (\r\n\t\t\t\t\t\t\t<IconContext.Provider value={{ color: 'white', size: '30' }}>\r\n\t\t\t\t\t\t\t\t<MdExpandLess />\r\n\t\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<IconContext.Provider value={{ color: 'white', size: '30' }}>\r\n\t\t\t\t\t\t\t\t<MdExpandMore />\r\n\t\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</ListItem>\r\n\r\n\t\t\t\t\t<Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n\t\t\t\t\t\t<List component=\"div\" disablePadding>\r\n\t\t\t\t\t\t\t<ListItem button component={Link} className={classes.nested} to=\"/app/medicine\">\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<IconContext.Provider value={{ color: 'white', size: '30' }}>\r\n\t\t\t\t\t\t\t\t\t\t<GiMedicines />\r\n\t\t\t\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t\t\t<Typography className={classes.textsidebar}>Prescription</Typography>\r\n\t\t\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t<ListItem button component={Link} className={classes.nested} to=\"/app/medicine/drugstore\">\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<IconContext.Provider value={{ color: 'white', size: '30' }}>\r\n\t\t\t\t\t\t\t\t\t\t<GiMedicines />\r\n\t\t\t\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t\t\t<Typography className={classes.textsidebar}>Drug Storehouse</Typography>\r\n\t\t\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</Collapse>\r\n\r\n\t\t\t\t\t<ListItem button component={Link} className={classes.navTab} to=\"/app/report\">\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<IconContext.Provider value={{ color: 'white', size: '30' }}>\r\n\t\t\t\t\t\t\t\t<HiDocumentReport />\r\n\t\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t<Typography className={classes.textsidebar}>Report</Typography>\r\n\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t</ListItem>\r\n\r\n\t\t\t\t\t<ListItem button component={Link} className={classes.navTab} to=\"/app/admin\">\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<IconContext.Provider value={{ color: 'white', size: '30' }}>\r\n\t\t\t\t\t\t\t\t<FaUserShield />\r\n\t\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t<Typography className={classes.textsidebar}>Administor</Typography>\r\n\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t</List>\r\n\t\t\t</Box>\r\n\t\t\t<Divider style={{ backgroundColor: 'white' }} />\r\n\t\t\t<Box p={2} m={2}>\r\n\t\t\t\t<Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" mt={2}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcomponent=\"a\"\r\n\t\t\t\t\t\thref=\"/login\"\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginBottom: 10,\r\n\t\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\t\tbackgroundColor: '#017efa',\r\n\t\t\t\t\t\t\tcolor: 'white',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tLOG IN\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button component=\"a\" href=\"/register\" className={classes.textsidebar}>\r\n\t\t\t\t\t\tDon't Have an Account?\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Hidden lgUp>\r\n\t\t\t\t<Drawer\r\n\t\t\t\t\tanchor=\"left\"\r\n\t\t\t\t\tclasses={{ paper: classes.mobileDrawer }}\r\n\t\t\t\t\tonClose={onMobileClose}\r\n\t\t\t\t\topen={openMobile}\r\n\t\t\t\t\tvariant=\"temporary\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{content}\r\n\t\t\t\t</Drawer>\r\n\t\t\t</Hidden>\r\n\t\t\t<Hidden mdDown>\r\n\t\t\t\t<Drawer anchor=\"left\" classes={{ paper: classes.desktopDrawer }} open variant=\"persistent\">\r\n\t\t\t\t\t{content}\r\n\t\t\t\t</Drawer>\r\n\t\t\t</Hidden>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nSidebar.propTypes = {\r\n\tonMobileClose: PropTypes.func,\r\n\topenMobile: PropTypes.bool,\r\n};\r\n\r\nSidebar.defaultProps = {\r\n\tonMobileClose: () => {},\r\n\topenMobile: false,\r\n};\r\n\r\nexport default Sidebar;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\PainForm.js",["265","266","267","268","269","270"],"import React from \"react\";\r\nimport { Grid, FormControlLabel, Button } from \"@material-ui/core\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField, Checkbox, Radio, Select } from \"final-form-material-ui\";\r\n\r\nconst PainForm = (props) => {\r\n  const { mode, defaultdata } = props;\r\n  const normalizeFloat = (value) => {\r\n    if (!value) return value;\r\n    const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n    let number = parseFloat(onlyNums);\r\n    return number;\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"acheArea\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ปวดบริเวณ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            initialValue={defaultdata.treatmentById.acheArea}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"acheArea\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ปวดบริเวณ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"acheDate\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"เป็นมานาน (วัน)\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            parse={normalizeFloat}\r\n            initialValue={defaultdata.treatmentById.acheDate}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"acheDate\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"เป็นมานาน (วัน)\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            parse={normalizeFloat}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"painScore\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"Pain score\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            parse={normalizeFloat}\r\n            initialValue={defaultdata.treatmentById.painScore}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"painScore\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"Pain score\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            parse={normalizeFloat}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"acheDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ลักษณะการปวด\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            initialValue={defaultdata.treatmentById.acheDetail}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"acheDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ลักษณะการปวด\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"trigger\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"สิ่งที่กระตุ้น/สิ่งที่บรรเทา\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            initialValue={defaultdata.treatmentById.trigger}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"trigger\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"สิ่งที่กระตุ้น/สิ่งที่บรรเทา\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"crackDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ร้าวไป\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            initialValue={defaultdata.treatmentById.crackDetail}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"crackDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ร้าวไป\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={12}>\r\n          {mode === 'update' ? (\r\n               <Field\r\n               fullWidth\r\n               required\r\n               name=\"physicalExamination\"\r\n               component={TextField}\r\n               type=\"text\"\r\n               label=\"การตรวจสอบทางกายภาพ\"\r\n               variant=\"outlined\"\r\n               style={{ width: \"100%\" }}\r\n               initialValue={defaultdata.treatmentById.physicalExamination}\r\n             />\r\n          ):(\r\n            <Field\r\n            fullWidth\r\n            required\r\n            name=\"physicalExamination\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"การตรวจสอบทางกายภาพ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n          )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default PainForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Diarrhea.js",["271","272","273","274"],"import React from \"react\";\r\nimport { Grid, FormControlLabel, Button } from \"@material-ui/core\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField, Checkbox, Radio, Select } from \"final-form-material-ui\";\r\n\r\nconst DiarrheaForm = (props) => {\r\n  const { mode, defaultdata } = props;\r\n  const normalizeAmountdiarrhea = (value) => {\r\n    if (!value) return value;\r\n    const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n    let number = parseFloat(onlyNums);\r\n    return number;\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"diarrheaAmount\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"จำนวนครั้งในการถ่าย\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            parse={normalizeAmountdiarrhea}\r\n            initialValue={defaultdata.treatmentById.diarrheaAmount}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"diarrheaAmount\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"จำนวนครั้งในการถ่าย\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            parse={normalizeAmountdiarrhea}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"diarrheaDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ลักษณะอุจจาระ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            initialValue={defaultdata.treatmentById.diarrheaDetail}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"diarrheaDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ลักษณะอุจจาระ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"stomachache\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ลักษณะการปวดท้อง\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            initialValue={defaultdata.treatmentById.stomachache}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"stomachache\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ลักษณะการปวดท้อง\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"bowelSound\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"bowel sound\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            initialValue={defaultdata.treatmentById.bowelSound}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"bowelSound\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"bowel sound\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={12} align=\"center\">\r\n        {mode === \"update\" ? (\r\n          <React.Fragment>\r\n            <FormControlLabel\r\n              label=\"คลื่นไส้/อาเจียน\"\r\n              control={\r\n                <Field\r\n                  name=\"isVomit\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isVomit}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"อุจาระมีมูลเลือด\"\r\n              control={\r\n                <Field\r\n                  name=\"isFluxStool\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isFluxStool}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีไข้\"\r\n              control={\r\n                <Field\r\n                  name=\"isFever\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isFever}\r\n                />\r\n              }\r\n            />\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            <FormControlLabel\r\n              label=\"คลื่นไส้/อาเจียน\"\r\n              control={\r\n                <Field name=\"isVomit\" component={Checkbox} type=\"checkbox\" />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"อุจาระมีมูลเลือด\"\r\n              control={\r\n                <Field\r\n                  name=\"isFluxStool\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีไข้\"\r\n              control={\r\n                <Field name=\"isFever\" component={Checkbox} type=\"checkbox\" />\r\n              }\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={12}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"physicalExamination\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"การตรวจสอบทางกายภาพ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            initialValue={defaultdata.treatmentById.physicalExamination}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"physicalExamination\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"การตรวจสอบทางกายภาพ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default DiarrheaForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\FeverForm.js",["275","276","277","278"],"import React from \"react\";\r\nimport { Grid, FormControlLabel, Button } from \"@material-ui/core\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField, Checkbox, Radio, Select } from \"final-form-material-ui\";\r\n\r\nconst FeverForm = (props) => {\r\n  const { mode, defaultdata } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container={\"true\"} item sx={12} spacing={2}>\r\n        <Grid item={\"true\"} xs={6} direction=\"column\">\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"ไข้\"\r\n                control={\r\n                  <Field\r\n                    name=\"isFever\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isFever}\r\n                  />\r\n                }\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"ไข้\"\r\n                control={\r\n                  <Field name=\"isFever\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"ไอ\"\r\n                control={\r\n                  <Field\r\n                    name=\"isCough\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isCough}\r\n                  />\r\n                }\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"ไอ\"\r\n                control={\r\n                  <Field name=\"isCough\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"เสมหะ\"\r\n                control={\r\n                  <Field\r\n                    name=\"isPhlegm\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isPhlegm}\r\n                  />\r\n                }\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"เสมหะ\"\r\n                control={\r\n                  <Field name=\"isPhlegm\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"น้ำมูก\"\r\n                control={\r\n                  <Field\r\n                    name=\"isSnot\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isSnot}\r\n                  />\r\n                }\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"น้ำมูก\"\r\n                control={\r\n                  <Field name=\"isSnot\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"ปวดศีรษะ\"\r\n                control={\r\n                  <Field\r\n                    name=\"isHeadache\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isHeadache}\r\n                  />\r\n                }\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"ปวดศีรษะ\"\r\n                control={\r\n                  <Field\r\n                    name=\"isHeadache\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"คัดจมูก\"\r\n                control={\r\n                  <Field\r\n                    name=\"isStuffy\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isStuffy}\r\n                  />\r\n                }\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"คัดจมูก\"\r\n                control={\r\n                  <Field name=\"isStuffy\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item={\"true\"} xs={6}>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"เบื่ออาหาร\"\r\n                control={\r\n                  <Field\r\n                    name=\"isAnorexia\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isAnorexia}\r\n                  />\r\n                }\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"เบื่ออาหาร\"\r\n                control={\r\n                  <Field\r\n                    name=\"isAnorexia\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"เจ็บคอ\"\r\n                control={\r\n                  <Field\r\n                    name=\"isSoreThroat\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isSoreThroat}\r\n                  />\r\n                }\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"เจ็บคอ\"\r\n                control={\r\n                  <Field\r\n                    name=\"isSoreThroat\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"คันตา\"\r\n                control={\r\n                  <Field\r\n                    name=\"isEyeItching\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isEyeItching}\r\n                  />\r\n                }\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"คันตา\"\r\n                control={\r\n                  <Field\r\n                    name=\"isEyeItching\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"Injected pharynx\"\r\n                control={\r\n                  <Field\r\n                    name=\"isInjectedPharynx\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isInjectedPharynx}\r\n                  />\r\n                }\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"Injected pharynx\"\r\n                control={\r\n                  <Field\r\n                    name=\"isInjectedPharynx\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"Exudates\"\r\n                control={\r\n                  <Field\r\n                    name=\"isExudates\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isExudates}\r\n                  />\r\n                }\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"Exudates\"\r\n                control={\r\n                  <Field\r\n                    name=\"isExudates\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"Lungs \"\r\n                control={\r\n                  <Field\r\n                    name=\"isLungClear\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isLungClear}\r\n                  />\r\n                }\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"Lungs \"\r\n                control={\r\n                  <Field\r\n                    name=\"isLungClear\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item={\"true\"} xs={12}>\r\n          {mode === \"update\" ? (\r\n            <Field\r\n              fullWidth\r\n              required\r\n              name=\"physicalExamination\"\r\n              component={TextField}\r\n              type=\"text\"\r\n              label=\"การตรวจสอบทางกายภาพ\"\r\n              variant=\"outlined\"\r\n              style={{ width: \"100%\" }}\r\n              initialValue={defaultdata.treatmentById.physicalExamination}\r\n            />\r\n          ) : (\r\n            <Field\r\n              fullWidth\r\n              required\r\n              name=\"physicalExamination\"\r\n              component={TextField}\r\n              type=\"text\"\r\n              label=\"การตรวจสอบทางกายภาพ\"\r\n              variant=\"outlined\"\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default FeverForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\ConAccidentForm.js",["279","280","281","282","283"],"import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControlLabel,\r\n  Button,\r\n  InputBase,\r\n  FormControl,\r\n  InputLabel,\r\n  NativeSelect,\r\n} from \"@material-ui/core\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField, Checkbox, Radio, Select } from \"final-form-material-ui\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"100%\",\r\n    padding: \"10px 26px 10px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      borderRadius: 4,\r\n      borderColor: \"#80bdff\",\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst ConAccidentForm = (props) => {\r\n  const { mode, defaultdata, conAccident } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"moreDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ลักษณะบาดเเผล\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={3}\r\n            initialValue={defaultdata.treatmentById.moreDetail}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"moreDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ลักษณะบาดเเผล\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={3}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"advice\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"คำแนะนำ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={3}\r\n            initialValue={defaultdata.treatmentById.advice}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"advice\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"คำแนะนำ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={3}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <FormControl style={{ width: \"100%\" }}>\r\n          <InputLabel id=\"demo-mutiple-name-label\">อาการ</InputLabel>\r\n          <NativeSelect\r\n            id=\"demo-customized-select-native\"\r\n            input={<BootstrapInput />}\r\n            value={conAccident}\r\n            onChange={props.handleChangeAccident}\r\n            required={true}\r\n            name=\"Symthom\"\r\n          >\r\n            <option aria-label=\"None\" value=\" \" />\r\n            <option value={\"WORSE\"}>แย่ลง</option>\r\n            <option value={\"SAME\"}>เท่าเดิม</option>\r\n            <option value={\"BETTER\"}>ดีขึ้น</option>\r\n          </NativeSelect>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <FormControlLabel\r\n            label=\"ผู้ป่วยเบิกประกัน\"\r\n            control={\r\n              <Field name=\"isInsurance\" component={Checkbox} type=\"checkbox\" initialValue={defaultdata.treatmentById.isInsurance}/>\r\n            }\r\n          />\r\n        ) : (\r\n          <FormControlLabel\r\n            label=\"ผู้ป่วยเบิกประกัน\"\r\n            control={\r\n              <Field name=\"isInsurance\" component={Checkbox} type=\"checkbox\" />\r\n            }\r\n          />\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default ConAccidentForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\EyesForm.js",["284","285","286","287"],"import React from \"react\";\r\nimport { Grid, FormControlLabel, Button } from \"@material-ui/core\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField, Checkbox, Radio, Select } from \"final-form-material-ui\";\r\n\r\nconst EyeForm = (props) => {\r\n  const { mode, defaultdata } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container={\"true\"} item sx={12} spacing={2}>\r\n        <Grid item={\"true\"} xs={6} direction=\"column\">\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"ตาซ้าย\"\r\n                control={\r\n                  <Field\r\n                    name=\"leftEye\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.leftEye}\r\n                  />\r\n                }\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"ตาซ้าย\"\r\n                control={\r\n                  <Field name=\"leftEye\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"ตาขวา\"\r\n                control={\r\n                  <Field\r\n                    name=\"rightEye\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.rightEye}\r\n                  />\r\n                }\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"ตาขวา\"\r\n                control={\r\n                  <Field name=\"rightEye\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"มีอาการปวด\"\r\n                control={\r\n                  <Field\r\n                    name=\"isPain\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isPain}\r\n                  />\r\n                }\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"มีอาการปวด\"\r\n                control={\r\n                  <Field name=\"isPain\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"มีอาการคัน\"\r\n                control={\r\n                  <Field\r\n                    name=\"isItching\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isItching}\r\n                  />\r\n                }\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"มีอาการคัน\"\r\n                control={\r\n                  <Field\r\n                    name=\"isItching\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"เป็นโรคตาแดง\"\r\n                control={\r\n                  <Field\r\n                    name=\"isConjunctivitis\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isConjunctivitis}\r\n                  />\r\n                }\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"เป็นโรคตาแดง\"\r\n                control={\r\n                  <Field\r\n                    name=\"isConjunctivitis\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"มีอาการเจ็บ\"\r\n                control={\r\n                  <Field\r\n                    name=\"isSore\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isSore}\r\n                  />\r\n                }\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"มีอาการเจ็บ\"\r\n                control={\r\n                  <Field name=\"isSore\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            <FormControlLabel\r\n              label=\"มีอาการระคายเคือง\"\r\n              control={\r\n                <Field\r\n                  name=\"isIrritation\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                />\r\n              }\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item={\"true\"} xs={6}>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"มีอาการบวม\"\r\n                control={\r\n                  <Field\r\n                    name=\"isSwelling\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isSwelling}\r\n                  />\r\n                }\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"มีอาการบวม\"\r\n                control={\r\n                  <Field\r\n                    name=\"isSwelling\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"น้ำตาไหล\"\r\n                control={\r\n                  <Field\r\n                    name=\"isTear\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isTear}\r\n                  />\r\n                }\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"น้ำตาไหล\"\r\n                control={\r\n                  <Field name=\"isTear\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"ตาพร่ามัว\"\r\n                control={\r\n                  <Field\r\n                    name=\"isBlurred\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isBlurred}\r\n                  />\r\n                }\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"ตาพร่ามัว\"\r\n                control={\r\n                  <Field\r\n                    name=\"isBlurred\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"ขี้ตาเยอะ\"\r\n                control={\r\n                  <Field\r\n                    name=\"isGum\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isGum}\r\n                  />\r\n                }\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"ขี้ตาเยอะ\"\r\n                control={\r\n                  <Field name=\"isGum\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"เป็นหนอง\"\r\n                control={\r\n                  <Field\r\n                    name=\"isPurulent\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isPurulent}\r\n                  />\r\n                }\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"เป็นหนอง\"\r\n                control={\r\n                  <Field\r\n                    name=\"isPurulent\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"สิ่งเเปลกปลอมเข้าดวงตา\"\r\n                control={\r\n                  <Field\r\n                    name=\"isMatter\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isMatter}\r\n                  />\r\n                }\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"สิ่งเเปลกปลอมเข้าดวงตา\"\r\n                control={\r\n                  <Field name=\"isMatter\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item={\"true\"} xs={12}>\r\n          {mode === \"update\" ? (\r\n            <Field\r\n              fullWidth\r\n              required\r\n              name=\"physicalExamination\"\r\n              component={TextField}\r\n              type=\"text\"\r\n              label=\"การตรวจสอบทางกายภาพ\"\r\n              variant=\"outlined\"\r\n              style={{ width: \"100%\" }}\r\n              initialValue={defaultdata.treatmentById.physicalExamination}\r\n            />\r\n          ) : (\r\n            <Field\r\n              fullWidth\r\n              required\r\n              name=\"physicalExamination\"\r\n              component={TextField}\r\n              type=\"text\"\r\n              label=\"การตรวจสอบทางกายภาพ\"\r\n              variant=\"outlined\"\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default EyeForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\SkinForm.js",["288","289","290","291"],"import React from \"react\";\r\nimport { Grid, FormControlLabel, Button } from \"@material-ui/core\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField, Checkbox, Radio, Select } from \"final-form-material-ui\";\r\n\r\nconst Rashdatenormalization = (value) => {\r\n  if (!value) return value;\r\n  const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n  let number = parseFloat(onlyNums);\r\n  return number;\r\n};\r\n\r\nconst SkinForm = (props) => {\r\n  const { mode, defaultdata } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"rashArea\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"บริเวณผื่น\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={2}\r\n            initialValue={defaultdata.treatmentById.rashArea}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"rashArea\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"บริเวณผื่น\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={2}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"rashDate\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"เป็นมานาน (วัน)\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={2}\r\n            parse={Rashdatenormalization}\r\n            initialValue={defaultdata.treatmentById.rashDate}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"rashDate\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"เป็นมานาน (วัน)\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={2}\r\n            parse={Rashdatenormalization}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"rashDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"สัมผัสโดน\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={2}\r\n            initialValue={defaultdata.treatmentById.rashDetail}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"rashDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"สัมผัสโดน\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={2}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"physicalExamination\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"การตรวจสอบทางกายภาพ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={2}\r\n            initialValue={defaultdata.treatmentById.physicalExamination}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"physicalExamination\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"การตรวจสอบทางกายภาพ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={2}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={12} align=\"center\">\r\n        {mode === \"update\" ? (\r\n          <React.Fragment>\r\n            <FormControlLabel\r\n              label=\"มีอาการคัน\"\r\n              control={\r\n                <Field\r\n                  name=\"isItching\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isItching}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีอาการปวด\"\r\n              control={\r\n                <Field\r\n                  name=\"isPain\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isPain}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีอารการแสบ\"\r\n              control={\r\n                <Field\r\n                  name=\"isStinging\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isStinging}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีอาการปวด\"\r\n              control={\r\n                <Field\r\n                  name=\"isSwelling\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isSwelling}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีไข้\"\r\n              control={\r\n                <Field\r\n                  name=\"isFever\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isFever}\r\n                />\r\n              }\r\n            />\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            <FormControlLabel\r\n              label=\"มีอาการคัน\"\r\n              control={\r\n                <Field name=\"isItching\" component={Checkbox} type=\"checkbox\" />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีอาการปวด\"\r\n              control={\r\n                <Field name=\"isPain\" component={Checkbox} type=\"checkbox\" />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีอารการแสบ\"\r\n              control={\r\n                <Field name=\"isStinging\" component={Checkbox} type=\"checkbox\" />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีอาการปวด\"\r\n              control={\r\n                <Field name=\"isSwelling\" component={Checkbox} type=\"checkbox\" />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีไข้\"\r\n              control={\r\n                <Field name=\"isFever\" component={Checkbox} type=\"checkbox\" />\r\n              }\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default SkinForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\AccidentForm.js",["292","293","294","295"],"import React from \"react\";\r\nimport { Grid, FormControlLabel, Button } from \"@material-ui/core\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField, Checkbox, Radio, Select } from \"final-form-material-ui\";\r\nimport moment from \"moment\";\r\n\r\nconst AccidentForm = (props) => {\r\n  const { mode, defaultdata } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item={\"true\"} xs={12}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"woundArea\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"บาดเเผลบริเวณ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n            initialValue={defaultdata.treatmentById.woundArea}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"woundArea\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"บาดเเผลบริเวณ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={12}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"woundLocation\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"สถานที่เกิดเหตุ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n            initialValue={defaultdata.treatmentById.woundLocation}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"woundLocation\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"สถานที่เกิดเหตุ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={12}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            id=\"date\"\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"วันที่เกิดเหตุ\"\r\n            style={{ width: \"100%\" }}\r\n            required={true}\r\n            component={TextField}\r\n            name=\"woundDate\"\r\n            initialValue={`${moment(defaultdata.treatmentById.woundDate).format(\r\n              \"YYYY-MM-DD\"\r\n            )}`}\r\n          />\r\n        ) : (\r\n          <Field\r\n            id=\"date\"\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"วันที่เกิดเหตุ\"\r\n            style={{ width: \"100%\" }}\r\n            required={true}\r\n            component={TextField}\r\n            name=\"woundDate\"\r\n            defaultValue={`${moment(new Date()).format(\"YYYY-MM-DD\")}`}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={4}>\r\n        {mode === \"update\" ? (\r\n          <FormControlLabel\r\n            label=\"เคยเข้ารับการรักษามาเเล้ว\"\r\n            control={\r\n              <Field\r\n                name=\"isTreatBefore\"\r\n                component={Checkbox}\r\n                type=\"checkbox\"\r\n                initialValue={defaultdata.treatmentById.isTreatBefore}\r\n              />\r\n            }\r\n          />\r\n        ) : (\r\n          <FormControlLabel\r\n            label=\"เคยเข้ารับการรักษามาเเล้ว\"\r\n            control={\r\n              <Field\r\n                name=\"isTreatBefore\"\r\n                component={Checkbox}\r\n                type=\"checkbox\"\r\n              />\r\n            }\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={4}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"treatBeforeDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ที่\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            initialValue={defaultdata.treatmentById.treatBeforeDetail}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"treatBeforeDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ที่\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={4}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            id=\"date\"\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"เมื่อวันที่\"\r\n            style={{ width: \"100%\" }}\r\n            required={true}\r\n            component={TextField}\r\n            name=\"treatBeforeDate\"\r\n            defaultValue={`${moment(\r\n              defaultdata.treatmentById.treatBeforeDate\r\n            ).format(\"YYYY-MM-DD\")}`}\r\n          />\r\n        ) : (\r\n          <Field\r\n            id=\"date\"\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"เมื่อวันที่\"\r\n            style={{ width: \"100%\" }}\r\n            required={true}\r\n            component={TextField}\r\n            name=\"treatBeforeDate\"\r\n            defaultValue={`${moment(new Date()).format(\"YYYY-MM-DD\")}`}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={12} align=\"center\">\r\n        {mode === \"update\" ? (\r\n          <React.Fragment>\r\n            <FormControlLabel\r\n              label=\"ผู้ป่วยฉุกเฉิน\"\r\n              control={\r\n                <Field\r\n                  name=\"isEmergency\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isEmergency}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"เบิกประกันอุบัติเหตุ\"\r\n              control={\r\n                <Field\r\n                  name=\"isInsurance\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isInsurance}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"สวมหมวกันน็อค/คาดเข็มขัด\"\r\n              control={\r\n                <Field \r\n                name=\"isSafety\" \r\n                component={Checkbox} \r\n                type=\"checkbox\"\r\n                initialValue={defaultdata.treatmentById.isSafety} \r\n                />\r\n              }\r\n            />\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            <FormControlLabel\r\n              label=\"ผู้ป่วยฉุกเฉิน\"\r\n              control={\r\n                <Field\r\n                  name=\"isEmergency\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"เบิกประกันอุบัติเหตุ\"\r\n              control={\r\n                <Field\r\n                  name=\"isInsurance\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"สวมหมวกันน็อค/คาดเข็มขัด\"\r\n              control={\r\n                <Field name=\"isSafety\" component={Checkbox} type=\"checkbox\" />\r\n              }\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default AccidentForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\GenaralForm.js",["296","297","298","299","300","301"],"import React from \"react\";\r\nimport { Grid, FormControlLabel, Button } from \"@material-ui/core\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField, Checkbox, Radio, Select } from \"final-form-material-ui\";\r\n\r\nconst GeneralForm = (props) => {\r\n  const { mode, defaultdata } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"chiefComplaint\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"อาการสำคัญ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n            initialValue={defaultdata.treatmentById.chiefComplaint}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"chiefComplaint\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"อาการสำคัญ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"presentIllness\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ประวัติปัจจุบัน\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n            initialValue={defaultdata.treatmentById.presentIllness}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"presentIllness\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ประวัติปัจจุบัน\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n          />\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default GeneralForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\GraphQL\\Mutation.js",[],"D:\\CTHS_TOEI\\src\\pages\\Patients\\GraphQL\\Mutation.js",[],"D:\\CTHS_TOEI\\src\\MulitiSelect.jsx",["302"],"import React from \"react\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n};\r\n\r\nexport default ({\r\n  input: { value, name, onChange, ...restInput },\r\n  meta,\r\n  ...rest\r\n}) => (\r\n  <FormControl className={rest.styling}>\r\n    <InputLabel htmlFor=\"select-multiple-chip\">{rest.labelname}</InputLabel>\r\n    <Select\r\n      MenuProps={MenuProps}\r\n      multiple\r\n      displayEmpty\r\n      {...rest}\r\n      name={name}\r\n      inputProps={restInput}\r\n      error={meta.error && meta.touched}\r\n      onChange={onChange}\r\n      value={[...value]}\r\n    />\r\n  </FormControl>\r\n);\r\n","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Medicine-form.js",["303","304","305","306","307","308","309","310","311","312","313"],"import React, { useCallback, useEffect, useState } from 'react';\r\nimport {\r\n\tGrid,\r\n\tTypography,\r\n\tMenuItem,\r\n\tRadioGroup,\r\n\tFormControlLabel,\r\n\tFormControl,\r\n\tFormLabel,\r\n\tButton,\r\n\tChip,\r\n\tNativeSelect,\r\n\tInputBase,\r\n\tInputLabel,\r\n} from '@material-ui/core';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { TextField, Radio, Select } from 'final-form-material-ui';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_MEDICINE, UPDATE_MEDICINE_BY_ID } from './graphql/Mutation';\r\nimport { GET_MEDICINES } from './graphql/Queries';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t'& .MuiTextField-root': {\r\n\t\t\twidth: '25ch',\r\n\t\t},\r\n\t},\r\n\tformControl: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tminWidth: 120,\r\n\t\tmaxWidth: 300,\r\n\t},\r\n\tchips: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\tchip: {\r\n\t\tmargin: 2,\r\n\t},\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n\troot: {\r\n\t\t'label + &': {\r\n\t\t\tmarginTop: theme.spacing(3),\r\n\t\t},\r\n\t},\r\n\tinput: {\r\n\t\tborderRadius: 4,\r\n\t\tposition: 'relative',\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\tborder: '1px solid #ced4da',\r\n\t\tfontSize: 16,\r\n\t\twidth: '100%',\r\n\t\tpadding: '10px 26px 10px 12px',\r\n\t\ttransition: theme.transitions.create(['border-color', 'box-shadow']),\r\n\t\tfontFamily: [\r\n\t\t\t'-apple-system',\r\n\t\t\t'BlinkMacSystemFont',\r\n\t\t\t'\"Segoe UI\"',\r\n\t\t\t'Roboto',\r\n\t\t\t'\"Helvetica Neue\"',\r\n\t\t\t'Arial',\r\n\t\t\t'sans-serif',\r\n\t\t\t'\"Apple Color Emoji\"',\r\n\t\t\t'\"Segoe UI Emoji\"',\r\n\t\t\t'\"Segoe UI Symbol\"',\r\n\t\t].join(','),\r\n\t\t'&:focus': {\r\n\t\t\tborderRadius: 4,\r\n\t\t\tborderColor: '#80bdff',\r\n\t\t\tboxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n\t\t},\r\n\t},\r\n}))(InputBase);\r\n\r\nconst MedicineForm = (props) => {\r\n\tconst { mode, defaultdata } = props;\r\n\tlet navigate = useNavigate();\r\n\tconst classes = useStyles();\r\n\tconst [metType, setMedType] = useState('');\r\n\r\n\tconst [addMedicine] = useMutation(ADD_MEDICINE);\r\n\tconst [updateMedicine] = useMutation(UPDATE_MEDICINE_BY_ID);\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetMedType(event.target.value);\r\n\t};\r\n\r\n\tconst normalizeAmount = (value) => {\r\n\t\tif (!value) return value;\r\n\t\tconst onlyNums = value.replace(/[^\\d]/g, '');\r\n\t\tlet number = parseFloat(onlyNums);\r\n\t\treturn number;\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (mode === 'update') {\r\n\t\t\tsetMedType(defaultdata.medicineById.medType);\r\n\t\t\tconsole.log(defaultdata.medicineById);\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst validate = values => {\r\n\t\tconst errors = {}\r\n\t\tif (!values.name) {\r\n\t\t\terrors.name = 'Required'\r\n\t\t}\r\n\t\tif (!values.description) {\r\n\t\t\terrors.description = 'Required'\r\n\t\t}\r\n\t\tif (!values.amount) {\r\n\t\t\terrors.amount = 'Required'\r\n\t\t}\r\n\t\tif (!values.unitType) {\r\n\t\t\terrors.unitType = 'Required'\r\n\t\t}\r\n\r\n\t\treturn errors\r\n\t}\r\n\r\n\tconst onSubmitCreate = useCallback(\r\n\t\tasync (value) => {\r\n\t\t\tconsole.log('create ja')\r\n\t\t\tconst variables = {\r\n\t\t\t\trecord: {\r\n\t\t\t\t\tmedType: metType,\r\n\t\t\t\t\tname: value.name,\r\n\t\t\t\t\tdescription: value.description,\r\n\t\t\t\t\tamount: value.amount,\r\n\t\t\t\t\tunitType: value.unitType,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t\ttry {\r\n\t\t\t\tawait addMedicine({ variables, refetchQueries: [{ query: GET_MEDICINES }] });\r\n\t\t\t\tsetMedType('');\r\n\t\t\t\talert('บันทึกข้อมูลสำเร็จ');\r\n\t\t\t\tnavigate(`/app/medicine/drugstore`);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\talert('เกิดข้อผิดพลาด');\r\n\t\t\t}\r\n\t\t},\r\n\t\t[addMedicine, metType]\r\n\t);\r\n\r\n\tconst onSubmitUpdate = useCallback(\r\n\t\tasync (value) => {\r\n\t\t\tconst variables = {\r\n\t\t\t\tid: defaultdata.medicineById._id,\r\n\t\t\t\trecord: {\r\n\t\t\t\t\tmedType: metType,\r\n\t\t\t\t\tname: value.name,\r\n\t\t\t\t\tdescription: value.description,\r\n\t\t\t\t\tamount: value.amount,\r\n\t\t\t\t\tunitType: value.unitType,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t\ttry {\r\n\t\t\t\tawait updateMedicine({ variables, refetchQueries: [{ query: GET_MEDICINES }] });\r\n\t\t\t\tsetMedType('');\r\n\t\t\t\talert('บันทึกข้อมูลสำเร็จ');\r\n\t\t\t\tnavigate(`/app/medicine/drugstore`);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\talert('เกิดข้อผิดพลาด' + metType);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[updateMedicine, metType]\r\n\t);\r\n\tconst onSubmit = mode === 'update' ? onSubmitUpdate : onSubmitCreate;\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Form\r\n\t\t\t\tonSubmit={onSubmit}\r\n\t\t\t\tvalidate={validate}\r\n\t\t\t\trender={({ handleSubmit, submitting }) => (\r\n\t\t\t\t\t<form className={classes.root}  autoComplete=\"true\" onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t{mode === 'update' ? (\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"ชื่อ\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tinitialValue={defaultdata.medicineById.name}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"ชื่อ\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t{mode === 'update' ? (\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"คำอธิบายยา\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tinitialValue={defaultdata.medicineById.description}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"คำอธิบายยา\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t{mode === 'update' ? (\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tname=\"amount\"\r\n\t\t\t\t\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"จำนวน\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tinitialValue={defaultdata.medicineById.amount}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tparse={normalizeAmount}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tname=\"amount\"\r\n\t\t\t\t\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"จำนวน\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tparse={normalizeAmount}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t{mode === 'update' ? (\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tname=\"unitType\"\r\n\t\t\t\t\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"ประเภทหน่วย\"\r\n\t\t\t\t\t\t\t\t\t\tinitialValue={defaultdata.medicineById.unitType}\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tname=\"unitType\"\r\n\t\t\t\t\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"ประเภทหน่วย\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t{mode === 'update' ? (\r\n\t\t\t\t\t\t\t\t\t<FormControl style={{ width: '100%' }}>\r\n\t\t\t\t\t\t\t\t\t\t<InputLabel id=\"demo-mutiple-name-label\">ประเภท</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t<NativeSelect\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"demo-customized-select-native\"\r\n\t\t\t\t\t\t\t\t\t\t\tinput={<BootstrapInput />}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={metType}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<option aria-label=\"None\" value=\" \" />\r\n\t\t\t\t\t\t\t\t\t\t\t<option value={'MEDICINE'}>ยา</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value={'SUPPLY'}>เวชภัณฑ์</option>\r\n\t\t\t\t\t\t\t\t\t\t</NativeSelect>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<FormControl style={{ width: '100%' }}>\r\n\t\t\t\t\t\t\t\t\t\t<InputLabel id=\"demo-mutiple-name-label\">ประเภท</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t<NativeSelect\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"demo-customized-select-native\"\r\n\t\t\t\t\t\t\t\t\t\t\tinput={<BootstrapInput />}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={metType}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<option aria-label=\"None\" value=\" \" />\r\n\t\t\t\t\t\t\t\t\t\t\t<option value={'MEDICINE'}>ยา</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value={'SUPPLY'}>เวชภัณฑ์</option>\r\n\t\t\t\t\t\t\t\t\t\t</NativeSelect>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12} style={{ marginTop: 16, textAlign: 'center', width: '100%' }}>\r\n\t\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={submitting}>\r\n\t\t\t\t\t\t\t\t\tบันทึกข้อมูล\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\nexport default MedicineForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Admins\\GraphQL\\Querie.js",[],"D:\\CTHS_TOEI\\src\\pages\\Admins\\User-form.js",["314","315","316"],"import React, { useCallback, useEffect } from 'react'\r\nimport {\r\n    Grid,\r\n    FormControl,\r\n    NativeSelect,\r\n    InputBase,\r\n    InputLabel,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { TextField } from 'final-form-material-ui';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER, UPDATE_USER_BY_ID} from './GraphQL/Mutation'\r\nimport { GET_USERS } from './GraphQL/Querie'\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n    root: {\r\n        'label + &': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    input: {\r\n        borderRadius: 4,\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        width: \"100%\",\r\n        padding: '10px 26px 10px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n        '&:focus': {\r\n            borderRadius: 4,\r\n            borderColor: '#80bdff',\r\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n        },\r\n    },\r\n}))(InputBase);\r\n\r\nconst UserForm = (props) => {\r\n    \r\n    const {mode, defaultdata} = props\r\n    \r\n    let navigate = useNavigate();\r\n    const classes = useStyles();\r\n    const [select, setSelect] = React.useState('')\r\n   \r\n    const [addUser] = useMutation(ADD_USER);\r\n    const [updateUser] = useMutation(UPDATE_USER_BY_ID);\r\n    const handleChange = (event) => {\r\n        setSelect(event.target.value);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if(mode === 'update'){\r\n            setSelect(defaultdata.userById.roles)\r\n            console.log(defaultdata.userById)\r\n        }else{\r\n            return null\r\n        }\r\n    }, [])\r\n\r\n    const onSubmitCreate = useCallback(\r\n        async (value) => {\r\n            const variables = {\r\n                record: {\r\n                    username: value.username,\r\n                    email: value.email,\r\n                    firstname: value.firstName,\r\n                    lastname: value.lastName,\r\n                    phone: value.tell,\r\n                    roles: select,\r\n                    address: value.address,\r\n                    password: value.password,\r\n                    isStaff: true\r\n                }\r\n            }\r\n            try {\r\n                await addUser({ variables, refetchQueries: [{ query: GET_USERS }] })\r\n                setSelect('')\r\n                console.log('create')\r\n                alert('บันทึกข้อมูลสำเร็จ')\r\n                navigate(`/app/admin/`)\r\n            } catch (err) {\r\n                console.log(err)\r\n                alert('เกิดข้อผิดพลาด')\r\n            }\r\n        },\r\n        [addUser, select]\r\n    )\r\n    const onSubmitUpdate = useCallback(\r\n        async (value) => {\r\n            const variables = {\r\n                id: defaultdata.userById._id,\r\n                record: {\r\n                    username: value.username,\r\n                    email: value.email,\r\n                    firstname: value.firstName,\r\n                    lastname: value.lastName,\r\n                    phone: value.tell,\r\n                    roles: select,\r\n                    address: value.address,\r\n                    password: value.password,\r\n                    isStaff: true\r\n                }\r\n            }\r\n            try {\r\n                await updateUser({ variables, refetchQueries: [{ query: GET_USERS }] })\r\n                setSelect('')\r\n                alert('บันทึกข้อมูลสำเร็จ')\r\n                navigate(`/app/admin/`)\r\n            } catch (err) {\r\n                console.log(err)\r\n                alert('เกิดข้อผิดพลาด' + select)\r\n            }\r\n        },\r\n        [updateUser, select]\r\n    )\r\n    const onSubmit = mode === 'update' ? onSubmitUpdate : onSubmitCreate\r\n    return (\r\n        <React.Fragment>\r\n            <Form\r\n                onSubmit={onSubmit}\r\n                render={({ handleSubmit, submitting, submitError }) => {\r\n                    return (\r\n                        <form className={classes.root} noValidate autoComplete=\"true\" onSubmit={handleSubmit}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        fullWidth\r\n                                        required\r\n                                        name=\"username\"\r\n                                        component={TextField}\r\n                                        type=\"text\"\r\n                                        label=\"ยูซเซอร์เนม\"\r\n                                        variant=\"outlined\"\r\n                                        initialValue={defaultdata.userById.username}\r\n                                        style={{ width: '100%' }}\r\n                                    />\r\n                                ): (\r\n                                    <Field\r\n                                        fullWidth\r\n                                        required\r\n                                        name=\"username\"\r\n                                        component={TextField}\r\n                                        type=\"text\"\r\n                                        label=\"ยูซเซอร์เนม\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                   null\r\n                                ):(\r\n                                    <Field\r\n                                        name=\"password\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        type=\"password\"\r\n                                        component={TextField}\r\n                                        label=\"รหัส\"\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === \"update\" ? (\r\n                                     <Field\r\n                                        fullWidth\r\n                                        required\r\n                                        name=\"firstName\"\r\n                                        component={TextField}\r\n                                        type=\"text\"\r\n                                        label=\"ชื่อ\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        initialValue={defaultdata.userById.firstname}\r\n                                     />\r\n                                ):(\r\n                                    <Field\r\n                                        fullWidth\r\n                                        required\r\n                                        name=\"firstName\"\r\n                                        component={TextField}\r\n                                        type=\"text\"\r\n                                        label=\"ชื่อ\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === \"update\" ? (\r\n                                    <Field\r\n                                        name=\"lastName\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        component={TextField}\r\n                                        label=\"นามสกุล\"\r\n                                        initialValue={defaultdata.userById.lastname}\r\n                                    />\r\n                                ):(\r\n                                    <Field\r\n                                        name=\"lastName\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        component={TextField}\r\n                                        label=\"นามสกุล\"\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"เบอร์โทร\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"tell\"\r\n                                        component={TextField}\r\n                                        initialValue={defaultdata.userById.phone}\r\n                                    />\r\n                                ):(\r\n                                    <Field\r\n                                        label=\"เบอร์โทร\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"tell\"\r\n                                        component={TextField}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                     <Field\r\n                                        label=\"อีเมล\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"email\"\r\n                                        component={TextField}\r\n                                        initialValue={defaultdata.userById.email}\r\n                                     />\r\n                                ):(\r\n                                    <Field\r\n                                        label=\"อีเมล\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"email\"\r\n                                        component={TextField}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"ที่อยู่\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"address\"\r\n                                        component={TextField}\r\n                                        multiline\r\n                                        rows={4}\r\n                                        initialValue={defaultdata.userById.address}\r\n                                     />\r\n                                ):(\r\n                                    <Field\r\n                                        label=\"ที่อยู่\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"address\"\r\n                                        component={TextField}\r\n                                        multiline\r\n                                        rows={4}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12} >\r\n                                {mode === 'update' ? (\r\n                                    <FormControl style={{ width: \"100%\" }}>\r\n                                        <InputLabel id=\"demo-mutiple-name-label\">หน้าที่</InputLabel>\r\n                                        <NativeSelect\r\n                                            id=\"demo-customized-select-native\"\r\n                                            input={<BootstrapInput />}\r\n                                            value={select}\r\n                                            onChange={handleChange}\r\n                                            required={true}\r\n                                        >\r\n                                             <option aria-label=\"None\" value=\" \" />\r\n                                            <option value={'DOCTOR'}>หมอ</option>\r\n                                            <option value={'NURSE'}>พยาบาล</option>\r\n                                            <option value={'STAFF'}>เจ้าหน้าที่</option>\r\n                                        </NativeSelect>\r\n                                    </FormControl>\r\n                                ):(\r\n                                    <FormControl style={{ width: \"100%\" }}>\r\n                                        <InputLabel id=\"demo-mutiple-name-label\">หน้าที่</InputLabel>\r\n                                        <NativeSelect\r\n                                            id=\"demo-customized-select-native\"\r\n                                            input={<BootstrapInput />}\r\n                                            value={select}\r\n                                            onChange={handleChange}\r\n                                            required={true}\r\n                                        >\r\n                                             <option aria-label=\"None\" value=\" \" />\r\n                                            <option value={'DOCTOR'}>หมอ</option>\r\n                                            <option value={'NURSE'}>พยาบาล</option>\r\n                                            <option value={'STAFF'}>เจ้าหน้าที่</option>\r\n                                        </NativeSelect>\r\n                                    </FormControl>\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12} style={{ marginTop: 16, textAlign: 'center', width: '100%' }}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    disabled={submitting}\r\n                                >\r\n                                    บันทึกข้อมูล\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                    )\r\n                }}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default UserForm\r\n\r\n","D:\\CTHS_TOEI\\src\\pages\\Admins\\GraphQL\\Mutation.js",[],"D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\graphql\\Mutation.js",[],"D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\graphql\\Queries.js",[],"D:\\CTHS_TOEI\\src\\pages\\Dianosis\\Dianosis.js",["317","318","319"],"D:\\CTHS_TOEI\\src\\pages\\Dianosis\\GraphQL\\Querie.js",[],"D:\\CTHS_TOEI\\src\\pages\\Medicine\\Prescription\\GraphQL\\Querie.js",[],{"ruleId":"320","replacedBy":"321"},{"ruleId":"322","replacedBy":"323"},{"ruleId":"324","severity":1,"message":"325","line":48,"column":11,"nodeType":"326","endLine":48,"endColumn":74},{"ruleId":"327","severity":1,"message":"328","line":1,"column":16,"nodeType":"329","messageId":"330","endLine":1,"endColumn":25},{"ruleId":"327","severity":1,"message":"331","line":1,"column":27,"nodeType":"329","messageId":"330","endLine":1,"endColumn":35},{"ruleId":"327","severity":1,"message":"332","line":3,"column":33,"nodeType":"329","messageId":"330","endLine":3,"endColumn":39},{"ruleId":"327","severity":1,"message":"333","line":4,"column":8,"nodeType":"329","messageId":"330","endLine":4,"endColumn":15},{"ruleId":"327","severity":1,"message":"334","line":5,"column":10,"nodeType":"329","messageId":"330","endLine":5,"endColumn":14},{"ruleId":"327","severity":1,"message":"335","line":10,"column":10,"nodeType":"329","messageId":"330","endLine":10,"endColumn":22},{"ruleId":"327","severity":1,"message":"336","line":6,"column":22,"nodeType":"329","messageId":"330","endLine":6,"endColumn":32},{"ruleId":"327","severity":1,"message":"336","line":6,"column":22,"nodeType":"329","messageId":"330","endLine":6,"endColumn":32},{"ruleId":"327","severity":1,"message":"337","line":8,"column":20,"nodeType":"329","messageId":"330","endLine":8,"endColumn":25},{"ruleId":"324","severity":1,"message":"325","line":70,"column":13,"nodeType":"326","endLine":70,"endColumn":76},{"ruleId":"327","severity":1,"message":"338","line":21,"column":8,"nodeType":"329","messageId":"330","endLine":21,"endColumn":15},{"ruleId":"327","severity":1,"message":"339","line":69,"column":7,"nodeType":"329","messageId":"330","endLine":69,"endColumn":11},{"ruleId":"327","severity":1,"message":"332","line":3,"column":33,"nodeType":"329","messageId":"330","endLine":3,"endColumn":39},{"ruleId":"327","severity":1,"message":"334","line":4,"column":10,"nodeType":"329","messageId":"330","endLine":4,"endColumn":14},{"ruleId":"327","severity":1,"message":"340","line":69,"column":7,"nodeType":"329","messageId":"330","endLine":69,"endColumn":15},{"ruleId":"327","severity":1,"message":"331","line":1,"column":41,"nodeType":"329","messageId":"330","endLine":1,"endColumn":49},{"ruleId":"327","severity":1,"message":"341","line":4,"column":5,"nodeType":"329","messageId":"330","endLine":4,"endColumn":15},{"ruleId":"327","severity":1,"message":"342","line":6,"column":5,"nodeType":"329","messageId":"330","endLine":6,"endColumn":15},{"ruleId":"327","severity":1,"message":"343","line":7,"column":5,"nodeType":"329","messageId":"330","endLine":7,"endColumn":21},{"ruleId":"327","severity":1,"message":"344","line":9,"column":5,"nodeType":"329","messageId":"330","endLine":9,"endColumn":14},{"ruleId":"327","severity":1,"message":"345","line":18,"column":21,"nodeType":"329","messageId":"330","endLine":18,"endColumn":26},{"ruleId":"327","severity":1,"message":"346","line":18,"column":28,"nodeType":"329","messageId":"330","endLine":18,"endColumn":34},{"ruleId":"347","severity":1,"message":"348","line":107,"column":8,"nodeType":"349","endLine":107,"endColumn":10,"suggestions":"350"},{"ruleId":"347","severity":1,"message":"351","line":111,"column":8,"nodeType":"349","endLine":111,"endColumn":10,"suggestions":"352"},{"ruleId":"347","severity":1,"message":"353","line":142,"column":9,"nodeType":"349","endLine":142,"endColumn":29,"suggestions":"354"},{"ruleId":"347","severity":1,"message":"355","line":175,"column":9,"nodeType":"349","endLine":175,"endColumn":60,"suggestions":"356"},{"ruleId":"327","severity":1,"message":"357","line":2,"column":47,"nodeType":"329","messageId":"330","endLine":2,"endColumn":57},{"ruleId":"327","severity":1,"message":"345","line":13,"column":31,"nodeType":"329","messageId":"330","endLine":13,"endColumn":36},{"ruleId":"327","severity":1,"message":"346","line":13,"column":38,"nodeType":"329","messageId":"330","endLine":13,"endColumn":44},{"ruleId":"327","severity":1,"message":"358","line":34,"column":10,"nodeType":"329","messageId":"330","endLine":34,"endColumn":29},{"ruleId":"327","severity":1,"message":"359","line":35,"column":10,"nodeType":"329","messageId":"330","endLine":35,"endColumn":21},{"ruleId":"327","severity":1,"message":"360","line":44,"column":8,"nodeType":"329","messageId":"330","endLine":44,"endColumn":14},{"ruleId":"347","severity":1,"message":"361","line":141,"column":6,"nodeType":"349","endLine":141,"endColumn":8,"suggestions":"362"},{"ruleId":"347","severity":1,"message":"363","line":522,"column":5,"nodeType":"349","endLine":534,"endColumn":6,"suggestions":"364"},{"ruleId":"347","severity":1,"message":"365","line":862,"column":5,"nodeType":"349","endLine":874,"endColumn":6,"suggestions":"366"},{"ruleId":"327","severity":1,"message":"331","line":1,"column":28,"nodeType":"329","messageId":"330","endLine":1,"endColumn":36},{"ruleId":"347","severity":1,"message":"367","line":72,"column":5,"nodeType":"349","endLine":72,"endColumn":24,"suggestions":"368"},{"ruleId":"327","severity":1,"message":"343","line":2,"column":16,"nodeType":"329","messageId":"330","endLine":2,"endColumn":32},{"ruleId":"327","severity":1,"message":"332","line":2,"column":34,"nodeType":"329","messageId":"330","endLine":2,"endColumn":40},{"ruleId":"327","severity":1,"message":"369","line":3,"column":10,"nodeType":"329","messageId":"330","endLine":3,"endColumn":14},{"ruleId":"327","severity":1,"message":"370","line":4,"column":21,"nodeType":"329","messageId":"330","endLine":4,"endColumn":29},{"ruleId":"327","severity":1,"message":"345","line":4,"column":31,"nodeType":"329","messageId":"330","endLine":4,"endColumn":36},{"ruleId":"327","severity":1,"message":"346","line":4,"column":38,"nodeType":"329","messageId":"330","endLine":4,"endColumn":44},{"ruleId":"327","severity":1,"message":"332","line":2,"column":34,"nodeType":"329","messageId":"330","endLine":2,"endColumn":40},{"ruleId":"327","severity":1,"message":"369","line":3,"column":10,"nodeType":"329","messageId":"330","endLine":3,"endColumn":14},{"ruleId":"327","severity":1,"message":"345","line":4,"column":31,"nodeType":"329","messageId":"330","endLine":4,"endColumn":36},{"ruleId":"327","severity":1,"message":"346","line":4,"column":38,"nodeType":"329","messageId":"330","endLine":4,"endColumn":44},{"ruleId":"327","severity":1,"message":"332","line":2,"column":34,"nodeType":"329","messageId":"330","endLine":2,"endColumn":40},{"ruleId":"327","severity":1,"message":"369","line":3,"column":10,"nodeType":"329","messageId":"330","endLine":3,"endColumn":14},{"ruleId":"327","severity":1,"message":"345","line":4,"column":31,"nodeType":"329","messageId":"330","endLine":4,"endColumn":36},{"ruleId":"327","severity":1,"message":"346","line":4,"column":38,"nodeType":"329","messageId":"330","endLine":4,"endColumn":44},{"ruleId":"327","severity":1,"message":"332","line":5,"column":3,"nodeType":"329","messageId":"330","endLine":5,"endColumn":9},{"ruleId":"327","severity":1,"message":"369","line":11,"column":10,"nodeType":"329","messageId":"330","endLine":11,"endColumn":14},{"ruleId":"327","severity":1,"message":"345","line":12,"column":31,"nodeType":"329","messageId":"330","endLine":12,"endColumn":36},{"ruleId":"327","severity":1,"message":"346","line":12,"column":38,"nodeType":"329","messageId":"330","endLine":12,"endColumn":44},{"ruleId":"327","severity":1,"message":"371","line":13,"column":10,"nodeType":"329","messageId":"330","endLine":13,"endColumn":20},{"ruleId":"327","severity":1,"message":"332","line":2,"column":34,"nodeType":"329","messageId":"330","endLine":2,"endColumn":40},{"ruleId":"327","severity":1,"message":"369","line":3,"column":10,"nodeType":"329","messageId":"330","endLine":3,"endColumn":14},{"ruleId":"327","severity":1,"message":"345","line":4,"column":31,"nodeType":"329","messageId":"330","endLine":4,"endColumn":36},{"ruleId":"327","severity":1,"message":"346","line":4,"column":38,"nodeType":"329","messageId":"330","endLine":4,"endColumn":44},{"ruleId":"327","severity":1,"message":"332","line":2,"column":34,"nodeType":"329","messageId":"330","endLine":2,"endColumn":40},{"ruleId":"327","severity":1,"message":"369","line":3,"column":10,"nodeType":"329","messageId":"330","endLine":3,"endColumn":14},{"ruleId":"327","severity":1,"message":"345","line":4,"column":31,"nodeType":"329","messageId":"330","endLine":4,"endColumn":36},{"ruleId":"327","severity":1,"message":"346","line":4,"column":38,"nodeType":"329","messageId":"330","endLine":4,"endColumn":44},{"ruleId":"327","severity":1,"message":"332","line":2,"column":34,"nodeType":"329","messageId":"330","endLine":2,"endColumn":40},{"ruleId":"327","severity":1,"message":"369","line":3,"column":10,"nodeType":"329","messageId":"330","endLine":3,"endColumn":14},{"ruleId":"327","severity":1,"message":"345","line":4,"column":31,"nodeType":"329","messageId":"330","endLine":4,"endColumn":36},{"ruleId":"327","severity":1,"message":"346","line":4,"column":38,"nodeType":"329","messageId":"330","endLine":4,"endColumn":44},{"ruleId":"327","severity":1,"message":"343","line":2,"column":16,"nodeType":"329","messageId":"330","endLine":2,"endColumn":32},{"ruleId":"327","severity":1,"message":"332","line":2,"column":34,"nodeType":"329","messageId":"330","endLine":2,"endColumn":40},{"ruleId":"327","severity":1,"message":"369","line":3,"column":10,"nodeType":"329","messageId":"330","endLine":3,"endColumn":14},{"ruleId":"327","severity":1,"message":"370","line":4,"column":21,"nodeType":"329","messageId":"330","endLine":4,"endColumn":29},{"ruleId":"327","severity":1,"message":"345","line":4,"column":31,"nodeType":"329","messageId":"330","endLine":4,"endColumn":36},{"ruleId":"327","severity":1,"message":"346","line":4,"column":38,"nodeType":"329","messageId":"330","endLine":4,"endColumn":44},{"ruleId":"372","severity":1,"message":"373","line":17,"column":1,"nodeType":"374","endLine":36,"endColumn":3},{"ruleId":"327","severity":1,"message":"341","line":4,"column":2,"nodeType":"329","messageId":"330","endLine":4,"endColumn":12},{"ruleId":"327","severity":1,"message":"375","line":5,"column":2,"nodeType":"329","messageId":"330","endLine":5,"endColumn":10},{"ruleId":"327","severity":1,"message":"342","line":6,"column":2,"nodeType":"329","messageId":"330","endLine":6,"endColumn":12},{"ruleId":"327","severity":1,"message":"343","line":7,"column":2,"nodeType":"329","messageId":"330","endLine":7,"endColumn":18},{"ruleId":"327","severity":1,"message":"344","line":9,"column":2,"nodeType":"329","messageId":"330","endLine":9,"endColumn":11},{"ruleId":"327","severity":1,"message":"376","line":11,"column":2,"nodeType":"329","messageId":"330","endLine":11,"endColumn":6},{"ruleId":"327","severity":1,"message":"345","line":18,"column":21,"nodeType":"329","messageId":"330","endLine":18,"endColumn":26},{"ruleId":"327","severity":1,"message":"346","line":18,"column":28,"nodeType":"329","messageId":"330","endLine":18,"endColumn":34},{"ruleId":"347","severity":1,"message":"377","line":106,"column":5,"nodeType":"349","endLine":106,"endColumn":7,"suggestions":"378"},{"ruleId":"347","severity":1,"message":"379","line":148,"column":3,"nodeType":"349","endLine":148,"endColumn":25,"suggestions":"380"},{"ruleId":"347","severity":1,"message":"381","line":173,"column":3,"nodeType":"349","endLine":173,"endColumn":28,"suggestions":"382"},{"ruleId":"347","severity":1,"message":"383","line":83,"column":8,"nodeType":"349","endLine":83,"endColumn":10,"suggestions":"384"},{"ruleId":"347","severity":1,"message":"379","line":111,"column":9,"nodeType":"349","endLine":111,"endColumn":26,"suggestions":"385"},{"ruleId":"347","severity":1,"message":"386","line":139,"column":9,"nodeType":"349","endLine":139,"endColumn":29,"suggestions":"387"},{"ruleId":"327","severity":1,"message":"332","line":3,"column":33,"nodeType":"329","messageId":"330","endLine":3,"endColumn":39},{"ruleId":"327","severity":1,"message":"334","line":4,"column":10,"nodeType":"329","messageId":"330","endLine":4,"endColumn":14},{"ruleId":"327","severity":1,"message":"340","line":69,"column":9,"nodeType":"329","messageId":"330","endLine":69,"endColumn":17},"no-native-reassign",["388"],"no-negated-in-lhs",["389"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Button' is defined but never used.","'AddIcon' is defined but never used.","'Link' is defined but never used.","'isObjectType' is defined but never used.","'withStyles' is defined but never used.","'Query' is defined but never used.","'classes' is assigned a value but never used.","'rows' is assigned a value but never used.","'navigate' is assigned a value but never used.","'Typography' is defined but never used.","'RadioGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'FormLabel' is defined but never used.","'Radio' is defined but never used.","'Select' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'defaultdata.patientById.bloodType', 'defaultdata.patientById.nationality', 'defaultdata.patientById.race', 'defaultdata.patientById.status', and 'mode'. Either include them or remove the dependency array.","ArrayExpression",["390"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["391"],"React Hook useCallback has missing dependencies: 'navigate', 'selectNationality', 'selectRace', and 'status'. Either include them or remove the dependency array.",["392"],"React Hook useCallback has missing dependencies: 'defaultdata.patientById._id', 'navigate', 'status', and 'updatePatient'. Either include them or remove the dependency array.",["393"],"'IconButton' is defined but never used.","'GET_TREATMENT_BY_ID' is defined but never used.","'GET_PATIENT' is defined but never used.","'moment' is defined but never used.","React Hook useEffect has missing dependencies: 'defaultdata.treatmentById.__typename', 'defaultdata.treatmentById.lesion', 'defaultdata.treatmentById.status', and 'mode'. Either include them or remove the dependency array.",["394"],"React Hook useCallback has missing dependencies: 'id' and 'navigate'. Either include them or remove the dependency array.",["395"],"React Hook useCallback has missing dependencies: 'defaultdata.treatmentById._id', 'defaultdata.treatmentById.patientId', 'navigate', 'updateAccidentForm', 'updateConAccidentForm', 'updateDiarrheaForm', 'updateEyesForm', 'updateFeverForm', 'updateGeneralForm', 'updatePainForm', and 'updateSkinForm'. Either include them or remove the dependency array.",["396"],"React Hook useEffect has missing dependencies: 'onMobileClose' and 'openMobile'. Either include them or remove the dependency array. If 'onMobileClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["397"],"'Form' is defined but never used.","'Checkbox' is defined but never used.","'makeStyles' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'MenuItem' is defined but never used.","'Chip' is defined but never used.","React Hook useEffect has missing dependencies: 'defaultdata.medicineById' and 'mode'. Either include them or remove the dependency array.",["398"],"React Hook useCallback has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["399"],"React Hook useCallback has missing dependencies: 'defaultdata.medicineById._id' and 'navigate'. Either include them or remove the dependency array.",["400"],"React Hook useEffect has missing dependencies: 'defaultdata.userById' and 'mode'. Either include them or remove the dependency array.",["401"],["402"],"React Hook useCallback has missing dependencies: 'defaultdata.userById._id' and 'navigate'. Either include them or remove the dependency array.",["403"],"no-global-assign","no-unsafe-negation",{"desc":"404","fix":"405"},{"desc":"406","fix":"407"},{"desc":"408","fix":"409"},{"desc":"410","fix":"411"},{"desc":"412","fix":"413"},{"desc":"414","fix":"415"},{"desc":"416","fix":"417"},{"desc":"418","fix":"419"},{"desc":"420","fix":"421"},{"desc":"422","fix":"423"},{"desc":"424","fix":"425"},{"desc":"426","fix":"427"},{"desc":"428","fix":"429"},{"desc":"430","fix":"431"},"Update the dependencies array to be: [defaultdata.patientById.bloodType, defaultdata.patientById.nationality, defaultdata.patientById.race, defaultdata.patientById.status, mode]",{"range":"432","text":"433"},"Update the dependencies array to be: [data]",{"range":"434","text":"435"},"Update the dependencies array to be: [addPatient, navigate, select, selectNationality, selectRace, status]",{"range":"436","text":"437"},"Update the dependencies array to be: [defaultdata.patientById._id, navigate, select, selectNationality, selectRace, status, updatePatient]",{"range":"438","text":"439"},"Update the dependencies array to be: [defaultdata.treatmentById.__typename, defaultdata.treatmentById.lesion, defaultdata.treatmentById.status, mode]",{"range":"440","text":"441"},"Update the dependencies array to be: [form, id, status, addGeneralForm, navigate, addSkinForm, addAccidentForm, conAccident, addConAccidentForm, addEyesForm, addFeverForm, addDiarrheaForm, addPainForm]",{"range":"442","text":"443"},"Update the dependencies array to be: [form, defaultdata.treatmentById._id, defaultdata.treatmentById.patientId, status, updateGeneralForm, navigate, updateSkinForm, updateAccidentForm, conAccident, updateConAccidentForm, updateEyesForm, updateFeverForm, updateDiarrheaForm, updatePainForm]",{"range":"444","text":"445"},"Update the dependencies array to be: [location.pathname, onMobileClose, openMobile]",{"range":"446","text":"447"},"Update the dependencies array to be: [defaultdata.medicineById, mode]",{"range":"448","text":"449"},"Update the dependencies array to be: [addMedicine, metType, navigate]",{"range":"450","text":"451"},"Update the dependencies array to be: [defaultdata.medicineById._id, metType, updateMedicine, navigate]",{"range":"452","text":"453"},"Update the dependencies array to be: [defaultdata.userById, mode]",{"range":"454","text":"455"},"Update the dependencies array to be: [addUser, navigate, select]",{"range":"456","text":"457"},"Update the dependencies array to be: [defaultdata.userById._id, select, updateUser, navigate]",{"range":"458","text":"459"},[3236,3238],"[defaultdata.patientById.bloodType, defaultdata.patientById.nationality, defaultdata.patientById.race, defaultdata.patientById.status, mode]",[3354,3356],"[data]",[4530,4550],"[addPatient, navigate, select, selectNationality, selectRace, status]",[5788,5839],"[defaultdata.patientById._id, navigate, select, selectNationality, selectRace, status, updatePatient]",[4292,4294],"[defaultdata.treatmentById.__typename, defaultdata.treatmentById.lesion, defaultdata.treatmentById.status, mode]",[18513,18748],"[form, id, status, addGeneralForm, navigate, addSkinForm, addAccidentForm, conAccident, addConAccidentForm, addEyesForm, addFeverForm, addDiarrheaForm, addPainForm]",[31727,31962],"[form, defaultdata.treatmentById._id, defaultdata.treatmentById.patientId, status, updateGeneralForm, navigate, updateSkinForm, updateAccidentForm, conAccident, updateConAccidentForm, updateEyesForm, updateFeverForm, updateDiarrheaForm, updatePainForm]",[1832,1851],"[location.pathname, onMobileClose, openMobile]",[2497,2499],"[defaultdata.medicineById, mode]",[3402,3424],"[addMedicine, metType, navigate]",[4022,4047],"[defaultdata.medicineById._id, metType, updateMedicine, navigate]",[2345,2347],"[defaultdata.userById, mode]",[3302,3319],"[addUser, navigate, select]",[4298,4318],"[defaultdata.userById._id, select, updateUser, navigate]"]