[{"B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\index.js":"1","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\App.js":"2","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\reportWebVitals.js":"3","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\routes.js":"4","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Treatment.js":"5","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Diagnosis.js":"6","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Medicine.js":"7","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Report.js":"8","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Patients\\Detail.js":"9","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Login.js":"10","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Register.js":"11","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Admins\\User.js":"12","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Patients\\Patients.js":"13","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Admins\\Creat.js":"14","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Patients\\Create.js":"15","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Homepage.js":"16","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Admins\\Detail.js":"17","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\components\\Navbar\\Main\\index.js":"18","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\components\\Navbar\\index.js":"19","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Patients\\Patients-form.js":"20","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\components\\Navbar\\Topbar.js":"21","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Admins\\User-form.js":"22","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Admins\\GraphQL\\Querie.js":"23","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\components\\Navbar\\Sidebar.js":"24","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Admins\\GraphQL\\Mutation.js":"25"},{"size":771,"mtime":1616923556586,"results":"26","hashOfConfig":"27"},{"size":342,"mtime":1616925627092,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1615819086000,"results":"29","hashOfConfig":"27"},{"size":1765,"mtime":1617107688893,"results":"30","hashOfConfig":"27"},{"size":627,"mtime":1617120676509,"results":"31","hashOfConfig":"27"},{"size":627,"mtime":1617120644869,"results":"32","hashOfConfig":"27"},{"size":624,"mtime":1617120654453,"results":"33","hashOfConfig":"27"},{"size":618,"mtime":1617120663680,"results":"34","hashOfConfig":"27"},{"size":1655,"mtime":1616923556972,"results":"35","hashOfConfig":"27"},{"size":4205,"mtime":1616947726218,"results":"36","hashOfConfig":"27"},{"size":4115,"mtime":1616947797428,"results":"37","hashOfConfig":"27"},{"size":3405,"mtime":1616923556743,"results":"38","hashOfConfig":"27"},{"size":3580,"mtime":1617118642573,"results":"39","hashOfConfig":"27"},{"size":1859,"mtime":1616923556587,"results":"40","hashOfConfig":"27"},{"size":1888,"mtime":1616923556971,"results":"41","hashOfConfig":"27"},{"size":673,"mtime":1617190525509,"results":"42","hashOfConfig":"27"},{"size":2045,"mtime":1617107688776,"results":"43","hashOfConfig":"27"},{"size":1077,"mtime":1617114996946,"results":"44","hashOfConfig":"27"},{"size":1371,"mtime":1617116670390,"results":"45","hashOfConfig":"27"},{"size":19719,"mtime":1616923557622,"results":"46","hashOfConfig":"27"},{"size":1756,"mtime":1617118456234,"results":"47","hashOfConfig":"27"},{"size":16911,"mtime":1617107688853,"results":"48","hashOfConfig":"27"},{"size":455,"mtime":1617107688851,"results":"49","hashOfConfig":"27"},{"size":7858,"mtime":1617192533103,"results":"50","hashOfConfig":"27"},{"size":311,"mtime":1616923556599,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1r73zrm",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\index.js",[],["107","108"],"B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\App.js",[],"B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\reportWebVitals.js",[],"B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\routes.js",[],"B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Treatment.js",[],"B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Diagnosis.js",[],"B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Medicine.js",[],"B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Report.js",[],"B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Patients\\Detail.js",[],"B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Login.js",["109"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Logouser from \"../img/user.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(https://i.imgur.com/u9flexs.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"#5780f7\",\r\n    color: \"white\",\r\n    padding: 8\r\n  },\r\n  logo: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function SignInSide() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <fullWidthClassName />\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={6} className={classes.image} />\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        sm={8}\r\n        md={6}\r\n        component={Paper}\r\n        square\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <div className={classes.paper}>\r\n          <div className={classes.logo}>\r\n            <img src={Logouser} style={{ width: \"80%\", height: \"auto\" }} />\r\n          </div>\r\n          <Typography component=\"h1\" variant=\"h5\" style={{margin: 30}}>\r\n            Clinic Treatment History System\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"filled\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              // style={{ boxShadow: \"5px 10px #777\" }}\r\n            />\r\n            <TextField\r\n              variant=\"filled\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              className={classes.submit}\r\n            >\r\n              <Typography component=\"subtitle1\" variant=\"subtitle1\">\r\n                Login\r\n              </Typography>\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <FormControlLabel\r\n                  control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                  label=\"Remember me\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"/register\" variant=\"body2\">\r\n                  <Typography\r\n                    component=\"subtitle1\"\r\n                    variant=\"subtitle1\"\r\n                    style={{ marginRight: 10 }}\r\n                  >\r\n                    Don't Have an Account?\r\n                  </Typography>\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  <Typography component=\"subtitle1\" variant=\"subtitle1\">\r\n                    Forgot Password?\r\n                  </Typography>\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Register.js",["110"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Logouser from \"../img/user.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(10),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"#ecb79c\",\r\n    color: \"white\",\r\n  },\r\n  logo: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function Register() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <div className={classes.logo}>\r\n          <img src={Logouser} style={{ width: \"80%\", height: \"auto\" }} />\r\n        </div>\r\n        <Typography component=\"h1\" variant=\"h5\" style={{ margin: 30 }}>\r\n          Register\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n                name=\"confirm password\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            <Typography component=\"subtitle1\" variant=\"subtitle1\">\r\n              Register\r\n            </Typography>\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/login\" variant=\"body2\">\r\n                <Typography component=\"subtitle1\" variant=\"subtitle1\">\r\n                  Already have an account? Sign in\r\n                </Typography>\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Admins\\User.js",[],"B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Patients\\Patients.js",[],"B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Admins\\Creat.js",[],"B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Patients\\Create.js",[],"B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Homepage.js",[],"B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Admins\\Detail.js",[],"B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\components\\Navbar\\Main\\index.js",[],"B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\components\\Navbar\\index.js",[],"B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Patients\\Patients-form.js",[],"B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\components\\Navbar\\Topbar.js",["111"],"import React from \"react\";\nimport {\n  AppBar,\n  Hidden,\n  Toolbar,\n  makeStyles,\n  IconButton,\n  Box,\n  Typography,\n} from \"@material-ui/core\";\nimport Icon from \"../../img/logo.png\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\n// icon\nimport { IconContext } from \"react-icons\";\nimport { GiHamburgerMenu } from \"react-icons/gi\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    backgroundColor: \"#FFF\",\n    padding: 10,\n  },\n}));\n\nconst Layout = (className, onMobileNavOpen, ...rest) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar className={clsx(classes.root, className)} {...rest}>\n      <Toolbar>\n        <Link to=\"/app/homepage\" style={{ textDecoration: \"none\" }}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <img src={Icon} alt=\"icon\" style={{ height: 70, width: 70 }} />\n            <Typography\n              variant=\"h6\"\n              style={{\n                fontWeight: \"bold\",\n                textTransform: \"uppercase\",\n                color: \"#000\",\n                marginLeft: 15,\n              }}\n            >\n              Clinic Treatment History\n            </Typography>\n          </div>\n        </Link>\n        <Box flexGrow={1} />\n        <Hidden lgUp>\n          <IconContext.Provider\n            value={{ color: \"red\", size: \"30\" }}\n            onClick={onMobileNavOpen}\n          >\n            <GiHamburgerMenu />\n          </IconContext.Provider>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nLayout.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func,\n};\n\nexport default Layout;\n","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Admins\\User-form.js",["112","113","114","115","116","117","118"],"import React, { useCallback } from 'react'\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    MenuItem,\r\n    RadioGroup,\r\n    FormControlLabel,\r\n    FormControl,\r\n    FormLabel,\r\n    NativeSelect,\r\n    InputBase,\r\n    InputLabel,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { TextField } from 'final-form-material-ui';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from './GraphQL/Mutation'\r\nimport { GET_USERS } from './GraphQL/Querie'\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n    root: {\r\n        'label + &': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    input: {\r\n        borderRadius: 4,\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        width: \"100%\",\r\n        padding: '10px 26px 10px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        // Use the system font instead of the default Roboto font.\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n        '&:focus': {\r\n            borderRadius: 4,\r\n            borderColor: '#80bdff',\r\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n        },\r\n    },\r\n}))(InputBase);\r\n\r\nconst validate = values => {\r\n    const errors = {}\r\n    if (!values.firstName) {\r\n        errors.firstName = 'Required'\r\n    }\r\n    if (!values.lastName) {\r\n        errors.lastName = 'Required'\r\n    }\r\n    if (!values.email) {\r\n        errors.email = 'Required'\r\n    }\r\n    if (!values.tell) {\r\n        errors.tell = 'Required'\r\n    }\r\n    if (!values.password) {\r\n        errors.password = 'Required'\r\n    }\r\n    if (!values.username) {\r\n        errors.username = 'Required'\r\n    }\r\n    if (!values.address) {\r\n        errors.address = 'Required'\r\n    }\r\n    if (!values.address) {\r\n        errors.address = 'Required'\r\n    }\r\n    return errors\r\n}\r\n\r\nconst UserForm = (props) => {\r\n    const {mode, defaultdata} = props\r\n    let navigate = useNavigate();\r\n    const classes = useStyles();\r\n    const [select, setSelect] = React.useState('')\r\n    const [addUser, { data }] = useMutation(ADD_USER);\r\n    const handleChange = (event) => {\r\n        setSelect(event.target.value);\r\n    };\r\n    const onSubmit = useCallback(\r\n        async (value) => {\r\n            const variables = {\r\n                record: {\r\n                    username: value.username,\r\n                    email: value.email,\r\n                    firstname: value.firstName,\r\n                    lastname: value.lastName,\r\n                    phone: value.tell,\r\n                    roles: select,\r\n                    address: value.address,\r\n                    password: value.password\r\n                }\r\n            }\r\n            try {\r\n                await addUser({ variables, refetchQueries: [{ query: GET_USERS }] })\r\n                setSelect('')\r\n                alert('บันทึกข้อมูลสำเร็จ')\r\n                navigate(`/app/admin/`)\r\n            } catch (err) {\r\n                console.log(err)\r\n                alert('เกิดข้อผิดพลาด')\r\n            }\r\n        },\r\n        [addUser, select]\r\n    )\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Form\r\n                onSubmit={onSubmit}\r\n                validate={validate}\r\n                render={({ handleSubmit, submitting }) => (\r\n                    <form className={classes.root} noValidate autoComplete=\"true\" onSubmit={handleSubmit}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        fullWidth\r\n                                        required\r\n                                        name=\"username\"\r\n                                        component={TextField}\r\n                                        type=\"text\"\r\n                                        label=\"ยูซเซอร์เนม\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        defaultValue={defaultdata.userById.username}\r\n                                    />\r\n                                ): (\r\n                                    <Field\r\n                                        fullWidth\r\n                                        required\r\n                                        name=\"username\"\r\n                                        component={TextField}\r\n                                        type=\"text\"\r\n                                        label=\"ยูซเซอร์เนม\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        name=\"password\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        type=\"password\"\r\n                                        component={TextField}\r\n                                        label=\"รหัส\"\r\n                                        defaultValue={defaultdata.userById.password}\r\n                                    />\r\n                                ):(\r\n                                    <Field\r\n                                        name=\"password\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        type=\"password\"\r\n                                        component={TextField}\r\n                                        label=\"รหัส\"\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === \"update\" ? (\r\n                                     <Field\r\n                                        fullWidth\r\n                                        required\r\n                                        name=\"firstName\"\r\n                                        component={TextField}\r\n                                        type=\"text\"\r\n                                        label=\"ชื่อ\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        defaultValue={defaultdata.userById.firstname}\r\n                                     />\r\n                                ):(\r\n                                    <Field\r\n                                        fullWidth\r\n                                        required\r\n                                        name=\"firstName\"\r\n                                        component={TextField}\r\n                                        type=\"text\"\r\n                                        label=\"ชื่อ\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === \"update\" ? (\r\n                                    <Field\r\n                                        name=\"lastName\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        component={TextField}\r\n                                        label=\"นามสกุล\"\r\n                                        defaultValue={defaultdata.userById.lastname}\r\n                                    />\r\n                                ):(\r\n                                    <Field\r\n                                        name=\"lastName\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        component={TextField}\r\n                                        label=\"นามสกุล\"\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"เบอร์โทร\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"tell\"\r\n                                        component={TextField}\r\n                                        defaultValue={defaultdata.userById.phone}\r\n                                    />\r\n                                ):(\r\n                                    <Field\r\n                                        label=\"เบอร์โทร\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"tell\"\r\n                                        component={TextField}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                     <Field\r\n                                        label=\"อีเมล\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"email\"\r\n                                        component={TextField}\r\n                                        defaultValue={defaultdata.userById.email}\r\n                                     />\r\n                                ):(\r\n                                    <Field\r\n                                        label=\"อีเมล\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"email\"\r\n                                        component={TextField}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"ที่อยู่\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"address\"\r\n                                        component={TextField}\r\n                                        multiline\r\n                                        rows={4}\r\n                                        defaultValue={defaultdata.userById.address}\r\n                                     />\r\n                                ):(\r\n                                    <Field\r\n                                        label=\"ที่อยู่\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"address\"\r\n                                        component={TextField}\r\n                                        multiline\r\n                                        rows={4}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12} >\r\n                                {mode === 'update' ? (\r\n                                    <FormControl style={{ width: \"100%\" }}>\r\n                                        <InputLabel htmlFor=\"demo-customized-select-native\">หน้าที่</InputLabel>\r\n                                        <NativeSelect\r\n                                            id=\"demo-customized-select-native\"\r\n                                            input={<BootstrapInput />}\r\n                                            value={select}\r\n                                            onChange={handleChange}\r\n                                            required={true}\r\n                                        >\r\n                                            <option aria-label=\"None\" value=\"\" />\r\n                                            <option value={'หมอ'}>หมอ</option>\r\n                                            <option value={'พยาบาล'}>พยาบาล</option>\r\n                                            <option value={'เจ้าหน้าที่'}>เจ้าหน้าที่</option>\r\n                                        </NativeSelect>\r\n                                    </FormControl>\r\n                                ):(\r\n                                    <FormControl style={{ width: \"100%\" }}>\r\n                                        <InputLabel htmlFor=\"demo-customized-select-native\">หน้าที่</InputLabel>\r\n                                        <NativeSelect\r\n                                            id=\"demo-customized-select-native\"\r\n                                            input={<BootstrapInput />}\r\n                                            value={select}\r\n                                            onChange={handleChange}\r\n                                            required={true}\r\n                                        >\r\n                                            <option aria-label=\"None\" value=\"\" />\r\n                                            <option value={'หมอ'}>หมอ</option>\r\n                                            <option value={'พยาบาล'}>พยาบาล</option>\r\n                                            <option value={'เจ้าหน้าที่'}>เจ้าหน้าที่</option>\r\n                                        </NativeSelect>\r\n                                    </FormControl>\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12} style={{ marginTop: 16, textAlign: 'center', width: '100%' }}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    disabled={submitting}\r\n                                >\r\n                                    บันทึกข้อมูล\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                )}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default UserForm","B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Admins\\GraphQL\\Querie.js",[],"B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\components\\Navbar\\Sidebar.js",["119","120"],"B:\\Learn\\semester3.2\\Cloud\\CTHS_React-master\\src\\pages\\Admins\\GraphQL\\Mutation.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":70,"column":13,"nodeType":"127","endLine":70,"endColumn":76},{"ruleId":"125","severity":1,"message":"126","line":48,"column":11,"nodeType":"127","endLine":48,"endColumn":74},{"ruleId":"128","severity":1,"message":"129","line":7,"column":3,"nodeType":"130","messageId":"131","endLine":7,"endColumn":13},{"ruleId":"128","severity":1,"message":"132","line":4,"column":5,"nodeType":"130","messageId":"131","endLine":4,"endColumn":15},{"ruleId":"128","severity":1,"message":"133","line":5,"column":5,"nodeType":"130","messageId":"131","endLine":5,"endColumn":13},{"ruleId":"128","severity":1,"message":"134","line":6,"column":5,"nodeType":"130","messageId":"131","endLine":6,"endColumn":15},{"ruleId":"128","severity":1,"message":"135","line":7,"column":5,"nodeType":"130","messageId":"131","endLine":7,"endColumn":21},{"ruleId":"128","severity":1,"message":"136","line":9,"column":5,"nodeType":"130","messageId":"131","endLine":9,"endColumn":14},{"ruleId":"128","severity":1,"message":"137","line":101,"column":23,"nodeType":"130","messageId":"131","endLine":101,"endColumn":27},{"ruleId":"138","severity":1,"message":"139","line":129,"column":9,"nodeType":"140","endLine":129,"endColumn":26,"suggestions":"141"},{"ruleId":"128","severity":1,"message":"142","line":1,"column":28,"nodeType":"130","messageId":"131","endLine":1,"endColumn":36},{"ruleId":"138","severity":1,"message":"143","line":75,"column":5,"nodeType":"140","endLine":75,"endColumn":24,"suggestions":"144"},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'MenuItem' is defined but never used.","'RadioGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'FormLabel' is defined but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["147"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'onMobileClose' and 'openMobile'. Either include them or remove the dependency array. If 'onMobileClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["148"],"no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [addUser, navigate, select]",{"range":"153","text":"154"},"Update the dependencies array to be: [location.pathname, onMobileClose, openMobile]",{"range":"155","text":"156"},[3713,3730],"[addUser, navigate, select]",[1879,1898],"[location.pathname, onMobileClose, openMobile]"]