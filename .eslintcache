[{"D:\\CTHS_TOEI\\src\\index.js":"1","D:\\CTHS_TOEI\\src\\reportWebVitals.js":"2","D:\\CTHS_TOEI\\src\\App.js":"3","D:\\CTHS_TOEI\\src\\routes.js":"4","D:\\CTHS_TOEI\\src\\components\\GlobalStyles.js":"5","D:\\CTHS_TOEI\\src\\pages\\Register.js":"6","D:\\CTHS_TOEI\\src\\pages\\Homepage.js":"7","D:\\CTHS_TOEI\\src\\pages\\Diagnosis.js":"8","D:\\CTHS_TOEI\\src\\pages\\Report.js":"9","D:\\CTHS_TOEI\\src\\pages\\Patients\\Patients.js":"10","D:\\CTHS_TOEI\\src\\pages\\Patients\\Create.js":"11","D:\\CTHS_TOEI\\src\\pages\\Patients\\Detail.js":"12","D:\\CTHS_TOEI\\src\\pages\\Admins\\User.js":"13","D:\\CTHS_TOEI\\src\\pages\\Admins\\Creat.js":"14","D:\\CTHS_TOEI\\src\\pages\\Admins\\Detail.js":"15","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Treatments.js":"16","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Create.js":"17","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Detail.js":"18","D:\\CTHS_TOEI\\src\\pages\\Login.js":"19","D:\\CTHS_TOEI\\src\\components\\Navbar\\Main\\index.js":"20","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Detail.js":"21","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Medicine.js":"22","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Create.js":"23","D:\\CTHS_TOEI\\src\\pages\\Medicine\\Prescription\\Prescription.js":"24","D:\\CTHS_TOEI\\src\\components\\Navbar\\index.js":"25","D:\\CTHS_TOEI\\src\\pages\\Patients\\Patients-form.js":"26","D:\\CTHS_TOEI\\src\\components\\Navbar\\Topbar.js":"27","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Treatment-form.js":"28","D:\\CTHS_TOEI\\src\\pages\\Patients\\GraphQL\\Querie.js":"29","D:\\CTHS_TOEI\\src\\pages\\Treatment\\GraphQL\\Querie.js":"30","D:\\CTHS_TOEI\\src\\components\\Navbar\\Sidebar.js":"31","D:\\CTHS_TOEI\\src\\pages\\Treatment\\PainForm.js":"32","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Diarrhea.js":"33","D:\\CTHS_TOEI\\src\\pages\\Treatment\\FeverForm.js":"34","D:\\CTHS_TOEI\\src\\pages\\Treatment\\ConAccidentForm.js":"35","D:\\CTHS_TOEI\\src\\pages\\Treatment\\EyesForm.js":"36","D:\\CTHS_TOEI\\src\\pages\\Treatment\\SkinForm.js":"37","D:\\CTHS_TOEI\\src\\pages\\Treatment\\AccidentForm.js":"38","D:\\CTHS_TOEI\\src\\pages\\Treatment\\GenaralForm.js":"39","D:\\CTHS_TOEI\\src\\pages\\Treatment\\GraphQL\\Mutation.js":"40","D:\\CTHS_TOEI\\src\\pages\\Patients\\GraphQL\\Mutation.js":"41","D:\\CTHS_TOEI\\src\\MulitiSelect.jsx":"42","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Medicine-form.js":"43","D:\\CTHS_TOEI\\src\\pages\\Admins\\GraphQL\\Querie.js":"44","D:\\CTHS_TOEI\\src\\pages\\Admins\\User-form.js":"45","D:\\CTHS_TOEI\\src\\pages\\Admins\\GraphQL\\Mutation.js":"46","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\graphql\\Mutation.js":"47","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\graphql\\Queries.js":"48"},{"size":771,"mtime":1616856986962,"results":"49","hashOfConfig":"50"},{"size":375,"mtime":1616614429078,"results":"51","hashOfConfig":"50"},{"size":419,"mtime":1617974023536,"results":"52","hashOfConfig":"50"},{"size":2415,"mtime":1617974023581,"results":"53","hashOfConfig":"50"},{"size":819,"mtime":1617974023537,"results":"54","hashOfConfig":"50"},{"size":4115,"mtime":1617091332682,"results":"55","hashOfConfig":"50"},{"size":704,"mtime":1617974023542,"results":"56","hashOfConfig":"50"},{"size":653,"mtime":1617974023541,"results":"57","hashOfConfig":"50"},{"size":644,"mtime":1617974023567,"results":"58","hashOfConfig":"50"},{"size":2924,"mtime":1617974023566,"results":"59","hashOfConfig":"50"},{"size":1890,"mtime":1617974023557,"results":"60","hashOfConfig":"50"},{"size":4992,"mtime":1617974023564,"results":"61","hashOfConfig":"50"},{"size":3367,"mtime":1617974023541,"results":"62","hashOfConfig":"50"},{"size":1861,"mtime":1617974023539,"results":"63","hashOfConfig":"50"},{"size":2103,"mtime":1617974023539,"results":"64","hashOfConfig":"50"},{"size":3739,"mtime":1617974023581,"results":"65","hashOfConfig":"50"},{"size":6799,"mtime":1617974023568,"results":"66","hashOfConfig":"50"},{"size":7204,"mtime":1617974023568,"results":"67","hashOfConfig":"50"},{"size":4205,"mtime":1617091332681,"results":"68","hashOfConfig":"50"},{"size":1031,"mtime":1617974023537,"results":"69","hashOfConfig":"50"},{"size":2313,"mtime":1617974402253,"results":"70","hashOfConfig":"50"},{"size":3396,"mtime":1617974385972,"results":"71","hashOfConfig":"50"},{"size":1857,"mtime":1617974023542,"results":"72","hashOfConfig":"50"},{"size":662,"mtime":1617974023557,"results":"73","hashOfConfig":"50"},{"size":1371,"mtime":1617974023538,"results":"74","hashOfConfig":"50"},{"size":25914,"mtime":1617974274662,"results":"75","hashOfConfig":"50"},{"size":1584,"mtime":1617974023538,"results":"76","hashOfConfig":"50"},{"size":32683,"mtime":1617988700023,"results":"77","hashOfConfig":"50"},{"size":924,"mtime":1617974023565,"results":"78","hashOfConfig":"50"},{"size":897,"mtime":1617974023579,"results":"79","hashOfConfig":"50"},{"size":7827,"mtime":1617974023538,"results":"80","hashOfConfig":"50"},{"size":3730,"mtime":1617988779983,"results":"81","hashOfConfig":"50"},{"size":4079,"mtime":1617988424430,"results":"82","hashOfConfig":"50"},{"size":7414,"mtime":1617974023569,"results":"83","hashOfConfig":"50"},{"size":3103,"mtime":1617984361404,"results":"84","hashOfConfig":"50"},{"size":8171,"mtime":1617974023569,"results":"85","hashOfConfig":"50"},{"size":4524,"mtime":1617979416873,"results":"86","hashOfConfig":"50"},{"size":4664,"mtime":1617974023567,"results":"87","hashOfConfig":"50"},{"size":1380,"mtime":1617974023569,"results":"88","hashOfConfig":"50"},{"size":4787,"mtime":1617988524381,"results":"89","hashOfConfig":"50"},{"size":872,"mtime":1617974023565,"results":"90","hashOfConfig":"50"},{"size":878,"mtime":1617974023537,"results":"91","hashOfConfig":"50"},{"size":8943,"mtime":1617974367844,"results":"92","hashOfConfig":"50"},{"size":458,"mtime":1617974023540,"results":"93","hashOfConfig":"50"},{"size":17017,"mtime":1617974023540,"results":"94","hashOfConfig":"50"},{"size":657,"mtime":1617974023540,"results":"95","hashOfConfig":"50"},{"size":548,"mtime":1617974023556,"results":"96","hashOfConfig":"50"},{"size":379,"mtime":1617974023556,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yh3044",{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"151"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\CTHS_TOEI\\src\\index.js",[],"D:\\CTHS_TOEI\\src\\reportWebVitals.js",[],"D:\\CTHS_TOEI\\src\\App.js",[],"D:\\CTHS_TOEI\\src\\routes.js",[],"D:\\CTHS_TOEI\\src\\components\\GlobalStyles.js",[],"D:\\CTHS_TOEI\\src\\pages\\Register.js",["197"],"D:\\CTHS_TOEI\\src\\pages\\Homepage.js",[],"D:\\CTHS_TOEI\\src\\pages\\Diagnosis.js",[],"D:\\CTHS_TOEI\\src\\pages\\Report.js",[],"D:\\CTHS_TOEI\\src\\pages\\Patients\\Patients.js",[],"D:\\CTHS_TOEI\\src\\pages\\Patients\\Create.js",[],"D:\\CTHS_TOEI\\src\\pages\\Patients\\Detail.js",[],"D:\\CTHS_TOEI\\src\\pages\\Admins\\User.js",[],"D:\\CTHS_TOEI\\src\\pages\\Admins\\Creat.js",[],"D:\\CTHS_TOEI\\src\\pages\\Admins\\Detail.js",[],"D:\\CTHS_TOEI\\src\\pages\\Treatment\\Treatments.js",["198","199","200"],"D:\\CTHS_TOEI\\src\\pages\\Treatment\\Create.js",["201"],"D:\\CTHS_TOEI\\src\\pages\\Treatment\\Detail.js",["202","203"],"D:\\CTHS_TOEI\\src\\pages\\Login.js",["204"],"D:\\CTHS_TOEI\\src\\components\\Navbar\\Main\\index.js",[],"D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Detail.js",["205"],"D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Medicine.js",["206"],"D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Create.js",[],"D:\\CTHS_TOEI\\src\\pages\\Medicine\\Prescription\\Prescription.js",[],"D:\\CTHS_TOEI\\src\\components\\Navbar\\index.js",[],"D:\\CTHS_TOEI\\src\\pages\\Patients\\Patients-form.js",["207","208","209","210","211","212","213","214","215","216","217"],"import React, { useCallback, useEffect, useState } from 'react'\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    MenuItem,\r\n    RadioGroup,\r\n    FormControlLabel,\r\n    FormControl,\r\n    FormLabel,\r\n    Button,\r\n    Chip,\r\n    NativeSelect,\r\n    InputBase,\r\n    InputLabel,\r\n} from '@material-ui/core';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { TextField, Radio, Select } from 'final-form-material-ui';\r\nimport MultiSelect from \"../../MulitiSelect\";\r\nimport \"../../App.css\"\r\nimport { ADD_PATIENT, UPDATE_PATIENT_BY_ID } from './GraphQL/Mutation'\r\nimport { useMutation } from '@apollo/client';\r\nimport { GET_PATIENTS } from './GraphQL/Querie'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport moment from 'moment';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            width: '25ch',\r\n        },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        maxWidth: 300,\r\n    },\r\n    chips: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n        margin: 2,\r\n    },\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n    root: {\r\n        'label + &': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    input: {\r\n        borderRadius: 4,\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        width: \"100%\",\r\n        padding: '10px 26px 10px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n        '&:focus': {\r\n            borderRadius: 4,\r\n            borderColor: '#80bdff',\r\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n        },\r\n    },\r\n}))(InputBase);\r\n\r\nconst PatientsForm = (props) => {\r\n    const { mode, defaultdata } = props\r\n    const classes = useStyles();\r\n    let navigate = useNavigate();\r\n    const test = ['โรคหัวใจ', 'โรคความดัน', 'โรคเบาหวาน', 'โรคสมอง'];\r\n    const [select, setSelect] = React.useState('')\r\n    const [status, setStatus] = React.useState('')\r\n    const [addPatient] = useMutation(ADD_PATIENT);\r\n    const [updatePatient] = useMutation(UPDATE_PATIENT_BY_ID)\r\n    const [nationality, setNationality] = React.useState([])\r\n    const [selectNationality, setSelectNationality] = React.useState('')\r\n    const [selectRace, setSelectRace] = React.useState('')\r\n\r\n    let data = require('npm-nationality-list')\r\n\r\n    useEffect(() => {\r\n        if (mode === 'update') {\r\n            setSelect(defaultdata.patientById.bloodType)\r\n            setStatus(defaultdata.patientById.status)\r\n            setSelectNationality(defaultdata.patientById.nationality)\r\n            setSelectRace(defaultdata.patientById.race)\r\n        } else {\r\n            return null\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        data.getList().map((item) => setNationality((prev) => [...prev, item]))\r\n    }, [])\r\n\r\n    const onSubmitCreate = useCallback(\r\n        async (value) => {\r\n            const variables = {\r\n                record: {\r\n                    firstname: value.firstname,\r\n                    lastname: value.lastname,\r\n                    idcardNumber: value.idcardNumber,\r\n                    birthdate: value.birthdate,\r\n                    nationality: selectNationality,\r\n                    race: selectRace,\r\n                    status: status,\r\n                    bloodType: select,\r\n                    phone: value.phone,\r\n                    address: value.address,\r\n                    hospitalRefer: value.hospitalRefer,\r\n                    congenitalDisease: value.congenitalDisease,\r\n                }\r\n            }\r\n            try {\r\n                await addPatient({ variables, refetchQueries: [{ query: GET_PATIENTS }] })\r\n                alert('บันทึกข้อมูลสำเร็จ')\r\n                setSelectNationality('')\r\n                setSelectRace('')\r\n                navigate(`/app/patients`)\r\n            } catch (err) {\r\n                console.log(err)\r\n                alert('เกิดข้อผิดพลาด' + err.message)\r\n            }\r\n        },\r\n        [addPatient, select]\r\n    )\r\n\r\n    const onSubmitUpdate = useCallback(\r\n        async (value) => {\r\n            const variables = {\r\n                id: defaultdata.patientById._id,\r\n                record: {\r\n                    firstname: value.firstname,\r\n                    lastname: value.lastname,\r\n                    idcardNumber: value.idcardNumber,\r\n                    birthdate: value.birthdate,\r\n                    nationality: selectNationality,\r\n                    race: selectRace,\r\n                    status: status,\r\n                    bloodType: select,\r\n                    phone: value.phone,\r\n                    address: value.address,\r\n                    hospitalRefer: value.hospitalRefer,\r\n                    congenitalDisease: value.congenitalDisease,\r\n                }\r\n            }\r\n            try {\r\n                await updatePatient({ variables, refetchQueries: [{ query: GET_PATIENTS }] })\r\n                alert('บันทึกข้อมูลสำเร็จ')\r\n                setSelectNationality('')\r\n                setSelectRace('')\r\n                navigate(`/app/patients`)\r\n            } catch (err) {\r\n                console.log(err)\r\n                alert('เกิดข้อผิดพลาด     ' + err.message)\r\n            }\r\n        },\r\n        [addPatient, select, selectNationality, selectRace]\r\n    )\r\n\r\n    const onSubmit = mode === 'update' ? onSubmitUpdate : onSubmitCreate\r\n\r\n    const handleChangeblood = (event) => {\r\n        setSelect(event.target.value);\r\n    };\r\n\r\n    const handleChangestatus = (event) => {\r\n        setStatus(event.target.value)\r\n    }\r\n\r\n    const handleSelectNationality = (event) => {\r\n        setSelectNationality(event.target.value)\r\n    }\r\n    const handleSelectRace = (event) => {\r\n        setSelectRace(event.target.value)\r\n    }\r\n\r\n    const normalizeIdcard = value => {\r\n        if (!value) return value;\r\n        const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n        if (onlyNums.length <= 13) return onlyNums;\r\n    }\r\n\r\n    const normalizePhone = value => {\r\n        if (!value) return value;\r\n        const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n        if (onlyNums.length <= 10) return onlyNums;\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Form\r\n                onSubmit={onSubmit}\r\n                render={({ handleSubmit, submitting }) => (\r\n                    <form className={classes.root} noValidate autoComplete=\"true\" onSubmit={handleSubmit}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        fullWidth\r\n                                        required\r\n                                        name=\"firstname\"\r\n                                        component={TextField}\r\n                                        type=\"text\"\r\n                                        label=\"ชื่อ\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        initialValue={defaultdata.patientById.firstname}\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        fullWidth\r\n                                        required\r\n                                        name=\"firstname\"\r\n                                        component={TextField}\r\n                                        type=\"text\"\r\n                                        label=\"ชื่อ\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        name=\"lastname\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        component={TextField}\r\n                                        label=\"นามสกุล\"\r\n                                        initialValue={defaultdata.patientById.lastname}\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        name=\"lastname\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        component={TextField}\r\n                                        label=\"นามสกุล\"\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"รหัสบัตรประชาชน\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"idcardNumber\"\r\n                                        component={TextField}\r\n                                        initialValue={defaultdata.patientById.idcardNumber}\r\n                                        parse={normalizeIdcard}\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        label=\"รหัสบัตรประชาชน\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"idcardNumber\"\r\n                                        component={TextField}\r\n                                        parse={normalizeIdcard}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        id=\"date\"\r\n                                        type=\"date\"\r\n                                        label=\"วัน/เดือน/ปีเกิด\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required={true}\r\n                                        component={TextField}\r\n                                        name='birthdate'\r\n                                        defaultValue={`${moment(defaultdata.patientById.birthdate).format(\"YYYY-MM-DD\")}`}\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        id=\"date\"\r\n                                        type=\"date\"\r\n                                        variant=\"outlined\"\r\n                                        label=\"วัน/เดือน/ปีเกิด\"\r\n                                        style={{ width: '100%' }}\r\n                                        required={true}\r\n                                        component={TextField}\r\n                                        name='birthdate'\r\n                                        defaultValue={`${moment(new Date()).format(\"YYYY-MM-DD\")}`}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl style={{ width: \"100%\" }}>\r\n                                    <InputLabel id=\"demo-mutiple-name-label\">สัญชาติ</InputLabel>\r\n                                    <NativeSelect\r\n                                        id=\"demo-customized-select-native\"\r\n                                        input={<BootstrapInput />}\r\n                                        value={selectNationality}\r\n                                        onChange={handleSelectNationality}\r\n                                        required={true}\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\" \" />\r\n                                        {nationality?.map((data, index) => (\r\n                                            <option value={`${data.nationality}`}>\r\n                                                {data.nationality}\r\n                                            </option>\r\n                                        ))}\r\n                                    </NativeSelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl style={{ width: \"100%\" }}>\r\n                                    <InputLabel id=\"demo-mutiple-name-label\">เชื้อชาติ</InputLabel>\r\n                                    <NativeSelect\r\n                                        id=\"demo-customized-select-native\"\r\n                                        input={<BootstrapInput />}\r\n                                        value={selectRace}\r\n                                        onChange={handleSelectRace}\r\n                                        required={true}\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\" \" />\r\n                                        {nationality?.map((data, index) => (\r\n                                            <option value={`${data.nationality}`}>\r\n                                                {data.nationality}\r\n                                            </option>\r\n                                        ))}\r\n                                    </NativeSelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl style={{ width: \"100%\" }}>\r\n                                    <InputLabel id=\"demo-mutiple-name-label\">สถานะ</InputLabel>\r\n                                    <NativeSelect\r\n                                        id=\"demo-customized-select-native\"\r\n                                        input={<BootstrapInput />}\r\n                                        value={status}\r\n                                        onChange={handleChangestatus}\r\n                                        required={true}\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\"เลือกสถานะ\" />\r\n                                        <option value={'SINGLE'}>โสด</option>\r\n                                        <option value={'MARRIED'}>สมรส</option>\r\n                                        <option value={'OTHER'}>อื่น ๆ</option>\r\n                                    </NativeSelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl style={{ width: \"100%\" }}>\r\n                                    <InputLabel id=\"demo-mutiple-name-label\">กรุ๊ปเลือด</InputLabel>\r\n                                    <NativeSelect\r\n                                        id=\"demo-customized-select-native\"\r\n                                        input={<BootstrapInput />}\r\n                                        value={select}\r\n                                        onChange={handleChangeblood}\r\n                                        required={true}\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\" \" />\r\n                                        <option value={'O'}>O</option>\r\n                                        <option value={'A'}>A</option>\r\n                                        <option value={'B'}>B</option>\r\n                                        <option value={'AB'}>AB</option>\r\n                                    </NativeSelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"เบอร์โทรศัพท์\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"phone\"\r\n                                        component={TextField}\r\n                                        initialValue={defaultdata.patientById.phone}\r\n                                        parse={normalizePhone}\r\n\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        label=\"เบอร์โทรศัพท์\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"phone\"\r\n                                        component={TextField}\r\n                                        parse={normalizePhone}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"โรงพยาบาลที่ส่งต่อ\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"hospitalRefer\"\r\n                                        component={TextField}\r\n                                        initialValue={defaultdata.patientById.hospitalRefer}\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        label=\"โรงพยาบาลที่ส่งต่อ\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"hospitalRefer\"\r\n                                        component={TextField}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        name=\"congenitalDisease\"\r\n                                        styling=\"field\"\r\n                                        labelname=\"โรคประจำตัว\"\r\n                                        component={MultiSelect}\r\n                                        variant=\"outlined\"\r\n                                        initialValue={defaultdata.patientById.congenitalDisease}\r\n                                        renderValue={selected => (\r\n                                            <div className=\"multi-select-chips\">\r\n                                                {selected.map(value => (\r\n                                                    <Chip\r\n                                                        key={value}\r\n                                                        label={value}\r\n                                                        className=\"multi-select-chip\"\r\n                                                    />\r\n                                                ))}\r\n                                            </div>\r\n                                        )}\r\n                                    >\r\n                                        {test.map((data, index) => (\r\n                                            <MenuItem key={index} value={data}>\r\n                                                {data}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Field>\r\n                                ) : (\r\n                                    <Field\r\n                                        name=\"congenitalDisease\"\r\n                                        styling=\"field\"\r\n                                        labelname=\"โรคประจำตัว\"\r\n                                        component={MultiSelect}\r\n                                        variant=\"outlined\"\r\n                                        renderValue={selected => (\r\n                                            <div className=\"multi-select-chips\">\r\n                                                {selected.map(value => (\r\n                                                    <Chip\r\n                                                        key={value}\r\n                                                        label={value}\r\n                                                        className=\"multi-select-chip\"\r\n                                                    />\r\n                                                ))}\r\n                                            </div>\r\n                                        )}\r\n                                    >\r\n                                        {test.map((data, index) => (\r\n                                            <MenuItem key={index} value={data}>\r\n                                                {data}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Field>\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"ที่อยู่\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"address\"\r\n                                        component={TextField}\r\n                                        initialValue={defaultdata.patientById.address}\r\n\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        label=\"ที่อยู่\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"address\"\r\n                                        component={TextField}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12} style={{ marginTop: 16, textAlign: 'center', width: '100%' }}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    disabled={submitting}\r\n                                >\r\n                                    บันทึกข้อมูล\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                )\r\n                }\r\n            />\r\n        </React.Fragment >\r\n    )\r\n}\r\nexport default PatientsForm",["218","219"],"D:\\CTHS_TOEI\\src\\components\\Navbar\\Topbar.js",["220"],"D:\\CTHS_TOEI\\src\\pages\\Treatment\\Treatment-form.js",["221","222","223","224","225","226","227","228","229"],"D:\\CTHS_TOEI\\src\\pages\\Patients\\GraphQL\\Querie.js",[],"D:\\CTHS_TOEI\\src\\pages\\Treatment\\GraphQL\\Querie.js",[],"D:\\CTHS_TOEI\\src\\components\\Navbar\\Sidebar.js",["230","231"],"D:\\CTHS_TOEI\\src\\pages\\Treatment\\PainForm.js",["232","233","234","235","236","237"],"D:\\CTHS_TOEI\\src\\pages\\Treatment\\Diarrhea.js",["238","239","240","241"],"D:\\CTHS_TOEI\\src\\pages\\Treatment\\FeverForm.js",["242","243","244","245"],"D:\\CTHS_TOEI\\src\\pages\\Treatment\\ConAccidentForm.js",["246","247","248","249","250"],"D:\\CTHS_TOEI\\src\\pages\\Treatment\\EyesForm.js",["251","252","253","254"],"D:\\CTHS_TOEI\\src\\pages\\Treatment\\SkinForm.js",["255","256","257","258"],"import React from 'react'\r\nimport {\r\n    Grid,\r\n    FormControlLabel,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { TextField, Checkbox, Radio, Select } from 'final-form-material-ui';\r\n\r\nconst Rashdatenormalization = (value) => {\r\n    if (!value) return value;\r\n    const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n    let number = parseFloat(onlyNums);\r\n    return number;\r\n  };\r\n\r\nconst SkinForm = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Grid item={'true'} xs={6}>\r\n                <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"rashArea\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"บริเวณผื่น\"\r\n                    variant=\"outlined\"\r\n                    style={{ width: '100%' }}\r\n                    multiline\r\n                    rows={2}\r\n                />\r\n            </Grid>\r\n            <Grid item={'true'} xs={6}>\r\n                <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"rashDate\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"เป็นมานาน (วัน)\"\r\n                    variant=\"outlined\"\r\n                    style={{ width: '100%' }}\r\n                    multiline\r\n                    rows={2}\r\n                    parse={Rashdatenormalization}\r\n                />\r\n            </Grid>\r\n            <Grid item={'true'} xs={6}>\r\n                <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"rashDetail\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"สัมผัสโดน\"\r\n                    variant=\"outlined\"\r\n                    style={{ width: '100%' }}\r\n                    multiline\r\n                    rows={2}\r\n                />\r\n            </Grid>\r\n            <Grid item={'true'} xs={6}>\r\n                <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"physicalExamination\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"การตรวจสอบทางกายภาพ\"\r\n                    variant=\"outlined\"\r\n                    style={{ width: '100%' }}\r\n                    multiline\r\n                    rows={2}\r\n                />\r\n            </Grid>\r\n            <Grid item={'true'} xs={12} align='center'>\r\n                <FormControlLabel\r\n                    label=\"มีอาการคัน\"\r\n                    control={\r\n                        <Field\r\n                            name=\"isItching\"\r\n                            component={Checkbox}\r\n                            type=\"checkbox\"\r\n                        />\r\n                    }\r\n                />\r\n                <FormControlLabel\r\n                    label=\"มีอาการปวด\"\r\n                    control={\r\n                        <Field\r\n                            name=\"isPain\"\r\n                            component={Checkbox}\r\n                            type=\"checkbox\"\r\n                        />\r\n                    }\r\n                />\r\n                <FormControlLabel\r\n                    label=\"มีอารการแสบ\"\r\n                    control={\r\n                        <Field\r\n                            name=\"isStinging\"\r\n                            component={Checkbox}\r\n                            type=\"checkbox\"\r\n                        />\r\n                    }\r\n                />\r\n                <FormControlLabel\r\n                    label=\"มีอาการปวด\"\r\n                    control={\r\n                        <Field\r\n                            name=\"isSwelling\"\r\n                            component={Checkbox}\r\n                            type=\"checkbox\"\r\n                        />\r\n                    }\r\n                />\r\n                <FormControlLabel\r\n                    label=\"มีไข้\"\r\n                    control={\r\n                        <Field\r\n                            name=\"isFever\"\r\n                            component={Checkbox}\r\n                            type=\"checkbox\"\r\n                        />\r\n                    }\r\n                />\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default SkinForm","D:\\CTHS_TOEI\\src\\pages\\Treatment\\AccidentForm.js",["259","260","261","262"],"D:\\CTHS_TOEI\\src\\pages\\Treatment\\GenaralForm.js",["263","264","265","266","267","268"],"D:\\CTHS_TOEI\\src\\pages\\Treatment\\GraphQL\\Mutation.js",[],"D:\\CTHS_TOEI\\src\\pages\\Patients\\GraphQL\\Mutation.js",[],"D:\\CTHS_TOEI\\src\\MulitiSelect.jsx",["269"],"D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Medicine-form.js",["270","271","272","273","274","275","276","277","278","279","280"],"D:\\CTHS_TOEI\\src\\pages\\Admins\\GraphQL\\Querie.js",[],"D:\\CTHS_TOEI\\src\\pages\\Admins\\User-form.js",["281","282","283"],"D:\\CTHS_TOEI\\src\\pages\\Admins\\GraphQL\\Mutation.js",[],"D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\graphql\\Mutation.js",[],"D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\graphql\\Queries.js",[],{"ruleId":"284","severity":1,"message":"285","line":48,"column":11,"nodeType":"286","endLine":48,"endColumn":74},{"ruleId":"287","severity":1,"message":"288","line":3,"column":33,"nodeType":"289","messageId":"290","endLine":3,"endColumn":39},{"ruleId":"287","severity":1,"message":"291","line":4,"column":8,"nodeType":"289","messageId":"290","endLine":4,"endColumn":15},{"ruleId":"287","severity":1,"message":"292","line":5,"column":10,"nodeType":"289","messageId":"290","endLine":5,"endColumn":14},{"ruleId":"287","severity":1,"message":"293","line":6,"column":22,"nodeType":"289","messageId":"290","endLine":6,"endColumn":32},{"ruleId":"287","severity":1,"message":"293","line":6,"column":22,"nodeType":"289","messageId":"290","endLine":6,"endColumn":32},{"ruleId":"287","severity":1,"message":"294","line":8,"column":20,"nodeType":"289","messageId":"290","endLine":8,"endColumn":25},{"ruleId":"284","severity":1,"message":"285","line":70,"column":13,"nodeType":"286","endLine":70,"endColumn":76},{"ruleId":"287","severity":1,"message":"295","line":21,"column":8,"nodeType":"289","messageId":"290","endLine":21,"endColumn":15},{"ruleId":"287","severity":1,"message":"296","line":69,"column":7,"nodeType":"289","messageId":"290","endLine":69,"endColumn":11},{"ruleId":"287","severity":1,"message":"297","line":1,"column":41,"nodeType":"289","messageId":"290","endLine":1,"endColumn":49},{"ruleId":"287","severity":1,"message":"298","line":4,"column":5,"nodeType":"289","messageId":"290","endLine":4,"endColumn":15},{"ruleId":"287","severity":1,"message":"299","line":6,"column":5,"nodeType":"289","messageId":"290","endLine":6,"endColumn":15},{"ruleId":"287","severity":1,"message":"300","line":7,"column":5,"nodeType":"289","messageId":"290","endLine":7,"endColumn":21},{"ruleId":"287","severity":1,"message":"301","line":9,"column":5,"nodeType":"289","messageId":"290","endLine":9,"endColumn":14},{"ruleId":"287","severity":1,"message":"302","line":18,"column":21,"nodeType":"289","messageId":"290","endLine":18,"endColumn":26},{"ruleId":"287","severity":1,"message":"303","line":18,"column":28,"nodeType":"289","messageId":"290","endLine":18,"endColumn":34},{"ruleId":"304","severity":1,"message":"305","line":107,"column":8,"nodeType":"306","endLine":107,"endColumn":10,"suggestions":"307"},{"ruleId":"304","severity":1,"message":"308","line":111,"column":8,"nodeType":"306","endLine":111,"endColumn":10,"suggestions":"309"},{"ruleId":"304","severity":1,"message":"310","line":142,"column":9,"nodeType":"306","endLine":142,"endColumn":29,"suggestions":"311"},{"ruleId":"304","severity":1,"message":"312","line":175,"column":9,"nodeType":"306","endLine":175,"endColumn":60,"suggestions":"313"},{"ruleId":"314","replacedBy":"315"},{"ruleId":"316","replacedBy":"317"},{"ruleId":"287","severity":1,"message":"318","line":2,"column":47,"nodeType":"289","messageId":"290","endLine":2,"endColumn":57},{"ruleId":"287","severity":1,"message":"319","line":1,"column":30,"nodeType":"289","messageId":"290","endLine":1,"endColumn":39},{"ruleId":"287","severity":1,"message":"320","line":10,"column":3,"nodeType":"289","messageId":"290","endLine":10,"endColumn":16},{"ruleId":"287","severity":1,"message":"302","line":14,"column":31,"nodeType":"289","messageId":"290","endLine":14,"endColumn":36},{"ruleId":"287","severity":1,"message":"303","line":14,"column":38,"nodeType":"289","messageId":"290","endLine":14,"endColumn":44},{"ruleId":"287","severity":1,"message":"321","line":28,"column":10,"nodeType":"289","messageId":"290","endLine":28,"endColumn":29},{"ruleId":"287","severity":1,"message":"322","line":37,"column":8,"nodeType":"289","messageId":"290","endLine":37,"endColumn":14},{"ruleId":"304","severity":1,"message":"323","line":489,"column":5,"nodeType":"306","endLine":501,"endColumn":6,"suggestions":"324"},{"ruleId":"287","severity":1,"message":"325","line":503,"column":9,"nodeType":"289","messageId":"290","endLine":503,"endColumn":23},{"ruleId":"304","severity":1,"message":"326","line":530,"column":5,"nodeType":"306","endLine":530,"endColumn":22,"suggestions":"327"},{"ruleId":"287","severity":1,"message":"297","line":1,"column":28,"nodeType":"289","messageId":"290","endLine":1,"endColumn":36},{"ruleId":"304","severity":1,"message":"328","line":72,"column":5,"nodeType":"306","endLine":72,"endColumn":24,"suggestions":"329"},{"ruleId":"287","severity":1,"message":"300","line":4,"column":5,"nodeType":"289","messageId":"290","endLine":4,"endColumn":21},{"ruleId":"287","severity":1,"message":"288","line":5,"column":5,"nodeType":"289","messageId":"290","endLine":5,"endColumn":11},{"ruleId":"287","severity":1,"message":"330","line":7,"column":10,"nodeType":"289","messageId":"290","endLine":7,"endColumn":14},{"ruleId":"287","severity":1,"message":"331","line":8,"column":21,"nodeType":"289","messageId":"290","endLine":8,"endColumn":29},{"ruleId":"287","severity":1,"message":"302","line":8,"column":31,"nodeType":"289","messageId":"290","endLine":8,"endColumn":36},{"ruleId":"287","severity":1,"message":"303","line":8,"column":38,"nodeType":"289","messageId":"290","endLine":8,"endColumn":44},{"ruleId":"287","severity":1,"message":"288","line":5,"column":5,"nodeType":"289","messageId":"290","endLine":5,"endColumn":11},{"ruleId":"287","severity":1,"message":"330","line":7,"column":10,"nodeType":"289","messageId":"290","endLine":7,"endColumn":14},{"ruleId":"287","severity":1,"message":"302","line":8,"column":31,"nodeType":"289","messageId":"290","endLine":8,"endColumn":36},{"ruleId":"287","severity":1,"message":"303","line":8,"column":38,"nodeType":"289","messageId":"290","endLine":8,"endColumn":44},{"ruleId":"287","severity":1,"message":"288","line":5,"column":5,"nodeType":"289","messageId":"290","endLine":5,"endColumn":11},{"ruleId":"287","severity":1,"message":"330","line":7,"column":10,"nodeType":"289","messageId":"290","endLine":7,"endColumn":14},{"ruleId":"287","severity":1,"message":"302","line":8,"column":31,"nodeType":"289","messageId":"290","endLine":8,"endColumn":36},{"ruleId":"287","severity":1,"message":"303","line":8,"column":38,"nodeType":"289","messageId":"290","endLine":8,"endColumn":44},{"ruleId":"287","severity":1,"message":"288","line":5,"column":3,"nodeType":"289","messageId":"290","endLine":5,"endColumn":9},{"ruleId":"287","severity":1,"message":"330","line":11,"column":10,"nodeType":"289","messageId":"290","endLine":11,"endColumn":14},{"ruleId":"287","severity":1,"message":"302","line":12,"column":31,"nodeType":"289","messageId":"290","endLine":12,"endColumn":36},{"ruleId":"287","severity":1,"message":"303","line":12,"column":38,"nodeType":"289","messageId":"290","endLine":12,"endColumn":44},{"ruleId":"287","severity":1,"message":"332","line":13,"column":10,"nodeType":"289","messageId":"290","endLine":13,"endColumn":20},{"ruleId":"287","severity":1,"message":"288","line":5,"column":5,"nodeType":"289","messageId":"290","endLine":5,"endColumn":11},{"ruleId":"287","severity":1,"message":"330","line":7,"column":10,"nodeType":"289","messageId":"290","endLine":7,"endColumn":14},{"ruleId":"287","severity":1,"message":"302","line":8,"column":31,"nodeType":"289","messageId":"290","endLine":8,"endColumn":36},{"ruleId":"287","severity":1,"message":"303","line":8,"column":38,"nodeType":"289","messageId":"290","endLine":8,"endColumn":44},{"ruleId":"287","severity":1,"message":"288","line":5,"column":5,"nodeType":"289","messageId":"290","endLine":5,"endColumn":11},{"ruleId":"287","severity":1,"message":"330","line":7,"column":10,"nodeType":"289","messageId":"290","endLine":7,"endColumn":14},{"ruleId":"287","severity":1,"message":"302","line":8,"column":31,"nodeType":"289","messageId":"290","endLine":8,"endColumn":36},{"ruleId":"287","severity":1,"message":"303","line":8,"column":38,"nodeType":"289","messageId":"290","endLine":8,"endColumn":44},{"ruleId":"287","severity":1,"message":"288","line":5,"column":5,"nodeType":"289","messageId":"290","endLine":5,"endColumn":11},{"ruleId":"287","severity":1,"message":"330","line":7,"column":10,"nodeType":"289","messageId":"290","endLine":7,"endColumn":14},{"ruleId":"287","severity":1,"message":"302","line":8,"column":31,"nodeType":"289","messageId":"290","endLine":8,"endColumn":36},{"ruleId":"287","severity":1,"message":"303","line":8,"column":38,"nodeType":"289","messageId":"290","endLine":8,"endColumn":44},{"ruleId":"287","severity":1,"message":"300","line":4,"column":5,"nodeType":"289","messageId":"290","endLine":4,"endColumn":21},{"ruleId":"287","severity":1,"message":"288","line":5,"column":5,"nodeType":"289","messageId":"290","endLine":5,"endColumn":11},{"ruleId":"287","severity":1,"message":"330","line":7,"column":10,"nodeType":"289","messageId":"290","endLine":7,"endColumn":14},{"ruleId":"287","severity":1,"message":"331","line":8,"column":21,"nodeType":"289","messageId":"290","endLine":8,"endColumn":29},{"ruleId":"287","severity":1,"message":"302","line":8,"column":31,"nodeType":"289","messageId":"290","endLine":8,"endColumn":36},{"ruleId":"287","severity":1,"message":"303","line":8,"column":38,"nodeType":"289","messageId":"290","endLine":8,"endColumn":44},{"ruleId":"333","severity":1,"message":"334","line":17,"column":1,"nodeType":"335","endLine":36,"endColumn":3},{"ruleId":"287","severity":1,"message":"298","line":4,"column":2,"nodeType":"289","messageId":"290","endLine":4,"endColumn":12},{"ruleId":"287","severity":1,"message":"336","line":5,"column":2,"nodeType":"289","messageId":"290","endLine":5,"endColumn":10},{"ruleId":"287","severity":1,"message":"299","line":6,"column":2,"nodeType":"289","messageId":"290","endLine":6,"endColumn":12},{"ruleId":"287","severity":1,"message":"300","line":7,"column":2,"nodeType":"289","messageId":"290","endLine":7,"endColumn":18},{"ruleId":"287","severity":1,"message":"301","line":9,"column":2,"nodeType":"289","messageId":"290","endLine":9,"endColumn":11},{"ruleId":"287","severity":1,"message":"337","line":11,"column":2,"nodeType":"289","messageId":"290","endLine":11,"endColumn":6},{"ruleId":"287","severity":1,"message":"302","line":18,"column":21,"nodeType":"289","messageId":"290","endLine":18,"endColumn":26},{"ruleId":"287","severity":1,"message":"303","line":18,"column":28,"nodeType":"289","messageId":"290","endLine":18,"endColumn":34},{"ruleId":"304","severity":1,"message":"338","line":106,"column":5,"nodeType":"306","endLine":106,"endColumn":7,"suggestions":"339"},{"ruleId":"304","severity":1,"message":"340","line":148,"column":3,"nodeType":"306","endLine":148,"endColumn":25,"suggestions":"341"},{"ruleId":"304","severity":1,"message":"342","line":173,"column":3,"nodeType":"306","endLine":173,"endColumn":28,"suggestions":"343"},{"ruleId":"304","severity":1,"message":"344","line":83,"column":8,"nodeType":"306","endLine":83,"endColumn":10,"suggestions":"345"},{"ruleId":"304","severity":1,"message":"340","line":111,"column":9,"nodeType":"306","endLine":111,"endColumn":26,"suggestions":"346"},{"ruleId":"304","severity":1,"message":"347","line":139,"column":9,"nodeType":"306","endLine":139,"endColumn":29,"suggestions":"348"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'AddIcon' is defined but never used.","'Link' is defined but never used.","'withStyles' is defined but never used.","'Query' is defined but never used.","'classes' is assigned a value but never used.","'rows' is assigned a value but never used.","'useState' is defined but never used.","'Typography' is defined but never used.","'RadioGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'FormLabel' is defined but never used.","'Radio' is defined but never used.","'Select' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'defaultdata.patientById.bloodType', 'defaultdata.patientById.nationality', 'defaultdata.patientById.race', 'defaultdata.patientById.status', and 'mode'. Either include them or remove the dependency array.","ArrayExpression",["349"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["350"],"React Hook useCallback has missing dependencies: 'navigate', 'selectNationality', 'selectRace', and 'status'. Either include them or remove the dependency array.",["351"],"React Hook useCallback has missing dependencies: 'defaultdata.patientById._id', 'navigate', 'status', and 'updatePatient'. Either include them or remove the dependency array.",["352"],"no-native-reassign",["353"],"no-negated-in-lhs",["354"],"'IconButton' is defined but never used.","'useEffect' is defined but never used.","'useMediaQuery' is defined but never used.","'GET_TREATMENT_BY_ID' is defined but never used.","'moment' is defined but never used.","React Hook useCallback has missing dependencies: 'id' and 'navigate'. Either include them or remove the dependency array.",["355"],"'onSubmitUpdate' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'defaultdata.treatmentById._id', 'defaultdata.treatmentById.patientId', and 'navigate'. Either include them or remove the dependency array.",["356"],"React Hook useEffect has missing dependencies: 'onMobileClose' and 'openMobile'. Either include them or remove the dependency array. If 'onMobileClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["357"],"'Form' is defined but never used.","'Checkbox' is defined but never used.","'makeStyles' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'MenuItem' is defined but never used.","'Chip' is defined but never used.","React Hook useEffect has missing dependencies: 'defaultdata.medicineById' and 'mode'. Either include them or remove the dependency array.",["358"],"React Hook useCallback has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["359"],"React Hook useCallback has missing dependencies: 'defaultdata.medicineById._id' and 'navigate'. Either include them or remove the dependency array.",["360"],"React Hook useEffect has missing dependencies: 'defaultdata.userById' and 'mode'. Either include them or remove the dependency array.",["361"],["362"],"React Hook useCallback has missing dependencies: 'defaultdata.userById._id' and 'navigate'. Either include them or remove the dependency array.",["363"],{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},"no-global-assign","no-unsafe-negation",{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},"Update the dependencies array to be: [defaultdata.patientById.bloodType, defaultdata.patientById.nationality, defaultdata.patientById.race, defaultdata.patientById.status, mode]",{"range":"390","text":"391"},"Update the dependencies array to be: [data]",{"range":"392","text":"393"},"Update the dependencies array to be: [addPatient, navigate, select, selectNationality, selectRace, status]",{"range":"394","text":"395"},"Update the dependencies array to be: [defaultdata.patientById._id, navigate, select, selectNationality, selectRace, status, updatePatient]",{"range":"396","text":"397"},"Update the dependencies array to be: [form, id, status, addGeneralForm, navigate, addSkinForm, addAccidentForm, conAccident, addConAccidentForm, addEyesForm, addFeverForm, addDiarrheaForm, addPainForm]",{"range":"398","text":"399"},"Update the dependencies array to be: [defaultdata.treatmentById._id, defaultdata.treatmentById.patientId, navigate, updateTreatment]",{"range":"400","text":"401"},"Update the dependencies array to be: [location.pathname, onMobileClose, openMobile]",{"range":"402","text":"403"},"Update the dependencies array to be: [defaultdata.medicineById, mode]",{"range":"404","text":"405"},"Update the dependencies array to be: [addMedicine, metType, navigate]",{"range":"406","text":"407"},"Update the dependencies array to be: [defaultdata.medicineById._id, metType, updateMedicine, navigate]",{"range":"408","text":"409"},"Update the dependencies array to be: [defaultdata.userById, mode]",{"range":"410","text":"411"},"Update the dependencies array to be: [addUser, navigate, select]",{"range":"412","text":"413"},"Update the dependencies array to be: [defaultdata.userById._id, select, updateUser, navigate]",{"range":"414","text":"415"},[3236,3238],"[defaultdata.patientById.bloodType, defaultdata.patientById.nationality, defaultdata.patientById.race, defaultdata.patientById.status, mode]",[3354,3356],"[data]",[4530,4550],"[addPatient, navigate, select, selectNationality, selectRace, status]",[5788,5839],"[defaultdata.patientById._id, navigate, select, selectNationality, selectRace, status, updatePatient]",[17256,17519],"[form, id, status, addGeneralForm, navigate, addSkinForm, addAccidentForm, conAccident, addConAccidentForm, addEyesForm, addFeverForm, addDiarrheaForm, addPainForm]",[18497,18514],"[defaultdata.treatmentById._id, defaultdata.treatmentById.patientId, navigate, updateTreatment]",[1832,1851],"[location.pathname, onMobileClose, openMobile]",[2497,2499],"[defaultdata.medicineById, mode]",[3402,3424],"[addMedicine, metType, navigate]",[4022,4047],"[defaultdata.medicineById._id, metType, updateMedicine, navigate]",[2345,2347],"[defaultdata.userById, mode]",[3302,3319],"[addUser, navigate, select]",[4298,4318],"[defaultdata.userById._id, select, updateUser, navigate]"]