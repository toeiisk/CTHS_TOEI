[{"D:\\CTHS_TOEI\\src\\index.js":"1","D:\\CTHS_TOEI\\src\\reportWebVitals.js":"2","D:\\CTHS_TOEI\\src\\App.js":"3","D:\\CTHS_TOEI\\src\\routes.js":"4","D:\\CTHS_TOEI\\src\\components\\GlobalStyles.js":"5","D:\\CTHS_TOEI\\src\\pages\\Register.js":"6","D:\\CTHS_TOEI\\src\\pages\\Homepage.js":"7","D:\\CTHS_TOEI\\src\\pages\\Report.js":"8","D:\\CTHS_TOEI\\src\\pages\\Patients\\Patients.js":"9","D:\\CTHS_TOEI\\src\\pages\\Patients\\Create.js":"10","D:\\CTHS_TOEI\\src\\pages\\Patients\\Detail.js":"11","D:\\CTHS_TOEI\\src\\pages\\Admins\\User.js":"12","D:\\CTHS_TOEI\\src\\pages\\Admins\\Creat.js":"13","D:\\CTHS_TOEI\\src\\pages\\Admins\\Detail.js":"14","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Treatments.js":"15","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Create.js":"16","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Detail.js":"17","D:\\CTHS_TOEI\\src\\pages\\Login.js":"18","D:\\CTHS_TOEI\\src\\components\\Navbar\\Main\\index.js":"19","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Detail.js":"20","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Medicine.js":"21","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Create.js":"22","D:\\CTHS_TOEI\\src\\pages\\Medicine\\Prescription\\Prescription.js":"23","D:\\CTHS_TOEI\\src\\components\\Navbar\\index.js":"24","D:\\CTHS_TOEI\\src\\pages\\Patients\\Patients-form.js":"25","D:\\CTHS_TOEI\\src\\components\\Navbar\\Topbar.js":"26","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Treatment-form.js":"27","D:\\CTHS_TOEI\\src\\pages\\Patients\\GraphQL\\Querie.js":"28","D:\\CTHS_TOEI\\src\\pages\\Treatment\\GraphQL\\Querie.js":"29","D:\\CTHS_TOEI\\src\\components\\Navbar\\Sidebar.js":"30","D:\\CTHS_TOEI\\src\\pages\\Treatment\\PainForm.js":"31","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Diarrhea.js":"32","D:\\CTHS_TOEI\\src\\pages\\Treatment\\FeverForm.js":"33","D:\\CTHS_TOEI\\src\\pages\\Treatment\\ConAccidentForm.js":"34","D:\\CTHS_TOEI\\src\\pages\\Treatment\\EyesForm.js":"35","D:\\CTHS_TOEI\\src\\pages\\Treatment\\SkinForm.js":"36","D:\\CTHS_TOEI\\src\\pages\\Treatment\\AccidentForm.js":"37","D:\\CTHS_TOEI\\src\\pages\\Treatment\\GenaralForm.js":"38","D:\\CTHS_TOEI\\src\\pages\\Treatment\\GraphQL\\Mutation.js":"39","D:\\CTHS_TOEI\\src\\pages\\Patients\\GraphQL\\Mutation.js":"40","D:\\CTHS_TOEI\\src\\MulitiSelect.jsx":"41","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Medicine-form.js":"42","D:\\CTHS_TOEI\\src\\pages\\Admins\\GraphQL\\Querie.js":"43","D:\\CTHS_TOEI\\src\\pages\\Admins\\User-form.js":"44","D:\\CTHS_TOEI\\src\\pages\\Admins\\GraphQL\\Mutation.js":"45","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\graphql\\Mutation.js":"46","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\graphql\\Queries.js":"47","D:\\CTHS_TOEI\\src\\pages\\Dianosis\\Dianosis.js":"48","D:\\CTHS_TOEI\\src\\pages\\Dianosis\\GraphQL\\Querie.js":"49","D:\\CTHS_TOEI\\src\\pages\\Medicine\\Prescription\\GraphQL\\Querie.js":"50","D:\\CTHS_TOEI\\src\\pages\\Dianosis\\Detail.js":"51","D:\\CTHS_TOEI\\src\\pages\\Dianosis\\Diagnosis-form.js":"52","D:\\CTHS_TOEI\\src\\pages\\Dianosis\\GraphQL\\Mutation.js":"53"},{"size":771,"mtime":1616856986962,"results":"54","hashOfConfig":"55"},{"size":375,"mtime":1616614429078,"results":"56","hashOfConfig":"55"},{"size":419,"mtime":1617974023536,"results":"57","hashOfConfig":"55"},{"size":2547,"mtime":1618130469516,"results":"58","hashOfConfig":"55"},{"size":819,"mtime":1617974023537,"results":"59","hashOfConfig":"55"},{"size":4115,"mtime":1617091332682,"results":"60","hashOfConfig":"55"},{"size":704,"mtime":1617974023542,"results":"61","hashOfConfig":"55"},{"size":644,"mtime":1618219777283,"results":"62","hashOfConfig":"55"},{"size":2924,"mtime":1617974023566,"results":"63","hashOfConfig":"55"},{"size":1890,"mtime":1617974023557,"results":"64","hashOfConfig":"55"},{"size":4827,"mtime":1618044599850,"results":"65","hashOfConfig":"55"},{"size":3367,"mtime":1617974023541,"results":"66","hashOfConfig":"55"},{"size":1861,"mtime":1617974023539,"results":"67","hashOfConfig":"55"},{"size":2103,"mtime":1617974023539,"results":"68","hashOfConfig":"55"},{"size":3900,"mtime":1618044806632,"results":"69","hashOfConfig":"55"},{"size":6799,"mtime":1617974023568,"results":"70","hashOfConfig":"55"},{"size":9477,"mtime":1618219540394,"results":"71","hashOfConfig":"55"},{"size":4205,"mtime":1617091332681,"results":"72","hashOfConfig":"55"},{"size":1031,"mtime":1617974023537,"results":"73","hashOfConfig":"55"},{"size":2290,"mtime":1618039684815,"results":"74","hashOfConfig":"55"},{"size":3396,"mtime":1617974385972,"results":"75","hashOfConfig":"55"},{"size":1857,"mtime":1617974023542,"results":"76","hashOfConfig":"55"},{"size":3399,"mtime":1618069843377,"results":"77","hashOfConfig":"55"},{"size":1371,"mtime":1617974023538,"results":"78","hashOfConfig":"55"},{"size":25914,"mtime":1617974274662,"results":"79","hashOfConfig":"55"},{"size":1584,"mtime":1617974023538,"results":"80","hashOfConfig":"55"},{"size":57098,"mtime":1618146959050,"results":"81","hashOfConfig":"55"},{"size":954,"mtime":1618044523274,"results":"82","hashOfConfig":"55"},{"size":2540,"mtime":1618170158294,"results":"83","hashOfConfig":"55"},{"size":7426,"mtime":1618219742764,"results":"84","hashOfConfig":"55"},{"size":9004,"mtime":1618137764014,"results":"85","hashOfConfig":"55"},{"size":9817,"mtime":1618137173935,"results":"86","hashOfConfig":"55"},{"size":15014,"mtime":1618136748061,"results":"87","hashOfConfig":"55"},{"size":6451,"mtime":1618138107590,"results":"88","hashOfConfig":"55"},{"size":16493,"mtime":1618139254332,"results":"89","hashOfConfig":"55"},{"size":10642,"mtime":1618138691871,"results":"90","hashOfConfig":"55"},{"size":11545,"mtime":1618136118270,"results":"91","hashOfConfig":"55"},{"size":3129,"mtime":1618131301853,"results":"92","hashOfConfig":"55"},{"size":9089,"mtime":1618132562821,"results":"93","hashOfConfig":"55"},{"size":872,"mtime":1617974023565,"results":"94","hashOfConfig":"55"},{"size":878,"mtime":1617974023537,"results":"95","hashOfConfig":"55"},{"size":8943,"mtime":1617974367844,"results":"96","hashOfConfig":"55"},{"size":458,"mtime":1617974023540,"results":"97","hashOfConfig":"55"},{"size":17017,"mtime":1617974023540,"results":"98","hashOfConfig":"55"},{"size":657,"mtime":1617974023540,"results":"99","hashOfConfig":"55"},{"size":548,"mtime":1617974023556,"results":"100","hashOfConfig":"55"},{"size":379,"mtime":1617974023556,"results":"101","hashOfConfig":"55"},{"size":3830,"mtime":1618145798597,"results":"102","hashOfConfig":"55"},{"size":502,"mtime":1618068817096,"results":"103","hashOfConfig":"55"},{"size":500,"mtime":1618069822657,"results":"104","hashOfConfig":"55"},{"size":6499,"mtime":1618219628334,"results":"105","hashOfConfig":"55"},{"size":1985,"mtime":1618146479900,"results":"106","hashOfConfig":"55"},{"size":334,"mtime":1618146726113,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"yh3044",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"110"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"110"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"110"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"110"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"110"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"110"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"110"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"110"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"110"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"110"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"110"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"110"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"110"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"110"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"110"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"110"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"110"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"110"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"110"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"110"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"D:\\CTHS_TOEI\\src\\index.js",[],["238","239"],"D:\\CTHS_TOEI\\src\\reportWebVitals.js",[],"D:\\CTHS_TOEI\\src\\App.js",[],"D:\\CTHS_TOEI\\src\\routes.js",[],"D:\\CTHS_TOEI\\src\\components\\GlobalStyles.js",[],"D:\\CTHS_TOEI\\src\\pages\\Register.js",["240"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Logouser from \"../img/user.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(10),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"#ecb79c\",\r\n    color: \"white\",\r\n  },\r\n  logo: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function Register() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <div className={classes.logo}>\r\n          <img src={Logouser} style={{ width: \"80%\", height: \"auto\" }} />\r\n        </div>\r\n        <Typography component=\"h1\" variant=\"h5\" style={{ margin: 30 }}>\r\n          Register\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n                name=\"confirm password\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            <Typography component=\"subtitle1\" variant=\"subtitle1\">\r\n              Register\r\n            </Typography>\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/login\" variant=\"body2\">\r\n                <Typography component=\"subtitle1\" variant=\"subtitle1\">\r\n                  Already have an account? Sign in\r\n                </Typography>\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","D:\\CTHS_TOEI\\src\\pages\\Homepage.js",[],"D:\\CTHS_TOEI\\src\\pages\\Report.js",[],"D:\\CTHS_TOEI\\src\\pages\\Patients\\Patients.js",[],"D:\\CTHS_TOEI\\src\\pages\\Patients\\Create.js",[],"D:\\CTHS_TOEI\\src\\pages\\Patients\\Detail.js",["241","242"],"import React, {useEffect, useState} from 'react';\r\nimport { Box, Grid, Typography, Button, makeStyles } from '@material-ui/core';\r\nimport { InfoCard } from '@mystiny/ui';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport PatientsForm from './Patients-form'\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { GET_PATIENT } from './GraphQL/Querie'\r\nimport { useQuery } from '@apollo/client';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport moment from 'moment'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    create: {\r\n        backgroundColor: green[500],\r\n        '&:hover': {\r\n            backgroundColor: green[700],\r\n        },\r\n    },\r\n}));\r\n\r\nconst columns = [\r\n    { field: 'id', headerName: 'ID', width: 250, resizable: true },\r\n    {\r\n        field: 'createdAt',\r\n        headerName: 'Date',\r\n        width: 200,\r\n        resizable: true,\r\n    },\r\n    {\r\n        field: 'type',\r\n        headerName: 'Type',\r\n        width: 200,\r\n        resizable: true,\r\n    },\r\n    {\r\n        field: 'status',\r\n        headerName: 'Status',\r\n        width: 250,\r\n        resizable: true,\r\n    },\r\n];\r\n\r\nconst PatientDetailPage = () => {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    let { id } = useParams();\r\n    const { loading, error, data } = useQuery(GET_PATIENT, {\r\n        variables: {\r\n            id\r\n        },\r\n        fetchPolicy: 'cache-and-network'\r\n    });\r\n \r\n\r\n    if (loading) return \"...Loading\";\r\n    if (error) return `Error! ${error}`;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box >\r\n                <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n                    <Grid item xs={6}>\r\n                        <Typography paragraph style={{ fontWeight: 'bold', fontSize: '2em' }} >\r\n                            <DescriptionIcon color=\"primary\" fontSize=\"small\" /> รายละเอียดผู้ป่วย\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6} align='right'>\r\n                        <Box style={{ alignItems: 'center', justifyContent: 'flex-end' }}>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <InfoCard title='ข้อมูลผู้ป่วย' actionTopRight={\r\n                            <Box display=\"flex\">\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => navigate(`/app/treatment/create/patientId/${id}`)} style={{ marginRight: 10 }} className={classes.create}>\r\n                                    สร้างประวัติการรักษา\r\n                                </Button>\r\n                                <Button variant=\"contained\" color=\"secondary\" onClick={() => navigate(-1)} >\r\n                                    ย้อนกลับ\r\n                                </Button>\r\n                            </Box>\r\n                        }>\r\n                            <PatientsForm defaultdata={data} mode={'update'} />\r\n                        </InfoCard>\r\n                    </Grid>\r\n                    <Grid item xs={12} style={{ marginTop: 20 }}>\r\n                        <InfoCard title='ประวัติการรักษา'>\r\n                            <Grid container spacing={0} alignItems=\"center\" justify=\"center\" style={{ marginTop: 20 }}>\r\n                                <Grid item xs={12}>\r\n                                    <div style={{ height: 500, width: '100%', backgroundColor: 'white' }}>\r\n                                        <DataGrid\r\n                                            rows={data.patientById.treatment?.map((item) => ({\r\n                                                id: item._id,\r\n                                                createdAt: moment(new Date(item.createdAt)).format('DD/MM/YYYY'),\r\n                                                type: item.type,\r\n                                                status: item.status,\r\n                                            }))}\r\n                                            columns={columns}\r\n                                            pagination\r\n                                            pageSize={10}\r\n                                            onRowClick={(row) => navigate(`/app/treatment/detail/${row.row.id}`)}\r\n                                        />\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </InfoCard>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default PatientDetailPage","D:\\CTHS_TOEI\\src\\pages\\Admins\\User.js",[],"D:\\CTHS_TOEI\\src\\pages\\Admins\\Creat.js",[],"D:\\CTHS_TOEI\\src\\pages\\Admins\\Detail.js",[],"D:\\CTHS_TOEI\\src\\pages\\Treatment\\Treatments.js",["243","244","245","246"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, Grid, Typography, Button } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { GET_TREATMENTS } from './GraphQL/Querie'\r\nimport { useQuery } from '@apollo/client';\r\nimport moment from 'moment'\r\nimport { isObjectType } from 'graphql';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        boxAdmin: {},\r\n        display: 'flex',\r\n        '& div.MuiDataGrid-cell': {\r\n            color: 'white',\r\n        },\r\n        '& div.MuiDataGrid-colCellTitle': {\r\n            color: 'black',\r\n        },\r\n        '& div.MuiToolbar-root': {\r\n            color: 'white',\r\n        },\r\n        '& div.MuiTablePagination-actions': {\r\n            color: 'white',\r\n        },\r\n        '& div.MuiIconButton-label': {\r\n            color: 'white',\r\n        },\r\n        '& div.MuiDataGrid-colCellWrapper': {\r\n            backgroundColor: 'white',\r\n        },\r\n    },\r\n}));\r\n\r\nconst columns = [\r\n    { field: 'id', headerName: 'ID', width: 250, resizable: true },\r\n    {\r\n        field: 'createdAt',\r\n        headerName: 'Date',\r\n        width: 200,\r\n        resizable: true,\r\n    },\r\n    {\r\n        field: 'type',\r\n        headerName: 'Type',\r\n        width: 200,\r\n    },\r\n    {\r\n        field: 'name',\r\n        headerName: 'Name',\r\n        width: 200,\r\n        resizable: true,\r\n    },\r\n    {\r\n        field: 'lastname',\r\n        headerName: 'Lastname',\r\n        width: 200,\r\n        resizable: true,\r\n    },\r\n    {\r\n        field: 'idcardNumber',\r\n        headerName: 'Idcard Number',\r\n        width: 200,\r\n    },\r\n];\r\n\r\nconst Treatmentpage = () => {\r\n    const classes = useStyles();\r\n    let navigate = useNavigate();\r\n    const { loading, error, data } = useQuery(GET_TREATMENTS);\r\n    if (loading) return 'Loading...';\r\n    if (error) return `Error! ${error.message}`;\r\n    return (\r\n        <React.Fragment className={classes.root}>\r\n            <Box className={classes.boxAdmin}>\r\n                <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n                    <Grid item xs={6}>\r\n                        <Typography paragraph style={{ fontWeight: 'bold' }} variant=\"h5\">\r\n                          Treatment\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6} align='right'>\r\n                        <Box style={{ alignItems: 'center', justifyContent: 'flex-end' }}>\r\n\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={0} alignItems=\"center\" justify=\"center\" style={{ marginTop: 20 }}>\r\n                    <Grid item xs={12}>\r\n                        <div style={{ height: 500, width: '100%', backgroundColor: 'white' }}>\r\n                            <DataGrid\r\n\t\t\t\t\t\t\t\trows={data.allTreatments.map((item) => ({\r\n                                    id: item._id,\r\n                                    createdAt: moment(new Date(item.createdAt)).format('DD/MM/YYYY'),\r\n                                    name: item.patient.firstname,\r\n                                    lastname: item.patient.lastname,\r\n                                    idcardNumber: item.patient.idcardNumber,\r\n                                    type: item.type\r\n                                }))}\r\n                                columns={columns}\r\n                                pagination\r\n                                pageSize={10}\r\n                                onRowClick={(row) => navigate(`/app/treatment/detail/${row.row.id}`)}\r\n\t\t\t\t\t\t\t/>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Treatmentpage;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Create.js",["247"],"import React from 'react';\r\nimport { Box, Grid, Typography, Button, TextField as MuiTextField } from '@material-ui/core';\r\nimport { InfoCard } from '@mystiny/ui';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_PATIENT } from '../Patients/GraphQL/Querie'\r\nimport moment from 'moment';\r\nimport TreatmentForm from './Treatment-form'\r\nconst useStyles = makeStyles((theme) => ({\r\n    create: {\r\n        backgroundColor: green[500],\r\n        '&:hover': {\r\n            backgroundColor: green[700],\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nconst CreateTreatmentPage = () => {\r\n    const navigate = useNavigate();\r\n    const classes = useStyles();\r\n    let { id } = useParams();\r\n    const { loading, error, data } = useQuery(GET_PATIENT, {\r\n        variables: {\r\n            id\r\n        },\r\n        fetchPolicy: 'cache-and-network',\r\n    });\r\n\r\n    if (loading) return \"...Loading\";\r\n    if (error) return `Error! ${error}`;\r\n    return (\r\n        <React.Fragment>\r\n            <Box >\r\n                <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n                    <Grid item xs={6}>\r\n                        <Typography paragraph style={{ fontWeight: 'bold', fontSize: '2em' }} >\r\n                            <DescriptionIcon color=\"primary\" fontSize=\"small\" /> สร้างประวัติการรักษา\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6} align='right'>\r\n                        <Box style={{ alignItems: 'center', justifyContent: 'flex-end' }}>\r\n\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <InfoCard title={\r\n                            <React.Fragment>\r\n                                <Box display=\"flex \" style={{ fontSize: '1em', justifyContent: 'center', alignItems: 'center' }}>\r\n                                    <h4>ข้อมูลผู้ป่วย</h4>\r\n                                    <Button variant=\"contained\" color=\"secondary\" onClick={() => navigate(`/app/patients/detail/${id}`)} style={{ marginLeft: 20 }} className={classes.create}>\r\n                                        ดูข้อมูลเพิ่มเติม\r\n                                    </Button>\r\n                                </Box>\r\n                            </React.Fragment>\r\n                        }\r\n                        actionTopRight={\r\n                            <Box display=\"flex\">\r\n                                <Button variant=\"contained\" color=\"secondary\" onClick={() => navigate(-1)} >\r\n                                    ย้อนกลับ\r\n                                </Button>\r\n                            </Box>\r\n                        }>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={6}>\r\n                                    <MuiTextField\r\n                                        id=\"standard-read-only-input\"\r\n                                        label=\"ชื่อ\"\r\n                                        defaultValue={data.patientById.firstname}\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <MuiTextField\r\n                                        id=\"standard-read-only-input\"\r\n                                        label=\"นามสกุล\"\r\n                                        defaultValue={data.patientById.lastname}\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <MuiTextField\r\n                                        id=\"standard-read-only-input\"\r\n                                        label=\"โรคประจำตัว\"\r\n                                        defaultValue={data.patientById.congenitalDisease.toString()}\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <MuiTextField\r\n                                        id=\"standard-read-only-input\"\r\n                                        label=\"วัน/เดือน/ปีเกิด\"\r\n                                        defaultValue={`${moment(new Date(data.patientById.birthdate)).format(\"DD-MM-YYYY\")}`}\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </InfoCard>\r\n                    </Grid>\r\n                    <Grid item xs={12} style={{ marginTop: 20 }}>\r\n                        <InfoCard\r\n                            title={\r\n                                <React.Fragment>\r\n                                    <Box display=\"flex \" style={{ fontSize: '1em', justifyContent: 'center', alignItems: 'center' }}>\r\n                                        <h4>ประวัติการรักษา</h4>\r\n                                    </Box>\r\n                                </React.Fragment>\r\n                            }\r\n                        >\r\n                            <TreatmentForm />\r\n                        </InfoCard>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CreateTreatmentPage","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Detail.js",["248","249","250","251","252"],"D:\\CTHS_TOEI\\src\\pages\\Login.js",["253"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Logouser from \"../img/user.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(https://i.imgur.com/u9flexs.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"#5780f7\",\r\n    color: \"white\",\r\n    padding: 8\r\n  },\r\n  logo: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function SignInSide() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <fullWidthClassName />\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={6} className={classes.image} />\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        sm={8}\r\n        md={6}\r\n        component={Paper}\r\n        square\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <div className={classes.paper}>\r\n          <div className={classes.logo}>\r\n            <img src={Logouser} style={{ width: \"80%\", height: \"auto\" }} />\r\n          </div>\r\n          <Typography component=\"h1\" variant=\"h5\" style={{margin: 30}}>\r\n            Clinic Treatment History System\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"filled\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              // style={{ boxShadow: \"5px 10px #777\" }}\r\n            />\r\n            <TextField\r\n              variant=\"filled\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              className={classes.submit}\r\n            >\r\n              <Typography component=\"subtitle1\" variant=\"subtitle1\">\r\n                Login\r\n              </Typography>\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <FormControlLabel\r\n                  control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                  label=\"Remember me\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"/register\" variant=\"body2\">\r\n                  <Typography\r\n                    component=\"subtitle1\"\r\n                    variant=\"subtitle1\"\r\n                    style={{ marginRight: 10 }}\r\n                  >\r\n                    Don't Have an Account?\r\n                  </Typography>\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  <Typography component=\"subtitle1\" variant=\"subtitle1\">\r\n                    Forgot Password?\r\n                  </Typography>\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","D:\\CTHS_TOEI\\src\\components\\Navbar\\Main\\index.js",[],"D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Detail.js",["254"],"import React from 'react';\r\nimport { Box, Grid, Typography, Button, makeStyles } from '@material-ui/core';\r\nimport { InfoCard } from '@mystiny/ui';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport MedicineForm from './Medicine-form';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { GET_MEDICINE } from './graphql/Queries';\r\nimport { useQuery } from '@apollo/client';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcreate: {\r\n\t\tbackgroundColor: green[500],\r\n\t\t'&:hover': {\r\n\t\t\tbackgroundColor: green[700],\r\n\t\t},\r\n\t},\r\n}));\r\n\r\nconst MedicineDetailPage = () => {\r\n\tconst classes = useStyles();\r\n\tconst navigate = useNavigate();\r\n\tlet { id } = useParams();\r\n\tconst { loading, error, data } = useQuery(GET_MEDICINE, {\r\n\t\tvariables: {\r\n\t\t\tid,\r\n\t\t},\r\n\t\tfetchPolicy: 'cache-and-network',\r\n\t});\r\n\r\n\tif (loading) return '...Loading';\r\n\tif (error) return `Error! ${error}`;\r\n    \r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Box>\r\n\t\t\t\t<Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Typography paragraph style={{ fontWeight: 'bold', fontSize: '2em' }}>\r\n\t\t\t\t\t\t\t<DescriptionIcon color=\"primary\" fontSize=\"small\" /> รายละเอียดยา\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6} align=\"right\">\r\n\t\t\t\t\t\t<Box style={{ alignItems: 'center', justifyContent: 'flex-end' }}></Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<InfoCard\r\n\t\t\t\t\t\t\ttitle=\"ข้อมูลยา\"\r\n\t\t\t\t\t\t\tactionTopRight={\r\n\t\t\t\t\t\t\t\t<Box display=\"flex\">\r\n\t\t\t\t\t\t\t\t\t{/* <Button\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => navigate(`/app/treatment/create/patientId/${id}`)}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ marginRight: 10 }}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.create}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tสร้างประวัติการรักษา\r\n\t\t\t\t\t\t\t\t\t</Button> */}\r\n\t\t\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"secondary\" onClick={() => navigate(-1)}>\r\n\t\t\t\t\t\t\t\t\t\tย้อนกลับ\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MedicineForm defaultdata={data} mode={'update'} />\r\n\t\t\t\t\t\t</InfoCard>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Box>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default MedicineDetailPage;\r\n","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Medicine.js",["255"],"import React from 'react';\r\nimport { Box, Grid, Typography, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { GET_MEDICINES } from './graphql/Queries';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t\t'& div.MuiDataGrid-cell': {\r\n\t\t\tcolor: 'white',\r\n\t\t},\r\n\t\t'& div.MuiDataGrid-colCellTitle': {\r\n\t\t\tcolor: 'black',\r\n\t\t},\r\n\t\t'& div.MuiToolbar-root': {\r\n\t\t\tcolor: 'white',\r\n\t\t},\r\n\t\t'& div.MuiTablePagination-actions': {\r\n\t\t\tcolor: 'white',\r\n\t\t},\r\n\t\t'& div.MuiIconButton-label': {\r\n\t\t\tcolor: 'white',\r\n\t\t},\r\n\t\t'& div.MuiDataGrid-colCellWrapper': {\r\n\t\t\tbackgroundColor: 'white',\r\n\t\t},\r\n\t},\r\n\tboxAdmin: {},\r\n}));\r\n\r\nconst columns = [\r\n\t{ field: 'id', headerName: 'ID', width: 300, resizable: true },\r\n\t{\r\n\t\tfield: 'name',\r\n\t\theaderName: 'Name',\r\n\t\twidth: 300,\r\n\t\tresizable: true,\r\n\t},\r\n\t{\r\n\t\tfield: 'description',\r\n\t\theaderName: 'Description',\r\n\t\twidth: 400,\r\n\t\tresizable: true,\r\n\t},\r\n\t{\r\n\t\tfield: 'amount',\r\n\t\theaderName: 'Amount',\r\n\t\twidth: 150,\r\n\t\tresizable: true,\r\n\t},\r\n\t{\r\n\t\tfield: 'unitType',\r\n\t\theaderName: 'Unit Type',\r\n\t\tresizable: true,\r\n\t\twidth: 200,\r\n\t},\r\n\t{\r\n\t\tfield: 'medType',\r\n\t\theaderName: 'Med Type',\r\n\t\tresizable: true,\r\n\t\twidth: 200,\r\n\t},\r\n];\r\n\r\nconst rows = [\r\n\t{ id: '1', name: 'Sara', description: 'แก้ปวด', amount: 500, unitType: 'ขวด' },\r\n\t{ id: '2', name: 'Para', description: 'แก้ปวด', amount: 500, unitType: 'ขวด' },\r\n];\r\n\r\nconst Medicinepage = () => {\r\n\tconst classes = useStyles();\r\n\tlet navigate = useNavigate();\r\n\tconst { loading, error, data } = useQuery(GET_MEDICINES);\r\n\tif (loading) return 'Loading...';\r\n\tif (error) return `Error! ${error.message}`;\r\n\r\n\tconsole.log(data);\r\n\treturn (\r\n\t\t<React.Fragment className={classes.root}>\r\n\t\t\t<Box className={classes.boxAdmin}>\r\n\t\t\t\t<Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={12} md={6}>\r\n\t\t\t\t\t\t<Typography variant=\"h5\" paragraph style={{ fontWeight: 'bolder' }}>\r\n\t\t\t\t\t\t\tDrug Storehouse\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} md={6} align=\"right\">\r\n\t\t\t\t\t\t<Box style={{ alignItems: 'center', justifyContent: 'flex-end' }}>\r\n\t\t\t\t\t\t\t<Link to=\"/app/medicine/drugstore/create\" style={{ textDecoration: 'none' }}>\r\n\t\t\t\t\t\t\t\t<Button startIcon={<AddIcon />} variant=\"contained\" color=\"primary\">\r\n\t\t\t\t\t\t\t\t\tCreate new medicine\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid container spacing={0} alignItems=\"center\" justify=\"center\" style={{ marginTop: 20 }}>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<div style={{ height: 500, width: '100%', backgroundColor: 'white' }}>\r\n\t\t\t\t\t\t\t<DataGrid\r\n\t\t\t\t\t\t\t\trows={data.allMedicines.map((item) => ({\r\n\t\t\t\t\t\t\t\t\tid: item._id,\r\n\t\t\t\t\t\t\t\t\tname: item.name,\r\n\t\t\t\t\t\t\t\t\tdescription: item.description,\r\n\t\t\t\t\t\t\t\t\tamount: item.amount,\r\n\t\t\t\t\t\t\t\t\tunitType: item.unitType,\r\n\t\t\t\t\t\t\t\t\tmedType: item.medType\r\n\t\t\t\t\t\t\t\t}))}\r\n\t\t\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\t\t\tpagination\r\n\t\t\t\t\t\t\t\tpageSize={10}\r\n\t\t\t\t\t\t\t\tonRowClick={(row) => navigate(`/app/medicine/drugstore/detail/${row.row.id}`)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Box>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Medicinepage;\r\n","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Create.js",[],"D:\\CTHS_TOEI\\src\\pages\\Medicine\\Prescription\\Prescription.js",["256","257","258"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box, Grid, Typography, Button } from \"@material-ui/core\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { GET_TREATMENTS_MEDICINE } from \"./GraphQL/Querie\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    boxAdmin: {},\r\n    display: \"flex\",\r\n    \"& div.MuiDataGrid-cell\": {\r\n      color: \"white\",\r\n    },\r\n    \"& div.MuiDataGrid-colCellTitle\": {\r\n      color: \"black\",\r\n    },\r\n    \"& div.MuiToolbar-root\": {\r\n      color: \"white\",\r\n    },\r\n    \"& div.MuiTablePagination-actions\": {\r\n      color: \"white\",\r\n    },\r\n    \"& div.MuiIconButton-label\": {\r\n      color: \"white\",\r\n    },\r\n    \"& div.MuiDataGrid-colCellWrapper\": {\r\n      backgroundColor: \"white\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst columns = [\r\n  { field: \"id\", headerName: \"ID\", width: 250, resizable: true },\r\n  {\r\n    field: \"createdAt\",\r\n    headerName: \"Date\",\r\n    width: 200,\r\n    resizable: true,\r\n  },\r\n  {\r\n    field: \"type\",\r\n    headerName: \"Type\",\r\n    width: 200,\r\n  },\r\n  {\r\n    field: \"name\",\r\n    headerName: \"Name\",\r\n    width: 200,\r\n    resizable: true,\r\n  },\r\n  {\r\n    field: \"lastname\",\r\n    headerName: \"Lastname\",\r\n    width: 200,\r\n    resizable: true,\r\n  },\r\n  {\r\n    field: \"idcardNumber\",\r\n    headerName: \"Idcard Number\",\r\n    width: 200,\r\n  },\r\n];\r\n\r\nconst Dianosispage = () => {\r\n  const classes = useStyles();\r\n  let navigate = useNavigate();\r\n  const { loading, error, data } = useQuery(GET_TREATMENTS_MEDICINE);\r\n  if (loading) return \"Loading...\";\r\n  if (error) return `Error! ${error.message}`;\r\n  return (\r\n    <React.Fragment className={classes.root}>\r\n      <Box className={classes.boxAdmin}>\r\n        <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n          <Grid item xs={6}>\r\n            <Typography paragraph style={{ fontWeight: \"bold\" }} variant=\"h5\">\r\n              Prescription\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6} align=\"right\">\r\n            <Box\r\n              style={{ alignItems: \"center\", justifyContent: \"flex-end\" }}\r\n            ></Box>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ marginTop: 20 }}\r\n        >\r\n          <Grid item xs={12}>\r\n            <div\r\n              style={{ height: 500, width: \"100%\", backgroundColor: \"white\" }}\r\n            >\r\n              <DataGrid\r\n                rows={data.allTreatments.map((item) => ({\r\n                  id: item._id,\r\n                  createdAt: moment(new Date(item.createdAt)).format(\r\n                    \"DD/MM/YYYY\"\r\n                  ),\r\n                  name: item.patient.firstname,\r\n                  lastname: item.patient.lastname,\r\n                  idcardNumber: item.patient.idcardNumber,\r\n                  type: item.type,\r\n                }))}\r\n                columns={columns}\r\n                pagination\r\n                pageSize={10}\r\n                // onRowClick={(row) => navigate(`/app/treatment/detail/${row.row.id}`)}\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Dianosispage;\r\n","D:\\CTHS_TOEI\\src\\components\\Navbar\\index.js",[],"D:\\CTHS_TOEI\\src\\pages\\Patients\\Patients-form.js",["259","260","261","262","263","264","265","266","267","268","269"],"import React, { useCallback, useEffect, useState } from 'react'\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    MenuItem,\r\n    RadioGroup,\r\n    FormControlLabel,\r\n    FormControl,\r\n    FormLabel,\r\n    Button,\r\n    Chip,\r\n    NativeSelect,\r\n    InputBase,\r\n    InputLabel,\r\n} from '@material-ui/core';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { TextField, Radio, Select } from 'final-form-material-ui';\r\nimport MultiSelect from \"../../MulitiSelect\";\r\nimport \"../../App.css\"\r\nimport { ADD_PATIENT, UPDATE_PATIENT_BY_ID } from './GraphQL/Mutation'\r\nimport { useMutation } from '@apollo/client';\r\nimport { GET_PATIENTS } from './GraphQL/Querie'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport moment from 'moment';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            width: '25ch',\r\n        },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        maxWidth: 300,\r\n    },\r\n    chips: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n        margin: 2,\r\n    },\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n    root: {\r\n        'label + &': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    input: {\r\n        borderRadius: 4,\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        width: \"100%\",\r\n        padding: '10px 26px 10px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n        '&:focus': {\r\n            borderRadius: 4,\r\n            borderColor: '#80bdff',\r\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n        },\r\n    },\r\n}))(InputBase);\r\n\r\nconst PatientsForm = (props) => {\r\n    const { mode, defaultdata } = props\r\n    const classes = useStyles();\r\n    let navigate = useNavigate();\r\n    const test = ['โรคหัวใจ', 'โรคความดัน', 'โรคเบาหวาน', 'โรคสมอง'];\r\n    const [select, setSelect] = React.useState('')\r\n    const [status, setStatus] = React.useState('')\r\n    const [addPatient] = useMutation(ADD_PATIENT);\r\n    const [updatePatient] = useMutation(UPDATE_PATIENT_BY_ID)\r\n    const [nationality, setNationality] = React.useState([])\r\n    const [selectNationality, setSelectNationality] = React.useState('')\r\n    const [selectRace, setSelectRace] = React.useState('')\r\n\r\n    let data = require('npm-nationality-list')\r\n\r\n    useEffect(() => {\r\n        if (mode === 'update') {\r\n            setSelect(defaultdata.patientById.bloodType)\r\n            setStatus(defaultdata.patientById.status)\r\n            setSelectNationality(defaultdata.patientById.nationality)\r\n            setSelectRace(defaultdata.patientById.race)\r\n        } else {\r\n            return null\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        data.getList().map((item) => setNationality((prev) => [...prev, item]))\r\n    }, [])\r\n\r\n    const onSubmitCreate = useCallback(\r\n        async (value) => {\r\n            const variables = {\r\n                record: {\r\n                    firstname: value.firstname,\r\n                    lastname: value.lastname,\r\n                    idcardNumber: value.idcardNumber,\r\n                    birthdate: value.birthdate,\r\n                    nationality: selectNationality,\r\n                    race: selectRace,\r\n                    status: status,\r\n                    bloodType: select,\r\n                    phone: value.phone,\r\n                    address: value.address,\r\n                    hospitalRefer: value.hospitalRefer,\r\n                    congenitalDisease: value.congenitalDisease,\r\n                }\r\n            }\r\n            try {\r\n                await addPatient({ variables, refetchQueries: [{ query: GET_PATIENTS }] })\r\n                alert('บันทึกข้อมูลสำเร็จ')\r\n                setSelectNationality('')\r\n                setSelectRace('')\r\n                navigate(`/app/patients`)\r\n            } catch (err) {\r\n                console.log(err)\r\n                alert('เกิดข้อผิดพลาด' + err.message)\r\n            }\r\n        },\r\n        [addPatient, select]\r\n    )\r\n\r\n    const onSubmitUpdate = useCallback(\r\n        async (value) => {\r\n            const variables = {\r\n                id: defaultdata.patientById._id,\r\n                record: {\r\n                    firstname: value.firstname,\r\n                    lastname: value.lastname,\r\n                    idcardNumber: value.idcardNumber,\r\n                    birthdate: value.birthdate,\r\n                    nationality: selectNationality,\r\n                    race: selectRace,\r\n                    status: status,\r\n                    bloodType: select,\r\n                    phone: value.phone,\r\n                    address: value.address,\r\n                    hospitalRefer: value.hospitalRefer,\r\n                    congenitalDisease: value.congenitalDisease,\r\n                }\r\n            }\r\n            try {\r\n                await updatePatient({ variables, refetchQueries: [{ query: GET_PATIENTS }] })\r\n                alert('บันทึกข้อมูลสำเร็จ')\r\n                setSelectNationality('')\r\n                setSelectRace('')\r\n                navigate(`/app/patients`)\r\n            } catch (err) {\r\n                console.log(err)\r\n                alert('เกิดข้อผิดพลาด     ' + err.message)\r\n            }\r\n        },\r\n        [addPatient, select, selectNationality, selectRace]\r\n    )\r\n\r\n    const onSubmit = mode === 'update' ? onSubmitUpdate : onSubmitCreate\r\n\r\n    const handleChangeblood = (event) => {\r\n        setSelect(event.target.value);\r\n    };\r\n\r\n    const handleChangestatus = (event) => {\r\n        setStatus(event.target.value)\r\n    }\r\n\r\n    const handleSelectNationality = (event) => {\r\n        setSelectNationality(event.target.value)\r\n    }\r\n    const handleSelectRace = (event) => {\r\n        setSelectRace(event.target.value)\r\n    }\r\n\r\n    const normalizeIdcard = value => {\r\n        if (!value) return value;\r\n        const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n        if (onlyNums.length <= 13) return onlyNums;\r\n    }\r\n\r\n    const normalizePhone = value => {\r\n        if (!value) return value;\r\n        const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n        if (onlyNums.length <= 10) return onlyNums;\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Form\r\n                onSubmit={onSubmit}\r\n                render={({ handleSubmit, submitting }) => (\r\n                    <form className={classes.root} noValidate autoComplete=\"true\" onSubmit={handleSubmit}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        fullWidth\r\n                                        required\r\n                                        name=\"firstname\"\r\n                                        component={TextField}\r\n                                        type=\"text\"\r\n                                        label=\"ชื่อ\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        initialValue={defaultdata.patientById.firstname}\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        fullWidth\r\n                                        required\r\n                                        name=\"firstname\"\r\n                                        component={TextField}\r\n                                        type=\"text\"\r\n                                        label=\"ชื่อ\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        name=\"lastname\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        component={TextField}\r\n                                        label=\"นามสกุล\"\r\n                                        initialValue={defaultdata.patientById.lastname}\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        name=\"lastname\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        component={TextField}\r\n                                        label=\"นามสกุล\"\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"รหัสบัตรประชาชน\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"idcardNumber\"\r\n                                        component={TextField}\r\n                                        initialValue={defaultdata.patientById.idcardNumber}\r\n                                        parse={normalizeIdcard}\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        label=\"รหัสบัตรประชาชน\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"idcardNumber\"\r\n                                        component={TextField}\r\n                                        parse={normalizeIdcard}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        id=\"date\"\r\n                                        type=\"date\"\r\n                                        label=\"วัน/เดือน/ปีเกิด\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required={true}\r\n                                        component={TextField}\r\n                                        name='birthdate'\r\n                                        defaultValue={`${moment(defaultdata.patientById.birthdate).format(\"YYYY-MM-DD\")}`}\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        id=\"date\"\r\n                                        type=\"date\"\r\n                                        variant=\"outlined\"\r\n                                        label=\"วัน/เดือน/ปีเกิด\"\r\n                                        style={{ width: '100%' }}\r\n                                        required={true}\r\n                                        component={TextField}\r\n                                        name='birthdate'\r\n                                        defaultValue={`${moment(new Date()).format(\"YYYY-MM-DD\")}`}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl style={{ width: \"100%\" }}>\r\n                                    <InputLabel id=\"demo-mutiple-name-label\">สัญชาติ</InputLabel>\r\n                                    <NativeSelect\r\n                                        id=\"demo-customized-select-native\"\r\n                                        input={<BootstrapInput />}\r\n                                        value={selectNationality}\r\n                                        onChange={handleSelectNationality}\r\n                                        required={true}\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\" \" />\r\n                                        {nationality?.map((data, index) => (\r\n                                            <option value={`${data.nationality}`}>\r\n                                                {data.nationality}\r\n                                            </option>\r\n                                        ))}\r\n                                    </NativeSelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl style={{ width: \"100%\" }}>\r\n                                    <InputLabel id=\"demo-mutiple-name-label\">เชื้อชาติ</InputLabel>\r\n                                    <NativeSelect\r\n                                        id=\"demo-customized-select-native\"\r\n                                        input={<BootstrapInput />}\r\n                                        value={selectRace}\r\n                                        onChange={handleSelectRace}\r\n                                        required={true}\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\" \" />\r\n                                        {nationality?.map((data, index) => (\r\n                                            <option value={`${data.nationality}`}>\r\n                                                {data.nationality}\r\n                                            </option>\r\n                                        ))}\r\n                                    </NativeSelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl style={{ width: \"100%\" }}>\r\n                                    <InputLabel id=\"demo-mutiple-name-label\">สถานะ</InputLabel>\r\n                                    <NativeSelect\r\n                                        id=\"demo-customized-select-native\"\r\n                                        input={<BootstrapInput />}\r\n                                        value={status}\r\n                                        onChange={handleChangestatus}\r\n                                        required={true}\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\"เลือกสถานะ\" />\r\n                                        <option value={'SINGLE'}>โสด</option>\r\n                                        <option value={'MARRIED'}>สมรส</option>\r\n                                        <option value={'OTHER'}>อื่น ๆ</option>\r\n                                    </NativeSelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl style={{ width: \"100%\" }}>\r\n                                    <InputLabel id=\"demo-mutiple-name-label\">กรุ๊ปเลือด</InputLabel>\r\n                                    <NativeSelect\r\n                                        id=\"demo-customized-select-native\"\r\n                                        input={<BootstrapInput />}\r\n                                        value={select}\r\n                                        onChange={handleChangeblood}\r\n                                        required={true}\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\" \" />\r\n                                        <option value={'O'}>O</option>\r\n                                        <option value={'A'}>A</option>\r\n                                        <option value={'B'}>B</option>\r\n                                        <option value={'AB'}>AB</option>\r\n                                    </NativeSelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"เบอร์โทรศัพท์\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"phone\"\r\n                                        component={TextField}\r\n                                        initialValue={defaultdata.patientById.phone}\r\n                                        parse={normalizePhone}\r\n\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        label=\"เบอร์โทรศัพท์\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"phone\"\r\n                                        component={TextField}\r\n                                        parse={normalizePhone}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"โรงพยาบาลที่ส่งต่อ\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"hospitalRefer\"\r\n                                        component={TextField}\r\n                                        initialValue={defaultdata.patientById.hospitalRefer}\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        label=\"โรงพยาบาลที่ส่งต่อ\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"hospitalRefer\"\r\n                                        component={TextField}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        name=\"congenitalDisease\"\r\n                                        styling=\"field\"\r\n                                        labelname=\"โรคประจำตัว\"\r\n                                        component={MultiSelect}\r\n                                        variant=\"outlined\"\r\n                                        initialValue={defaultdata.patientById.congenitalDisease}\r\n                                        renderValue={selected => (\r\n                                            <div className=\"multi-select-chips\">\r\n                                                {selected.map(value => (\r\n                                                    <Chip\r\n                                                        key={value}\r\n                                                        label={value}\r\n                                                        className=\"multi-select-chip\"\r\n                                                    />\r\n                                                ))}\r\n                                            </div>\r\n                                        )}\r\n                                    >\r\n                                        {test.map((data, index) => (\r\n                                            <MenuItem key={index} value={data}>\r\n                                                {data}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Field>\r\n                                ) : (\r\n                                    <Field\r\n                                        name=\"congenitalDisease\"\r\n                                        styling=\"field\"\r\n                                        labelname=\"โรคประจำตัว\"\r\n                                        component={MultiSelect}\r\n                                        variant=\"outlined\"\r\n                                        renderValue={selected => (\r\n                                            <div className=\"multi-select-chips\">\r\n                                                {selected.map(value => (\r\n                                                    <Chip\r\n                                                        key={value}\r\n                                                        label={value}\r\n                                                        className=\"multi-select-chip\"\r\n                                                    />\r\n                                                ))}\r\n                                            </div>\r\n                                        )}\r\n                                    >\r\n                                        {test.map((data, index) => (\r\n                                            <MenuItem key={index} value={data}>\r\n                                                {data}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Field>\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"ที่อยู่\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"address\"\r\n                                        component={TextField}\r\n                                        initialValue={defaultdata.patientById.address}\r\n\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        label=\"ที่อยู่\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"address\"\r\n                                        component={TextField}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12} style={{ marginTop: 16, textAlign: 'center', width: '100%' }}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    disabled={submitting}\r\n                                >\r\n                                    บันทึกข้อมูล\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                )\r\n                }\r\n            />\r\n        </React.Fragment >\r\n    )\r\n}\r\nexport default PatientsForm","D:\\CTHS_TOEI\\src\\components\\Navbar\\Topbar.js",["270"],"import React from 'react';\r\nimport { AppBar, Hidden, Toolbar, makeStyles, IconButton, Box, Typography } from '@material-ui/core';\r\nimport Icon from '../../img/logo.png';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// icon\r\nimport { IconContext } from 'react-icons';\r\nimport { GiHamburgerMenu } from 'react-icons/gi';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\troot: {\r\n\t\tbackgroundColor: '#FFF',\r\n\t\tpadding: 10,\r\n\t},\r\n}));\r\n\r\nconst Layout = ({ className, onMobileNavOpen, ...rest }) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<AppBar className={clsx(classes.root, className)} {...rest}>\r\n\t\t\t<Toolbar>\r\n\t\t\t\t<Link to=\"/app/homepage\" style={{ textDecoration: 'none' }}>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<img src={Icon} alt=\"icon\" style={{ height: 70, width: 70 }} />\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\t\t\ttextTransform: 'uppercase',\r\n\t\t\t\t\t\t\t\tcolor: '#000',\r\n\t\t\t\t\t\t\t\tmarginLeft: 15,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tClinic Treatment History\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Box flexGrow={1} />\r\n\t\t\t\t<Hidden lgUp>\r\n\t\t\t\t\t<IconContext.Provider value={{ color: 'red', size: '30' }}>\r\n\t\t\t\t\t\t<GiHamburgerMenu onClick={onMobileNavOpen} />\r\n\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t</Hidden>\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t);\r\n};\r\n\r\nLayout.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\tonMobileNavOpen: PropTypes.func,\r\n};\r\n\r\nexport default Layout;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\Treatment-form.js",["271","272","273","274","275","276","277","278","279","280","281"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControl,\r\n  NativeSelect,\r\n  InputBase,\r\n  InputLabel,\r\n  Button,\r\n  FormControlLabel,\r\n  Checkbox as CheckboxDianosis,\r\n  TextField as MuiTextField,\r\n  MenuItem,\r\n  Select as SelectDiagnosis,\r\n} from \"@material-ui/core\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Checkbox, Radio, Select } from \"final-form-material-ui\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport {\r\n  ADD_GENERAL_FORM,\r\n  ADD_SKIN_FORM,\r\n  ADD_ACCIDENT_FORM,\r\n  ADD_CONACCIDENT_FORM,\r\n  ADD_EYES_FORM,\r\n  ADD_FEVER_FORM,\r\n  ADD_DIARRHEA_FORM,\r\n  ADD_PAIN_FORM,\r\n  UPDATE_GENERAL_FORM,\r\n  UPDATE_SKIN_FORM,\r\n  UPDATE_ACCIDENT_FORM,\r\n  UPDATE_CONACCIDENT_FORM,\r\n  UPDATE_EYES_FORM,\r\n  UPDATE_FEVER_FORM,\r\n  UPDATE_DIARRHEA_FORM,\r\n  UPDATE_PAIN_FORM,\r\n} from \"./GraphQL/Mutation\";\r\nimport {CREATE_DIAGNOSIS} from '../Dianosis/GraphQL/Mutation'\r\nimport { GET_TREATMENT_BY_ID, GET_TREATMENTS } from \"./GraphQL/Querie\";\r\nimport { GET_PATIENT } from \"../Patients/GraphQL/Querie\";\r\nimport { GET_TREATMENTS_DOAGNOSIS } from \"../Dianosis/GraphQL/Querie\";\r\nimport GeneralForm from \"./GenaralForm\";\r\nimport EyesForm from \"./EyesForm\";\r\nimport SkinForm from \"./SkinForm\";\r\nimport AccidentForm from \"./AccidentForm\";\r\nimport ConAccidentForm from \"./ConAccidentForm\";\r\nimport FeverForm from \"./FeverForm\";\r\nimport DiarrheaForm from \"./Diarrhea\";\r\nimport PainForm from \"./PainForm\";\r\nimport DiagnosisForm from \"../Dianosis/Diagnosis-form\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    maxWidth: 300,\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"100%\",\r\n    padding: \"10px 26px 10px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      borderRadius: 4,\r\n      borderColor: \"#80bdff\",\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst TreatmentForm = (props) => {\r\n  const { mode, defaultdata } = props;\r\n  const classes = useStyles();\r\n  let navigate = useNavigate();\r\n  const [addGeneralForm] = useMutation(ADD_GENERAL_FORM);\r\n  const [addSkinForm] = useMutation(ADD_SKIN_FORM);\r\n  const [addAccidentForm] = useMutation(ADD_ACCIDENT_FORM);\r\n  const [addConAccidentForm] = useMutation(ADD_CONACCIDENT_FORM);\r\n  const [addFeverForm] = useMutation(ADD_FEVER_FORM);\r\n  const [addEyesForm] = useMutation(ADD_EYES_FORM);\r\n  const [addDiarrheaForm] = useMutation(ADD_DIARRHEA_FORM);\r\n  const [addPainForm] = useMutation(ADD_PAIN_FORM);\r\n\r\n  const [addDiagnosis] = useMutation(CREATE_DIAGNOSIS)\r\n\r\n  const [updateGeneralForm] = useMutation(UPDATE_GENERAL_FORM);\r\n  const [updateSkinForm] = useMutation(UPDATE_SKIN_FORM);\r\n  const [updateAccidentForm] = useMutation(UPDATE_ACCIDENT_FORM);\r\n  const [updateConAccidentForm] = useMutation(UPDATE_CONACCIDENT_FORM);\r\n  const [updateFeverForm] = useMutation(UPDATE_FEVER_FORM);\r\n  const [updateEyesForm] = useMutation(UPDATE_EYES_FORM);\r\n  const [updateDiarrheaForm] = useMutation(UPDATE_DIARRHEA_FORM);\r\n  const [updatePainForm] = useMutation(UPDATE_PAIN_FORM);\r\n\r\n  let { id } = useParams();\r\n  const [status, setStatus] = useState(\"DIAGNOSIS\");\r\n  const [form, setForm] = useState(\"General\");\r\n  const [conAccident, setConaccident] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (mode === \"update\" || mode === \"diagnosis\") {\r\n      setForm(defaultdata.treatmentById.__typename);\r\n      setStatus(defaultdata.treatmentById.status);\r\n      if (defaultdata.treatmentById.lesion) {\r\n        setConaccident(defaultdata.treatmentById.lesion);\r\n      } else {\r\n        return null;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }, []);\r\n\r\n  const normalizeheight = (value) => {\r\n    if (!value) return value;\r\n    const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n    let number = parseFloat(onlyNums);\r\n    return number;\r\n  };\r\n  const normalizeweight = (value) => {\r\n    if (!value) return value;\r\n    const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n    let number = parseFloat(onlyNums);\r\n    return number;\r\n  };\r\n  const normalizebloodpressure = (value) => {\r\n    if (!value) return value;\r\n    const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n    let number = parseFloat(onlyNums);\r\n    return number;\r\n  };\r\n  const normalizepulserate = (value) => {\r\n    if (!value) return value;\r\n    const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n    let number = parseFloat(onlyNums);\r\n    return number;\r\n  };\r\n  const normalizetempuraturet = (value) => {\r\n    if (!value) return value;\r\n    const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n    let number = parseFloat(onlyNums);\r\n    return number;\r\n  };\r\n  const normalizerespiratoryrate = (value) => {\r\n    if (!value) return value;\r\n    const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n    let number = parseFloat(onlyNums);\r\n    return number;\r\n  };\r\n  const normalizebmi = (value) => {\r\n    if (!value) return value;\r\n    const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n    let number = parseFloat(onlyNums);\r\n    return number;\r\n  };\r\n  const normalizeoxygensaturation = (value) => {\r\n    if (!value) return value;\r\n    const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n    let number = parseFloat(onlyNums);\r\n    return number;\r\n  };\r\n\r\n  const handleChangeStatus = (event) => {\r\n    setStatus(event.target.value);\r\n  };\r\n\r\n  const handleChangeForm = (event) => {\r\n    setForm(event.target.value);\r\n  };\r\n\r\n  const handleChangeAccident = (event) => {\r\n    setConaccident(event.target.value);\r\n  };\r\n\r\n  const onSubmitCreate = useCallback(\r\n    async (value) => {\r\n      let medicerti = value.medicalCertificate ? true : false;\r\n      if (form === \"General\") {\r\n        const variables = {\r\n          record: {\r\n            patientId: id,\r\n            userId: \"6062eaf88849824480e01a4f\",\r\n            weight: value.weight,\r\n            height: value.height,\r\n            bloodPressure: value.bloodPressure,\r\n            pulseRate: value.pulseRate,\r\n            tempurature: value.tempurature,\r\n            respiratoryRate: value.respiratoryRate,\r\n            bmi: value.bmi,\r\n            oxygenSaturation: value.oxygenSaturation,\r\n            medicalCertificate: medicerti,\r\n            status: status,\r\n            chiefComplaint: value.chiefComplaint,\r\n            presentIllness: value.presentIllness,\r\n          },\r\n        };\r\n        try {\r\n          await addGeneralForm({\r\n            variables,\r\n            refetchQueries: [\r\n              { query: GET_TREATMENTS },\r\n              { query: GET_TREATMENTS_DOAGNOSIS },\r\n            ],\r\n          });\r\n          alert(\"บันทึกข้อมูลสำเร็จ\");\r\n          navigate(`/app/patients/detail/${id}`);\r\n        } catch (err) {\r\n          console.log(err);\r\n          alert(\"เกิดข้อผิดพลาด\" + err.message);\r\n        }\r\n      }\r\n      if (form === \"Skin\") {\r\n        let isItching = value.isItching ? true : false;\r\n        let isPain = value.isPain ? true : false;\r\n        let isStinging = value.isStinging ? true : false;\r\n        let isFever = value.isFever ? true : false;\r\n        let isSwelling = value.isSwelling ? true : false;\r\n        const variables = {\r\n          record: {\r\n            patientId: id,\r\n            userId: \"6062eaf88849824480e01a4f\",\r\n            weight: value.weight,\r\n            height: value.height,\r\n            bloodPressure: value.bloodPressure,\r\n            pulseRate: value.pulseRate,\r\n            tempurature: value.tempurature,\r\n            respiratoryRate: value.respiratoryRate,\r\n            bmi: value.bmi,\r\n            oxygenSaturation: value.oxygenSaturation,\r\n            medicalCertificate: medicerti,\r\n            status: status,\r\n            rashArea: value.rashArea,\r\n            rashDate: value.rashDate,\r\n            rashDetail: value.rashDetail,\r\n            isItching: isItching,\r\n            isPain: isPain,\r\n            isStinging: isStinging,\r\n            isFever: isFever,\r\n            isSwelling: isSwelling,\r\n            physicalExamination: value.physicalExamination,\r\n          },\r\n        };\r\n        try {\r\n          await addSkinForm({\r\n            variables,\r\n            refetchQueries: [\r\n              { query: GET_TREATMENTS },\r\n              { query: GET_TREATMENTS_DOAGNOSIS },\r\n            ],\r\n          });\r\n          alert(\"บันทึกข้อมูลสำเร็จ\");\r\n          navigate(`/app/patients/detail/${id}`);\r\n        } catch (err) {\r\n          console.log(err);\r\n          alert(\"เกิดข้อผิดพลาด\" + err.message);\r\n        }\r\n      }\r\n      if (form === \"Accident\") {\r\n        let isEmergency = value.isEmergency ? true : false;\r\n        let isInsurance = value.isInsurance ? true : false;\r\n        let isSafety = value.isSafety ? true : false;\r\n        let isTreatBefore = value.isTreatBefore ? true : false;\r\n        const variables = {\r\n          record: {\r\n            patientId: id,\r\n            userId: \"6062eaf88849824480e01a4f\",\r\n            weight: value.weight,\r\n            height: value.height,\r\n            bloodPressure: value.bloodPressure,\r\n            pulseRate: value.pulseRate,\r\n            tempurature: value.tempurature,\r\n            respiratoryRate: value.respiratoryRate,\r\n            bmi: value.bmi,\r\n            oxygenSaturation: value.oxygenSaturation,\r\n            medicalCertificate: medicerti,\r\n            status: status,\r\n            isEmergency: isEmergency,\r\n            isInsurance: isInsurance,\r\n            isSafety: isSafety,\r\n            woundArea: value.woundArea,\r\n            woundDate: value.woundDate,\r\n            woundLocation: value.woundLocation,\r\n            isTreatBefore: isTreatBefore,\r\n            treatBeforeDetail: value.treatBeforeDetail,\r\n            treatBeforeDate: value.treatBeforeDate,\r\n          },\r\n        };\r\n        try {\r\n          await addAccidentForm({\r\n            variables,\r\n            refetchQueries: [\r\n              { query: GET_TREATMENTS },\r\n              { query: GET_TREATMENTS_DOAGNOSIS },\r\n            ],\r\n          });\r\n          alert(\"บันทึกข้อมูลสำเร็จ\");\r\n          navigate(`/app/patients/detail/${id}`);\r\n        } catch (err) {\r\n          console.log(err);\r\n          alert(\"เกิดข้อผิดพลาด\" + err.message);\r\n        }\r\n      }\r\n      if (form === \"ContinueAccident\") {\r\n        let isInsurance = value.isInsurance ? true : false;\r\n        const variables = {\r\n          record: {\r\n            patientId: id,\r\n            userId: \"6062eaf88849824480e01a4f\",\r\n            weight: value.weight,\r\n            height: value.height,\r\n            bloodPressure: value.bloodPressure,\r\n            pulseRate: value.pulseRate,\r\n            tempurature: value.tempurature,\r\n            respiratoryRate: value.respiratoryRate,\r\n            bmi: value.bmi,\r\n            oxygenSaturation: value.oxygenSaturation,\r\n            medicalCertificate: medicerti,\r\n            status: status,\r\n            isInsurance: isInsurance,\r\n            lesion: conAccident,\r\n            advice: value.advice,\r\n            moreDetail: value.moreDetail,\r\n          },\r\n        };\r\n        try {\r\n          await addConAccidentForm({\r\n            variables,\r\n            refetchQueries: [\r\n              { query: GET_TREATMENTS },\r\n              { query: GET_TREATMENTS_DOAGNOSIS },\r\n            ],\r\n          });\r\n          alert(\"บันทึกข้อมูลสำเร็จ\");\r\n          navigate(`/app/patients/detail/${id}`);\r\n        } catch (err) {\r\n          console.log(err);\r\n          alert(\"เกิดข้อผิดพลาด\" + err.message);\r\n        }\r\n      }\r\n      if (form === \"Eyes\") {\r\n        let leftEye = value.leftEye ? true : false;\r\n        let rightEye = value.rightEye ? true : false;\r\n        let isPain = value.isPain ? true : false;\r\n        let isIrritation = value.isIrritation ? true : false;\r\n        let isItching = value.isItching ? true : false;\r\n        let isConjunctivitis = value.isConjunctivitis ? true : false;\r\n        let isSore = value.isSore ? true : false;\r\n        let isSwelling = value.isSwelling ? true : false;\r\n        let isTear = value.isTear ? true : false;\r\n        let isBlurred = value.isBlurred ? true : false;\r\n        let isGum = value.isGum ? true : false;\r\n        let isPurulent = value.isPurulent ? true : false;\r\n        let isMatter = value.isMatter ? true : false;\r\n        const variables = {\r\n          record: {\r\n            patientId: id,\r\n            userId: \"6062eaf88849824480e01a4f\",\r\n            weight: value.weight,\r\n            height: value.height,\r\n            bloodPressure: value.bloodPressure,\r\n            pulseRate: value.pulseRate,\r\n            tempurature: value.tempurature,\r\n            respiratoryRate: value.respiratoryRate,\r\n            bmi: value.bmi,\r\n            oxygenSaturation: value.oxygenSaturation,\r\n            medicalCertificate: medicerti,\r\n            status: status,\r\n            leftEye: leftEye,\r\n            rightEye: rightEye,\r\n            isPain: isPain,\r\n            isIrritation: isIrritation,\r\n            isItching: isItching,\r\n            isConjunctivitis: isConjunctivitis,\r\n            isSore: isSore,\r\n            isSwelling: isSwelling,\r\n            isTear: isTear,\r\n            isBlurred: isBlurred,\r\n            isGum: isGum,\r\n            isPurulent: isPurulent,\r\n            isMatter: isMatter,\r\n            physicalExamination: value.physicalExamination,\r\n          },\r\n        };\r\n        try {\r\n          await addEyesForm({\r\n            variables,\r\n            refetchQueries: [\r\n              { query: GET_TREATMENTS },\r\n              { query: GET_TREATMENTS_DOAGNOSIS },\r\n            ],\r\n          });\r\n          alert(\"บันทึกข้อมูลสำเร็จ\");\r\n          navigate(`/app/patients/detail/${id}`);\r\n        } catch (err) {\r\n          console.log(err);\r\n          alert(\"เกิดข้อผิดพลาด\" + err.message);\r\n        }\r\n      }\r\n      if (form === \"Fever\") {\r\n        let isFever = value.isFever ? true : false;\r\n        let isCough = value.isCough ? true : false;\r\n        let isPhlegm = value.isPhlegm ? true : false;\r\n        let isSnot = value.isSnot ? true : false;\r\n        let isHeadache = value.isHeadache ? true : false;\r\n        let isStuffy = value.isStuffy ? true : false;\r\n        let isAnorexia = value.isAnorexia ? true : false;\r\n        let isSoreThroat = value.isSoreThroat ? true : false;\r\n        let isEyeItching = value.isEyeItching ? true : false;\r\n        let isInjectedPharynx = value.isInjectedPharynx ? true : false;\r\n        let isExudates = value.isExudates ? true : false;\r\n        let isLungClear = value.isLungClear ? true : false;\r\n        const variables = {\r\n          record: {\r\n            patientId: id,\r\n            userId: \"6062eaf88849824480e01a4f\",\r\n            weight: value.weight,\r\n            height: value.height,\r\n            bloodPressure: value.bloodPressure,\r\n            pulseRate: value.pulseRate,\r\n            tempurature: value.tempurature,\r\n            respiratoryRate: value.respiratoryRate,\r\n            bmi: value.bmi,\r\n            oxygenSaturation: value.oxygenSaturation,\r\n            medicalCertificate: medicerti,\r\n            status: status,\r\n            physicalExamination: value.physicalExamination,\r\n            isFever: isFever,\r\n            isCough: isCough,\r\n            isPhlegm: isPhlegm,\r\n            isSnot: isSnot,\r\n            isHeadache: isHeadache,\r\n            isStuffy: isStuffy,\r\n            isAnorexia: isAnorexia,\r\n            isSoreThroat: isSoreThroat,\r\n            isEyeItching: isEyeItching,\r\n            isInjectedPharynx: isInjectedPharynx,\r\n            isExudates: isExudates,\r\n            isLungClear: isLungClear,\r\n          },\r\n        };\r\n        try {\r\n          await addFeverForm({\r\n            variables,\r\n            refetchQueries: [\r\n              { query: GET_TREATMENTS },\r\n              { query: GET_TREATMENTS_DOAGNOSIS },\r\n            ],\r\n          });\r\n          alert(\"บันทึกข้อมูลสำเร็จ\");\r\n          navigate(`/app/patients/detail/${id}`);\r\n        } catch (err) {\r\n          console.log(err);\r\n          alert(\"เกิดข้อผิดพลาด\" + err.message);\r\n        }\r\n      }\r\n      if (form === \"Diarrhea\") {\r\n        let isFever = value.isFever ? true : false;\r\n        let isFluxStool = value.isFluxStool ? true : false;\r\n        let isVomit = value.isVomit ? true : false;\r\n        const variables = {\r\n          record: {\r\n            patientId: id,\r\n            userId: \"6062eaf88849824480e01a4f\",\r\n            weight: value.weight,\r\n            height: value.height,\r\n            bloodPressure: value.bloodPressure,\r\n            pulseRate: value.pulseRate,\r\n            tempurature: value.tempurature,\r\n            respiratoryRate: value.respiratoryRate,\r\n            bmi: value.bmi,\r\n            oxygenSaturation: value.oxygenSaturation,\r\n            medicalCertificate: medicerti,\r\n            status: status,\r\n            physicalExamination: value.physicalExamination,\r\n            diarrheaAmount: value.diarrheaAmount,\r\n            diarrheaDetail: value.diarrheaDetail,\r\n            stomachache: value.stomachache,\r\n            isVomit: isVomit,\r\n            isFluxStool: isFluxStool,\r\n            isFever: isFever,\r\n            bowelSound: value.bowelSound,\r\n          },\r\n        };\r\n        try {\r\n          await addDiarrheaForm({\r\n            variables,\r\n            refetchQueries: [\r\n              { query: GET_TREATMENTS },\r\n              { query: GET_TREATMENTS_DOAGNOSIS },\r\n            ],\r\n          });\r\n          alert(\"บันทึกข้อมูลสำเร็จ\");\r\n          navigate(`/app/patients/detail/${id}`);\r\n        } catch (err) {\r\n          console.log(err);\r\n          alert(\"เกิดข้อผิดพลาด\" + err.message);\r\n        }\r\n      }\r\n      if (form === \"Pain\") {\r\n        const variables = {\r\n          record: {\r\n            patientId: id,\r\n            userId: \"6062eaf88849824480e01a4f\",\r\n            weight: value.weight,\r\n            height: value.height,\r\n            bloodPressure: value.bloodPressure,\r\n            pulseRate: value.pulseRate,\r\n            tempurature: value.tempurature,\r\n            respiratoryRate: value.respiratoryRate,\r\n            bmi: value.bmi,\r\n            oxygenSaturation: value.oxygenSaturation,\r\n            medicalCertificate: medicerti,\r\n            status: status,\r\n            physicalExamination: value.physicalExamination,\r\n            acheArea: value.acheArea,\r\n            acheDate: value.acheDate,\r\n            painScore: value.painScore,\r\n            acheDetail: value.acheDetail,\r\n            trigger: value.trigger,\r\n            crackDetail: value.crackDetail,\r\n          },\r\n        };\r\n        try {\r\n          await addPainForm({\r\n            variables,\r\n            refetchQueries: [\r\n              { query: GET_TREATMENTS },\r\n              { query: GET_TREATMENTS_DOAGNOSIS },\r\n            ],\r\n          });\r\n          alert(\"บันทึกข้อมูลสำเร็จ\");\r\n          navigate(`/app/patients/detail/${id}`);\r\n        } catch (err) {\r\n          console.log(err);\r\n          alert(\"เกิดข้อผิดพลาด\" + err.message);\r\n        }\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n    [\r\n      addGeneralForm,\r\n      addSkinForm,\r\n      status,\r\n      form,\r\n      conAccident,\r\n      addEyesForm,\r\n      addFeverForm,\r\n      addAccidentForm,\r\n      addConAccidentForm,\r\n      addDiarrheaForm,\r\n      addPainForm,\r\n    ]\r\n  );\r\n  const onSubmitUpdate = useCallback(\r\n    async (value) => {\r\n      let medicerti = value.medicalCertificate ? true : false;\r\n      if (form === \"General\") {\r\n        const variables = {\r\n          id: defaultdata.treatmentById._id,\r\n          record: {\r\n            patientId: defaultdata.treatmentById.patientId,\r\n            userId: \"6062eaf88849824480e01a4f\",\r\n            weight: value.weight,\r\n            height: value.height,\r\n            bloodPressure: value.bloodPressure,\r\n            pulseRate: value.pulseRate,\r\n            tempurature: value.tempurature,\r\n            respiratoryRate: value.respiratoryRate,\r\n            bmi: value.bmi,\r\n            oxygenSaturation: value.oxygenSaturation,\r\n            medicalCertificate: medicerti,\r\n            status: status,\r\n            chiefComplaint: value.chiefComplaint,\r\n            presentIllness: value.presentIllness,\r\n          },\r\n        };\r\n        try {\r\n          await updateGeneralForm({\r\n            variables,\r\n            refetchQueries: [\r\n              { query: GET_TREATMENTS },\r\n              { query: GET_TREATMENTS_DOAGNOSIS },\r\n            ],\r\n          });\r\n          alert(\"บันทึกข้อมูลสำเร็จ\");\r\n          navigate(\r\n            `/app/patients/detail/${defaultdata.treatmentById.patientId}`\r\n          );\r\n        } catch (err) {\r\n          console.log(err);\r\n          alert(\"เกิดข้อผิดพลาด\" + err.message);\r\n        }\r\n      }\r\n      if (form === \"Skin\") {\r\n        let isItching = value.isItching ? true : false;\r\n        let isPain = value.isPain ? true : false;\r\n        let isStinging = value.isStinging ? true : false;\r\n        let isFever = value.isFever ? true : false;\r\n        let isSwelling = value.isSwelling ? true : false;\r\n        const variables = {\r\n          id: defaultdata.treatmentById._id,\r\n          record: {\r\n            patientId: defaultdata.treatmentById.patientId,\r\n            userId: \"6062eaf88849824480e01a4f\",\r\n            weight: value.weight,\r\n            height: value.height,\r\n            bloodPressure: value.bloodPressure,\r\n            pulseRate: value.pulseRate,\r\n            tempurature: value.tempurature,\r\n            respiratoryRate: value.respiratoryRate,\r\n            bmi: value.bmi,\r\n            oxygenSaturation: value.oxygenSaturation,\r\n            medicalCertificate: medicerti,\r\n            status: status,\r\n            rashArea: value.rashArea,\r\n            rashDate: value.rashDate,\r\n            rashDetail: value.rashDetail,\r\n            isItching: isItching,\r\n            isPain: isPain,\r\n            isStinging: isStinging,\r\n            isFever: isFever,\r\n            isSwelling: isSwelling,\r\n            physicalExamination: value.physicalExamination,\r\n          },\r\n        };\r\n        try {\r\n          await updateSkinForm({\r\n            variables,\r\n            refetchQueries: [\r\n              { query: GET_TREATMENTS },\r\n              { query: GET_TREATMENTS_DOAGNOSIS },\r\n            ],\r\n          });\r\n          alert(\"บันทึกข้อมูลสำเร็จ\");\r\n          navigate(\r\n            `/app/patients/detail/${defaultdata.treatmentById.patientId}`\r\n          );\r\n        } catch (err) {\r\n          console.log(err);\r\n          alert(\"เกิดข้อผิดพลาด\" + err.message);\r\n        }\r\n      }\r\n      if (form === \"Accident\") {\r\n        let isEmergency = value.isEmergency ? true : false;\r\n        let isInsurance = value.isInsurance ? true : false;\r\n        let isSafety = value.isSafety ? true : false;\r\n        let isTreatBefore = value.isTreatBefore ? true : false;\r\n        const variables = {\r\n          id: defaultdata.treatmentById._id,\r\n          record: {\r\n            patientId: defaultdata.treatmentById.patientId,\r\n            userId: \"6062eaf88849824480e01a4f\",\r\n            weight: value.weight,\r\n            height: value.height,\r\n            bloodPressure: value.bloodPressure,\r\n            pulseRate: value.pulseRate,\r\n            tempurature: value.tempurature,\r\n            respiratoryRate: value.respiratoryRate,\r\n            bmi: value.bmi,\r\n            oxygenSaturation: value.oxygenSaturation,\r\n            medicalCertificate: medicerti,\r\n            status: status,\r\n            isEmergency: isEmergency,\r\n            isInsurance: isInsurance,\r\n            isSafety: isSafety,\r\n            woundArea: value.woundArea,\r\n            woundDate: value.woundDate,\r\n            woundLocation: value.woundLocation,\r\n            isTreatBefore: isTreatBefore,\r\n            treatBeforeDetail: value.treatBeforeDetail,\r\n            treatBeforeDate: value.treatBeforeDate,\r\n          },\r\n        };\r\n        try {\r\n          await updateAccidentForm({\r\n            variables,\r\n            refetchQueries: [\r\n              { query: GET_TREATMENTS },\r\n              { query: GET_TREATMENTS_DOAGNOSIS },\r\n            ],\r\n          });\r\n          alert(\"บันทึกข้อมูลสำเร็จ\");\r\n          navigate(\r\n            `/app/patients/detail/${defaultdata.treatmentById.patientId}`\r\n          );\r\n        } catch (err) {\r\n          console.log(err);\r\n          alert(\"เกิดข้อผิดพลาด\" + err.message);\r\n        }\r\n      }\r\n      if (form === \"ContinueAccident\") {\r\n        let isInsurance = value.isInsurance ? true : false;\r\n        const variables = {\r\n          id: defaultdata.treatmentById._id,\r\n          record: {\r\n            patientId: defaultdata.treatmentById.patientId,\r\n            userId: \"6062eaf88849824480e01a4f\",\r\n            weight: value.weight,\r\n            height: value.height,\r\n            bloodPressure: value.bloodPressure,\r\n            pulseRate: value.pulseRate,\r\n            tempurature: value.tempurature,\r\n            respiratoryRate: value.respiratoryRate,\r\n            bmi: value.bmi,\r\n            oxygenSaturation: value.oxygenSaturation,\r\n            medicalCertificate: medicerti,\r\n            status: status,\r\n            isInsurance: isInsurance,\r\n            lesion: conAccident,\r\n            advice: value.advice,\r\n            moreDetail: value.moreDetail,\r\n          },\r\n        };\r\n        try {\r\n          await updateConAccidentForm({\r\n            variables,\r\n            refetchQueries: [\r\n              { query: GET_TREATMENTS },\r\n              { query: GET_TREATMENTS_DOAGNOSIS },\r\n            ],\r\n          });\r\n          alert(\"บันทึกข้อมูลสำเร็จ\");\r\n          navigate(\r\n            `/app/patients/detail/${defaultdata.treatmentById.patientId}`\r\n          );\r\n        } catch (err) {\r\n          console.log(err);\r\n          alert(\"เกิดข้อผิดพลาด\" + err.message);\r\n        }\r\n      }\r\n      if (form === \"Eyes\") {\r\n        let leftEye = value.leftEye ? true : false;\r\n        let rightEye = value.rightEye ? true : false;\r\n        let isPain = value.isPain ? true : false;\r\n        let isIrritation = value.isIrritation ? true : false;\r\n        let isItching = value.isItching ? true : false;\r\n        let isConjunctivitis = value.isConjunctivitis ? true : false;\r\n        let isSore = value.isSore ? true : false;\r\n        let isSwelling = value.isSwelling ? true : false;\r\n        let isTear = value.isTear ? true : false;\r\n        let isBlurred = value.isBlurred ? true : false;\r\n        let isGum = value.isGum ? true : false;\r\n        let isPurulent = value.isPurulent ? true : false;\r\n        let isMatter = value.isMatter ? true : false;\r\n        const variables = {\r\n          id: defaultdata.treatmentById._id,\r\n          record: {\r\n            patientId: defaultdata.treatmentById.patientId,\r\n            userId: \"6062eaf88849824480e01a4f\",\r\n            weight: value.weight,\r\n            height: value.height,\r\n            bloodPressure: value.bloodPressure,\r\n            pulseRate: value.pulseRate,\r\n            tempurature: value.tempurature,\r\n            respiratoryRate: value.respiratoryRate,\r\n            bmi: value.bmi,\r\n            oxygenSaturation: value.oxygenSaturation,\r\n            medicalCertificate: medicerti,\r\n            status: status,\r\n            leftEye: leftEye,\r\n            rightEye: rightEye,\r\n            isPain: isPain,\r\n            isIrritation: isIrritation,\r\n            isItching: isItching,\r\n            isConjunctivitis: isConjunctivitis,\r\n            isSore: isSore,\r\n            isSwelling: isSwelling,\r\n            isTear: isTear,\r\n            isBlurred: isBlurred,\r\n            isGum: isGum,\r\n            isPurulent: isPurulent,\r\n            isMatter: isMatter,\r\n            physicalExamination: value.physicalExamination,\r\n          },\r\n        };\r\n        try {\r\n          await updateEyesForm({\r\n            variables,\r\n            refetchQueries: [\r\n              { query: GET_TREATMENTS },\r\n              { query: GET_TREATMENTS_DOAGNOSIS },\r\n            ],\r\n          });\r\n          alert(\"บันทึกข้อมูลสำเร็จ\");\r\n          navigate(\r\n            `/app/patients/detail/${defaultdata.treatmentById.patientId}`\r\n          );\r\n        } catch (err) {\r\n          console.log(err);\r\n          alert(\"เกิดข้อผิดพลาด\" + err.message);\r\n        }\r\n      }\r\n      if (form === \"Fever\") {\r\n        let isFever = value.isFever ? true : false;\r\n        let isCough = value.isCough ? true : false;\r\n        let isPhlegm = value.isPhlegm ? true : false;\r\n        let isSnot = value.isSnot ? true : false;\r\n        let isHeadache = value.isHeadache ? true : false;\r\n        let isStuffy = value.isStuffy ? true : false;\r\n        let isAnorexia = value.isAnorexia ? true : false;\r\n        let isSoreThroat = value.isSoreThroat ? true : false;\r\n        let isEyeItching = value.isEyeItching ? true : false;\r\n        let isInjectedPharynx = value.isInjectedPharynx ? true : false;\r\n        let isExudates = value.isExudates ? true : false;\r\n        let isLungClear = value.isLungClear ? true : false;\r\n        const variables = {\r\n          id: defaultdata.treatmentById._id,\r\n          record: {\r\n            patientId: defaultdata.treatmentById.patientId,\r\n            userId: \"6062eaf88849824480e01a4f\",\r\n            weight: value.weight,\r\n            height: value.height,\r\n            bloodPressure: value.bloodPressure,\r\n            pulseRate: value.pulseRate,\r\n            tempurature: value.tempurature,\r\n            respiratoryRate: value.respiratoryRate,\r\n            bmi: value.bmi,\r\n            oxygenSaturation: value.oxygenSaturation,\r\n            medicalCertificate: medicerti,\r\n            status: status,\r\n            physicalExamination: value.physicalExamination,\r\n            isFever: isFever,\r\n            isCough: isCough,\r\n            isPhlegm: isPhlegm,\r\n            isSnot: isSnot,\r\n            isHeadache: isHeadache,\r\n            isStuffy: isStuffy,\r\n            isAnorexia: isAnorexia,\r\n            isSoreThroat: isSoreThroat,\r\n            isEyeItching: isEyeItching,\r\n            isInjectedPharynx: isInjectedPharynx,\r\n            isExudates: isExudates,\r\n            isLungClear: isLungClear,\r\n          },\r\n        };\r\n        try {\r\n          await updateFeverForm({\r\n            variables,\r\n            refetchQueries: [\r\n              { query: GET_TREATMENTS },\r\n              { query: GET_TREATMENTS_DOAGNOSIS },\r\n            ],\r\n          });\r\n          alert(\"บันทึกข้อมูลสำเร็จ\");\r\n          navigate(\r\n            `/app/patients/detail/${defaultdata.treatmentById.patientId}`\r\n          );\r\n        } catch (err) {\r\n          console.log(err);\r\n          alert(\"เกิดข้อผิดพลาด\" + err.message);\r\n        }\r\n      }\r\n      if (form === \"Diarrhea\") {\r\n        let isFever = value.isFever ? true : false;\r\n        let isFluxStool = value.isFluxStool ? true : false;\r\n        let isVomit = value.isVomit ? true : false;\r\n        const variables = {\r\n          id: defaultdata.treatmentById._id,\r\n          record: {\r\n            patientId: defaultdata.treatmentById.patientId,\r\n            userId: \"6062eaf88849824480e01a4f\",\r\n            weight: value.weight,\r\n            height: value.height,\r\n            bloodPressure: value.bloodPressure,\r\n            pulseRate: value.pulseRate,\r\n            tempurature: value.tempurature,\r\n            respiratoryRate: value.respiratoryRate,\r\n            bmi: value.bmi,\r\n            oxygenSaturation: value.oxygenSaturation,\r\n            medicalCertificate: medicerti,\r\n            status: status,\r\n            physicalExamination: value.physicalExamination,\r\n            diarrheaAmount: value.diarrheaAmount,\r\n            diarrheaDetail: value.diarrheaDetail,\r\n            stomachache: value.stomachache,\r\n            isVomit: isVomit,\r\n            isFluxStool: isFluxStool,\r\n            isFever: isFever,\r\n            bowelSound: value.bowelSound,\r\n          },\r\n        };\r\n        try {\r\n          await updateDiarrheaForm({\r\n            variables,\r\n            refetchQueries: [\r\n              { query: GET_TREATMENTS },\r\n              { query: GET_TREATMENTS_DOAGNOSIS },\r\n            ],\r\n          });\r\n          alert(\"บันทึกข้อมูลสำเร็จ\");\r\n          navigate(\r\n            `/app/patients/detail/${defaultdata.treatmentById.patientId}`\r\n          );\r\n        } catch (err) {\r\n          console.log(err);\r\n          alert(\"เกิดข้อผิดพลาด\" + err.message);\r\n        }\r\n      }\r\n      if (form === \"Pain\") {\r\n        const variables = {\r\n          id: defaultdata.treatmentById._id,\r\n          record: {\r\n            patientId: defaultdata.treatmentById.patientId,\r\n            userId: \"6062eaf88849824480e01a4f\",\r\n            weight: value.weight,\r\n            height: value.height,\r\n            bloodPressure: value.bloodPressure,\r\n            pulseRate: value.pulseRate,\r\n            tempurature: value.tempurature,\r\n            respiratoryRate: value.respiratoryRate,\r\n            bmi: value.bmi,\r\n            oxygenSaturation: value.oxygenSaturation,\r\n            medicalCertificate: medicerti,\r\n            status: status,\r\n            physicalExamination: value.physicalExamination,\r\n            acheArea: value.acheArea,\r\n            acheDate: value.acheDate,\r\n            painScore: value.painScore,\r\n            acheDetail: value.acheDetail,\r\n            trigger: value.trigger,\r\n            crackDetail: value.crackDetail,\r\n          },\r\n        };\r\n        try {\r\n          await updatePainForm({\r\n            variables,\r\n            refetchQueries: [\r\n              { query: GET_TREATMENTS },\r\n              { query: GET_TREATMENTS_DOAGNOSIS },\r\n            ],\r\n          });\r\n          alert(\"บันทึกข้อมูลสำเร็จ\");\r\n          navigate(\r\n            `/app/patients/detail/${defaultdata.treatmentById.patientId}`\r\n          );\r\n        } catch (err) {\r\n          console.log(err);\r\n          alert(\"เกิดข้อผิดพลาด\" + err.message);\r\n        }\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n    [\r\n      addGeneralForm,\r\n      addSkinForm,\r\n      status,\r\n      form,\r\n      conAccident,\r\n      addEyesForm,\r\n      addFeverForm,\r\n      addAccidentForm,\r\n      addConAccidentForm,\r\n      addDiarrheaForm,\r\n      addPainForm,\r\n    ]\r\n  );\r\n  const onSubmitDiagnosis = useCallback(\r\n    async (value) => {\r\n        const variables = {\r\n            record: {\r\n              userId: \"6062eaf88849824480e01a4f\",\r\n              treatmentId: defaultdata.treatmentById._id,\r\n              detail: value.detail,\r\n              advice: value.advice,\r\n              followUpDate : value.followUpDate,\r\n              followUpDetail : value.followUpDetail\r\n            }\r\n        }\r\n        try {\r\n          // refetchQueries: [{ query: GET_PATIENTS }]\r\n            await addDiagnosis({ variables })\r\n            alert('บันทึกข้อมูลสำเร็จ')\r\n            // navigate(`/app/patients`)\r\n        } catch (err) {\r\n            console.log(err)\r\n            alert('เกิดข้อผิดพลาด' + err.message)\r\n        }\r\n    },\r\n    []\r\n)\r\n  const onSubmit = mode === \"update\" ? onSubmitUpdate : mode ==='diagnosis' ? onSubmitDiagnosis : onSubmitCreate;\r\n  return (\r\n    <React.Fragment>\r\n      <Form\r\n        onSubmit={onSubmit}\r\n        render={({ handleSubmit, submitting }) => (\r\n          <form\r\n            className={classes.root}\r\n            noValidate\r\n            autoComplete=\"true\"\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                {mode === \"update\" ? (\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"weight\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"น้ำหนัก\"\r\n                    variant=\"outlined\"\r\n                    style={{ width: \"100%\" }}\r\n                    parse={normalizeweight}\r\n                    initialValue={defaultdata.treatmentById.weight}\r\n                  />\r\n                ) : mode === \"diagnosis\" ? (\r\n                  <MuiTextField\r\n                    id=\"standard-read-only-input\"\r\n                    label=\"น้ำหนัก\"\r\n                    defaultValue={defaultdata.treatmentById.weight}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                ) : (\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"weight\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"น้ำหนัก\"\r\n                    variant=\"outlined\"\r\n                    style={{ width: \"100%\" }}\r\n                    parse={normalizeweight}\r\n                  />\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {mode === \"update\" ? (\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"height\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"ส่วนสูง\"\r\n                    variant=\"outlined\"\r\n                    style={{ width: \"100%\" }}\r\n                    parse={normalizeheight}\r\n                    initialValue={defaultdata.treatmentById.height}\r\n                  />\r\n                ) : mode === \"diagnosis\" ? (\r\n                  <MuiTextField\r\n                    id=\"standard-read-only-input\"\r\n                    label=\"ส่วนสูง\"\r\n                    defaultValue={defaultdata.treatmentById.height}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                ) : (\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"height\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"ส่วนสูง\"\r\n                    variant=\"outlined\"\r\n                    style={{ width: \"100%\" }}\r\n                    parse={normalizeheight}\r\n                  />\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {mode === \"update\" ? (\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"bloodPressure\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"ความดันโลหิต\"\r\n                    variant=\"outlined\"\r\n                    style={{ width: \"100%\" }}\r\n                    parse={normalizebloodpressure}\r\n                    initialValue={defaultdata.treatmentById.bloodPressure}\r\n                  />\r\n                ) : mode === \"diagnosis\" ? (\r\n                  <MuiTextField\r\n                    id=\"standard-read-only-input\"\r\n                    label=\"ความดันโลหิต\"\r\n                    defaultValue={defaultdata.treatmentById.bloodPressure}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                ) : (\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"bloodPressure\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"ความดันโลหิต\"\r\n                    variant=\"outlined\"\r\n                    style={{ width: \"100%\" }}\r\n                    parse={normalizebloodpressure}\r\n                  />\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {mode === \"update\" ? (\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"pulseRate\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"อัตราชีพจร\"\r\n                    variant=\"outlined\"\r\n                    style={{ width: \"100%\" }}\r\n                    parse={normalizepulserate}\r\n                    initialValue={defaultdata.treatmentById.pulseRate}\r\n                  />\r\n                ) : mode === \"diagnosis\" ? (\r\n                  <MuiTextField\r\n                    id=\"standard-read-only-input\"\r\n                    label=\"อัตราชีพจร\"\r\n                    defaultValue={defaultdata.treatmentById.pulseRate}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                ) : (\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"pulseRate\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"อัตราชีพจร\"\r\n                    variant=\"outlined\"\r\n                    style={{ width: \"100%\" }}\r\n                    parse={normalizepulserate}\r\n                  />\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {mode === \"update\" ? (\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"tempurature\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"อุณหภูมิร่างกาย\"\r\n                    variant=\"outlined\"\r\n                    style={{ width: \"100%\" }}\r\n                    parse={normalizetempuraturet}\r\n                    initialValue={defaultdata.treatmentById.tempurature}\r\n                  />\r\n                ) : mode === \"diagnosis\" ? (\r\n                  <MuiTextField\r\n                    id=\"standard-read-only-input\"\r\n                    label=\"อุณหภูมิร่างกาย\"\r\n                    defaultValue={defaultdata.treatmentById.tempurature}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                ) : (\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"tempurature\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"อุณหภูมิร่างกาย\"\r\n                    variant=\"outlined\"\r\n                    style={{ width: \"100%\" }}\r\n                    parse={normalizetempuraturet}\r\n                  />\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {mode === \"update\" ? (\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"respiratoryRate\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"อัตราการหายใจ\"\r\n                    variant=\"outlined\"\r\n                    style={{ width: \"100%\" }}\r\n                    parse={normalizerespiratoryrate}\r\n                    initialValue={defaultdata.treatmentById.respiratoryRate}\r\n                  />\r\n                ) : mode === \"diagnosis\" ? (\r\n                  <MuiTextField\r\n                    id=\"standard-read-only-input\"\r\n                    label=\"อัตราการหายใจ\"\r\n                    defaultValue={defaultdata.treatmentById.respiratoryRate}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                ) : (\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"respiratoryRate\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"อัตราการหายใจ\"\r\n                    variant=\"outlined\"\r\n                    style={{ width: \"100%\" }}\r\n                    parse={normalizerespiratoryrate}\r\n                  />\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {mode === \"update\" ? (\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"bmi\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"ดัชนีมวลกาย\"\r\n                    variant=\"outlined\"\r\n                    style={{ width: \"100%\" }}\r\n                    parse={normalizebmi}\r\n                    initialValue={defaultdata.treatmentById.bmi}\r\n                  />\r\n                ) : mode === \"diagnosis\" ? (\r\n                  <MuiTextField\r\n                    id=\"standard-read-only-input\"\r\n                    label=\"ดัชนีมวลกาย\"\r\n                    defaultValue={defaultdata.treatmentById.bmi}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                ) : (\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"bmi\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"ดัชนีมวลกาย\"\r\n                    variant=\"outlined\"\r\n                    style={{ width: \"100%\" }}\r\n                    parse={normalizebmi}\r\n                  />\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {mode === \"update\" ? (\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"oxygenSaturation\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"ออกซิเจนในเลือด\"\r\n                    variant=\"outlined\"\r\n                    style={{ width: \"100%\" }}\r\n                    parse={normalizeoxygensaturation}\r\n                    initialValue={defaultdata.treatmentById.oxygenSaturation}\r\n                  />\r\n                ) : mode === \"diagnosis\" ? (\r\n                  <MuiTextField\r\n                    id=\"standard-read-only-input\"\r\n                    label=\"ออกซิเจนในเลือด\"\r\n                    defaultValue={defaultdata.treatmentById.oxygenSaturation}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                ) : (\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"oxygenSaturation\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"ออกซิเจนในเลือด\"\r\n                    variant=\"outlined\"\r\n                    style={{ width: \"100%\" }}\r\n                    parse={normalizeoxygensaturation}\r\n                  />\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {mode === \"diagnosis\" ? (\r\n                  <FormControl style={{ width: \"100%\" }} variant=\"outlined\">\r\n                    <SelectDiagnosis\r\n                      labelId=\"demo-simple-select-readonly-label\"\r\n                      id=\"demo-simple-select-outlined\"\r\n                      value={status}\r\n                      inputProps={{ readOnly: true }}\r\n                    >\r\n                      <MenuItem value={\"DIAGNOSIS\"}>วินิจฉัย</MenuItem>\r\n                      <MenuItem value={\"MEDICINE\"}>จ่ายยา</MenuItem>\r\n                      <MenuItem value={\"COMPLETE\"}>สำเร็จ</MenuItem>\r\n                    </SelectDiagnosis>\r\n                  </FormControl>\r\n                ) : (\r\n                  <FormControl style={{ width: \"100%\" }} variant=\"outlined\">\r\n                    <SelectDiagnosis\r\n                      labelId=\"demo-simple-select-readonly-label\"\r\n                      id=\"demo-simple-select-outlined\"\r\n                      value={status}\r\n                      onChange={handleChangeStatus}\r\n                    >\r\n                      <MenuItem value={\"DIAGNOSIS\"}>วินิจฉัย</MenuItem>\r\n                      <MenuItem value={\"MEDICINE\"}>จ่ายยา</MenuItem>\r\n                      <MenuItem value={\"COMPLETE\"}>สำเร็จ</MenuItem>\r\n                    </SelectDiagnosis>\r\n                  </FormControl>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {mode === \"diagnosis\" ? (\r\n                  <FormControl style={{ width: \"100%\" }} variant=\"outlined\">\r\n                    <SelectDiagnosis\r\n                      labelId=\"demo-simple-select-readonly-label\"\r\n                      id=\"demo-simple-select-outlined\"\r\n                      value={form}\r\n                      onChange={handleChangeForm}\r\n                      inputProps={{ readOnly: true }}\r\n                    >\r\n                      <MenuItem value={\"General\"}>ทั่วไป</MenuItem>\r\n                      <MenuItem value={\"Skin\"}>ผิวหนัง</MenuItem>\r\n                      <MenuItem value={\"Accident\"}>อุบัติเหตุ</MenuItem>\r\n                      <MenuItem value={\"ContinueAccident\"}>\r\n                        อุบัติเหตุต่อเนื่อง\r\n                      </MenuItem>\r\n                      <MenuItem value={\"Eyes\"}>อาการทางสายตา</MenuItem>\r\n                      <MenuItem value={\"Fever\"}>ไข้</MenuItem>\r\n                      <MenuItem value={\"Diarrhea\"}>ท้องร่วง</MenuItem>\r\n                      <MenuItem value={\"Pain\"}>เจ็บ-ปวด</MenuItem>\r\n                    </SelectDiagnosis>\r\n                  </FormControl>\r\n                ) : (\r\n                  <FormControl style={{ width: \"100%\" }} variant=\"outlined\">\r\n                    <SelectDiagnosis\r\n                      labelId=\"demo-simple-select-readonly-label\"\r\n                      id=\"demo-simple-select-outlined\"\r\n                      value={form}\r\n                      onChange={handleChangeForm}\r\n                    >\r\n                      <MenuItem value={\"General\"}>ทั่วไป</MenuItem>\r\n                      <MenuItem value={\"Skin\"}>ผิวหนัง</MenuItem>\r\n                      <MenuItem value={\"Accident\"}>อุบัติเหตุ</MenuItem>\r\n                      <MenuItem value={\"ContinueAccident\"}>\r\n                        อุบัติเหตุต่อเนื่อง\r\n                      </MenuItem>\r\n                      <MenuItem value={\"Eyes\"}>อาการทางสายตา</MenuItem>\r\n                      <MenuItem value={\"Fever\"}>ไข้</MenuItem>\r\n                      <MenuItem value={\"Diarrhea\"}>ท้องร่วง</MenuItem>\r\n                      <MenuItem value={\"Pain\"}>เจ็บ-ปวด</MenuItem>\r\n                    </SelectDiagnosis>\r\n                  </FormControl>\r\n                )}\r\n              </Grid>\r\n              <Grid container={\"true\"} item sx={12} spacing={2}>\r\n                {form === \"General\" ? (\r\n                  <GeneralForm mode={mode} defaultdata={defaultdata} />\r\n                ) : form === \"Eyes\" ? (\r\n                  <EyesForm mode={mode} defaultdata={defaultdata} />\r\n                ) : form === \"Skin\" ? (\r\n                  <SkinForm mode={mode} defaultdata={defaultdata} />\r\n                ) : form === \"Accident\" ? (\r\n                  <AccidentForm mode={mode} defaultdata={defaultdata} />\r\n                ) : form === \"ContinueAccident\" ? (\r\n                  <ConAccidentForm\r\n                    handleChangeAccident={handleChangeAccident}\r\n                    mode={mode}\r\n                    defaultdata={defaultdata}\r\n                    conAccident={conAccident}\r\n                  />\r\n                ) : form === \"Fever\" ? (\r\n                  <FeverForm mode={mode} defaultdata={defaultdata} />\r\n                ) : form === \"Diarrhea\" ? (\r\n                  <DiarrheaForm mode={mode} defaultdata={defaultdata} />\r\n                ) : form === \"Pain\" ? (\r\n                  <PainForm mode={mode} defaultdata={defaultdata} />\r\n                ) : null}\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                {mode === \"update\" ? (\r\n                  <FormControlLabel\r\n                    label=\"ต้องการใบรับรองแพทย์\"\r\n                    control={\r\n                      <Field\r\n                        name=\"medicalCertificate\"\r\n                        component={Checkbox}\r\n                        type=\"checkbox\"\r\n                        initialValue={\r\n                          defaultdata.treatmentById.medicalCertificate\r\n                        }\r\n                      />\r\n                    }\r\n                  />\r\n                ) : mode === \"diagnosis\" ? (\r\n                  <FormControlLabel\r\n                    disabled\r\n                    control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                    checked={defaultdata.treatmentById.medicalCertificate}\r\n                    label=\"ต้องการใบรับรองแพทย์\"\r\n                  />\r\n                ) : (\r\n                  <FormControlLabel\r\n                    label=\"ต้องการใบรับรองแพทย์\"\r\n                    control={\r\n                      <Field\r\n                        name=\"medicalCertificate\"\r\n                        component={Checkbox}\r\n                        type=\"checkbox\"\r\n                      />\r\n                    }\r\n                  />\r\n                )}\r\n              </Grid>\r\n              <Grid container={\"true\"} item sx={12} spacing={2}>\r\n                {mode === \"diagnosis\" ? <DiagnosisForm /> : null}\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                style={{ marginTop: 16, textAlign: \"center\", width: \"100%\" }}\r\n              >\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  disabled={submitting}\r\n                >\r\n                  บันทึกข้อมูล\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        )}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default TreatmentForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Patients\\GraphQL\\Querie.js",[],"D:\\CTHS_TOEI\\src\\pages\\Treatment\\GraphQL\\Querie.js",[],"D:\\CTHS_TOEI\\src\\components\\Navbar\\Sidebar.js",["282","283","284"],"D:\\CTHS_TOEI\\src\\pages\\Treatment\\PainForm.js",[],"D:\\CTHS_TOEI\\src\\pages\\Treatment\\Diarrhea.js",["285","286","287"],"import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControlLabel,\r\n  Checkbox as CheckboxDianosis,\r\n  TextField as MuiTextField,\r\n} from \"@material-ui/core\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField, Checkbox, Radio, Select } from \"final-form-material-ui\";\r\n\r\nconst DiarrheaForm = (props) => {\r\n  const { mode, defaultdata } = props;\r\n  const normalizeAmountdiarrhea = (value) => {\r\n    if (!value) return value;\r\n    const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n    let number = parseFloat(onlyNums);\r\n    return number;\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"diarrheaAmount\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"จำนวนครั้งในการถ่าย\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            parse={normalizeAmountdiarrhea}\r\n            initialValue={defaultdata.treatmentById.diarrheaAmount}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"จำนวนครั้งในการถ่าย\"\r\n            defaultValue={defaultdata.treatmentById.diarrheaAmount}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"diarrheaAmount\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"จำนวนครั้งในการถ่าย\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            parse={normalizeAmountdiarrhea}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"diarrheaDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ลักษณะอุจจาระ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            initialValue={defaultdata.treatmentById.diarrheaDetail}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"ลักษณะอุจจาระ\"\r\n            defaultValue={defaultdata.treatmentById.diarrheaDetail}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"diarrheaDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ลักษณะอุจจาระ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"stomachache\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ลักษณะการปวดท้อง\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            initialValue={defaultdata.treatmentById.stomachache}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"ลักษณะการปวดท้อง\"\r\n            defaultValue={defaultdata.treatmentById.stomachache}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"stomachache\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ลักษณะการปวดท้อง\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"bowelSound\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"bowel sound\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            initialValue={defaultdata.treatmentById.bowelSound}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"bowelSound\"\r\n            defaultValue={defaultdata.treatmentById.bowelSound}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"bowelSound\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"bowel sound\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={12} align=\"center\">\r\n        {mode === \"update\" ? (\r\n          <React.Fragment>\r\n            <FormControlLabel\r\n              label=\"คลื่นไส้/อาเจียน\"\r\n              control={\r\n                <Field\r\n                  name=\"isVomit\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isVomit}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"อุจาระมีมูลเลือด\"\r\n              control={\r\n                <Field\r\n                  name=\"isFluxStool\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isFluxStool}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีไข้\"\r\n              control={\r\n                <Field\r\n                  name=\"isFever\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isFever}\r\n                />\r\n              }\r\n            />\r\n          </React.Fragment>\r\n        ) : mode === \"diagnosis\" ? (\r\n          <React.Fragment>\r\n            <FormControlLabel\r\n              disabled\r\n              control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n              checked={defaultdata.treatmentById.isVomit}\r\n              label=\"คลื่นไส้/อาเจียน\"\r\n            />\r\n            <FormControlLabel\r\n              disabled\r\n              control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n              checked={defaultdata.treatmentById.isFluxStool}\r\n              label=\"อุจาระมีมูลเลือด\"\r\n            />\r\n            <FormControlLabel\r\n              disabled\r\n              control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n              checked={defaultdata.treatmentById.isFever}\r\n              label=\"มีไข้\"\r\n            />\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            <FormControlLabel\r\n              label=\"คลื่นไส้/อาเจียน\"\r\n              control={\r\n                <Field name=\"isVomit\" component={Checkbox} type=\"checkbox\" />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"อุจาระมีมูลเลือด\"\r\n              control={\r\n                <Field\r\n                  name=\"isFluxStool\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีไข้\"\r\n              control={\r\n                <Field name=\"isFever\" component={Checkbox} type=\"checkbox\" />\r\n              }\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={12}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"physicalExamination\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"การตรวจสอบทางกายภาพ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            initialValue={defaultdata.treatmentById.physicalExamination}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"การตรวจสอบทางกายภาพ\"\r\n            defaultValue={defaultdata.treatmentById.physicalExamination}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"physicalExamination\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"การตรวจสอบทางกายภาพ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default DiarrheaForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\FeverForm.js",["288","289","290"],"import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControlLabel,\r\n  Checkbox as CheckboxDianosis,\r\n  TextField as MuiTextField,\r\n} from \"@material-ui/core\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField, Checkbox, Radio, Select } from \"final-form-material-ui\";\r\n\r\nconst FeverForm = (props) => {\r\n  const { mode, defaultdata } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container={\"true\"} item sx={12} spacing={2}>\r\n        <Grid item={\"true\"} xs={6} direction=\"column\">\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"ไข้\"\r\n                control={\r\n                  <Field\r\n                    name=\"isFever\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isFever}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isFever}\r\n                label=\"ไข้\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"ไข้\"\r\n                control={\r\n                  <Field name=\"isFever\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"ไอ\"\r\n                control={\r\n                  <Field\r\n                    name=\"isCough\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isCough}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isCough}\r\n                label=\"ไอ\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"ไอ\"\r\n                control={\r\n                  <Field name=\"isCough\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"เสมหะ\"\r\n                control={\r\n                  <Field\r\n                    name=\"isPhlegm\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isPhlegm}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isPhlegm}\r\n                label=\"เสมหะ\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"เสมหะ\"\r\n                control={\r\n                  <Field name=\"isPhlegm\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"น้ำมูก\"\r\n                control={\r\n                  <Field\r\n                    name=\"isSnot\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isSnot}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isSnot}\r\n                label=\"น้ำมูก\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"น้ำมูก\"\r\n                control={\r\n                  <Field name=\"isSnot\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"ปวดศีรษะ\"\r\n                control={\r\n                  <Field\r\n                    name=\"isHeadache\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isHeadache}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isHeadache}\r\n                label=\"ปวดศีรษะ\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"ปวดศีรษะ\"\r\n                control={\r\n                  <Field\r\n                    name=\"isHeadache\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"คัดจมูก\"\r\n                control={\r\n                  <Field\r\n                    name=\"isStuffy\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isStuffy}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isStuffy}\r\n                label=\"คัดจมูก\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"คัดจมูก\"\r\n                control={\r\n                  <Field name=\"isStuffy\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item={\"true\"} xs={6}>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"เบื่ออาหาร\"\r\n                control={\r\n                  <Field\r\n                    name=\"isAnorexia\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isAnorexia}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isAnorexia}\r\n                label=\"เบื่ออาหาร\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"เบื่ออาหาร\"\r\n                control={\r\n                  <Field\r\n                    name=\"isAnorexia\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"เจ็บคอ\"\r\n                control={\r\n                  <Field\r\n                    name=\"isSoreThroat\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isSoreThroat}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isSoreThroat}\r\n                label=\"เจ็บคอ\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"เจ็บคอ\"\r\n                control={\r\n                  <Field\r\n                    name=\"isSoreThroat\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"คันตา\"\r\n                control={\r\n                  <Field\r\n                    name=\"isEyeItching\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isEyeItching}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isEyeItching}\r\n                label=\"คันตา\"\r\n              />\r\n            ) :  (\r\n              <FormControlLabel\r\n                label=\"คันตา\"\r\n                control={\r\n                  <Field\r\n                    name=\"isEyeItching\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"Injected pharynx\"\r\n                control={\r\n                  <Field\r\n                    name=\"isInjectedPharynx\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isInjectedPharynx}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isInjectedPharynx}\r\n                label=\"Injected pharynx\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"Injected pharynx\"\r\n                control={\r\n                  <Field\r\n                    name=\"isInjectedPharynx\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"Exudates\"\r\n                control={\r\n                  <Field\r\n                    name=\"isExudates\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isExudates}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isExudates}\r\n                label=\"Exudates\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"Exudates\"\r\n                control={\r\n                  <Field\r\n                    name=\"isExudates\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"Lungs \"\r\n                control={\r\n                  <Field\r\n                    name=\"isLungClear\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isLungClear}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isLungClear}\r\n                label=\"Lungs\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"Lungs \"\r\n                control={\r\n                  <Field\r\n                    name=\"isLungClear\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item={\"true\"} xs={12}>\r\n          {mode === \"update\" ? (\r\n            <Field\r\n              fullWidth\r\n              required\r\n              name=\"physicalExamination\"\r\n              component={TextField}\r\n              type=\"text\"\r\n              label=\"การตรวจสอบทางกายภาพ\"\r\n              variant=\"outlined\"\r\n              style={{ width: \"100%\" }}\r\n              initialValue={defaultdata.treatmentById.physicalExamination}\r\n            />\r\n          ) : mode === \"diagnosis\" ? (\r\n            <MuiTextField\r\n              id=\"standard-read-only-input\"\r\n              label=\"การตรวจสอบทางกายภาพ\"\r\n              defaultValue={defaultdata.treatmentById.physicalExamination}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          ) : (\r\n            <Field\r\n              fullWidth\r\n              required\r\n              name=\"physicalExamination\"\r\n              component={TextField}\r\n              type=\"text\"\r\n              label=\"การตรวจสอบทางกายภาพ\"\r\n              variant=\"outlined\"\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default FeverForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\ConAccidentForm.js",["291","292","293","294","295","296","297"],"import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControlLabel,\r\n  InputBase,\r\n  FormControl,\r\n  InputLabel,\r\n  NativeSelect,\r\n  Checkbox as CheckboxDianosis,\r\n  TextField as MuiTextField,\r\n  MenuItem,\r\n  Select as SelectDiagnosis,\r\n} from \"@material-ui/core\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField, Checkbox, Radio, Select } from \"final-form-material-ui\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"100%\",\r\n    padding: \"10px 26px 10px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      borderRadius: 4,\r\n      borderColor: \"#80bdff\",\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst ConAccidentForm = (props) => {\r\n  const { mode, defaultdata, conAccident } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"moreDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ลักษณะบาดเเผล\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={3}\r\n            initialValue={defaultdata.treatmentById.moreDetail}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"ลักษณะบาดเเผล\"\r\n            defaultValue={defaultdata.treatmentById.moreDetail}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            multiline\r\n            rows={3}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"moreDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ลักษณะบาดเเผล\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={3}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"advice\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"คำแนะนำ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={3}\r\n            initialValue={defaultdata.treatmentById.advice}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"คำแนะนำ\"\r\n            defaultValue={defaultdata.treatmentById.advice}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            multiline\r\n            rows={3}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"advice\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"คำแนะนำ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={3}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        {mode === \"diagnosis\" ? (\r\n          <FormControl style={{ width: \"100%\" }} variant=\"outlined\">\r\n            <SelectDiagnosis\r\n              labelId=\"demo-simple-select-readonly-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={conAccident}\r\n              inputProps={{ readOnly: true }}\r\n              name=\"Symthom\"\r\n            >\r\n              <MenuItem value={\"WORSE\"}>แย่ลง</MenuItem>\r\n              <MenuItem value={\"SAME\"}>เท่าเดิม</MenuItem>\r\n              <MenuItem value={\"BETTER\"}>ดีขึ้น</MenuItem>\r\n            </SelectDiagnosis>\r\n          </FormControl>\r\n        ) : (\r\n          <FormControl style={{ width: \"100%\" }} variant=\"outlined\">\r\n            <SelectDiagnosis\r\n              labelId=\"demo-simple-select-readonly-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={conAccident}\r\n              onChange={props.handleChangeAccident}\r\n              name=\"Symthom\"\r\n            >\r\n              <MenuItem value={\"WORSE\"}>แย่ลง</MenuItem>\r\n              <MenuItem value={\"SAME\"}>เท่าเดิม</MenuItem>\r\n              <MenuItem value={\"BETTER\"}>ดีขึ้น</MenuItem>\r\n            </SelectDiagnosis>\r\n          </FormControl>\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <FormControlLabel\r\n            label=\"ผู้ป่วยเบิกประกัน\"\r\n            control={\r\n              <Field\r\n                name=\"isInsurance\"\r\n                component={Checkbox}\r\n                type=\"checkbox\"\r\n                initialValue={defaultdata.treatmentById.isInsurance}\r\n              />\r\n            }\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <FormControlLabel\r\n              disabled\r\n              control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n              checked={defaultdata.treatmentById.isInsurance}\r\n              label=\"ผู้ป่วยเบิกประกัน\"\r\n            />\r\n        ): (\r\n          <FormControlLabel\r\n            label=\"ผู้ป่วยเบิกประกัน\"\r\n            control={\r\n              <Field name=\"isInsurance\" component={Checkbox} type=\"checkbox\" />\r\n            }\r\n          />\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default ConAccidentForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\EyesForm.js",["298","299","300"],"import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControlLabel,\r\n  Checkbox as CheckboxDianosis,\r\n  TextField as MuiTextField,\r\n} from \"@material-ui/core\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField, Checkbox, Radio, Select } from \"final-form-material-ui\";\r\n\r\nconst EyeForm = (props) => {\r\n  const { mode, defaultdata } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container={\"true\"} item sx={12} spacing={2}>\r\n        <Grid item={\"true\"} xs={6} direction=\"column\">\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"ตาซ้าย\"\r\n                control={\r\n                  <Field\r\n                    name=\"leftEye\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.leftEye}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.leftEye}\r\n                label=\"ตาซ้าย\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"ตาซ้าย\"\r\n                control={\r\n                  <Field name=\"leftEye\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"ตาขวา\"\r\n                control={\r\n                  <Field\r\n                    name=\"rightEye\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.rightEye}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.rightEye}\r\n                label=\"ตาขวา\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"ตาขวา\"\r\n                control={\r\n                  <Field name=\"rightEye\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"มีอาการปวด\"\r\n                control={\r\n                  <Field\r\n                    name=\"isPain\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isPain}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isPain}\r\n                label=\"มีอาการปวด\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"มีอาการปวด\"\r\n                control={\r\n                  <Field name=\"isPain\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"มีอาการคัน\"\r\n                control={\r\n                  <Field\r\n                    name=\"isItching\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isItching}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isItching}\r\n                label=\"มีอาการคัน\"\r\n              />\r\n            ) :  (\r\n              <FormControlLabel\r\n                label=\"มีอาการคัน\"\r\n                control={\r\n                  <Field\r\n                    name=\"isItching\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"เป็นโรคตาแดง\"\r\n                control={\r\n                  <Field\r\n                    name=\"isConjunctivitis\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isConjunctivitis}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isConjunctivitis}\r\n                label=\"เป็นโรคตาแดง\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"เป็นโรคตาแดง\"\r\n                control={\r\n                  <Field\r\n                    name=\"isConjunctivitis\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"มีอาการเจ็บ\"\r\n                control={\r\n                  <Field\r\n                    name=\"isSore\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isSore}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isSore}\r\n                label=\"มีอาการเจ็บ\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"มีอาการเจ็บ\"\r\n                control={\r\n                  <Field name=\"isSore\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === 'update' ? (\r\n              <FormControlLabel\r\n              label=\"มีอาการระคายเคือง\"\r\n              control={\r\n                <Field\r\n                  name=\"isIrritation\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isIrritation}\r\n                />\r\n              }\r\n            />\r\n            ): mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isIrritation}\r\n                label=\"มีอาการระคายเคือง\"\r\n              />\r\n            ) :(\r\n              <FormControlLabel\r\n              label=\"มีอาการระคายเคือง\"\r\n              control={\r\n                <Field\r\n                  name=\"isIrritation\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                />\r\n              }\r\n            />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n\r\n\r\n        <Grid item={\"true\"} xs={6}>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"มีอาการบวม\"\r\n                control={\r\n                  <Field\r\n                    name=\"isSwelling\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isSwelling}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isSwelling}\r\n                label=\"มีอาการบวม\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"มีอาการบวม\"\r\n                control={\r\n                  <Field\r\n                    name=\"isSwelling\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"น้ำตาไหล\"\r\n                control={\r\n                  <Field\r\n                    name=\"isTear\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isTear}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isTear}\r\n                label=\"น้ำตาไหล\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"น้ำตาไหล\"\r\n                control={\r\n                  <Field name=\"isTear\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"ตาพร่ามัว\"\r\n                control={\r\n                  <Field\r\n                    name=\"isBlurred\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isBlurred}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isBlurred}\r\n                label=\"ตาพร่ามัว\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"ตาพร่ามัว\"\r\n                control={\r\n                  <Field\r\n                    name=\"isBlurred\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"ขี้ตาเยอะ\"\r\n                control={\r\n                  <Field\r\n                    name=\"isGum\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isGum}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isGum}\r\n                label=\"ขี้ตาเยอะ\"\r\n              />\r\n            ) :(\r\n              <FormControlLabel\r\n                label=\"ขี้ตาเยอะ\"\r\n                control={\r\n                  <Field name=\"isGum\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"เป็นหนอง\"\r\n                control={\r\n                  <Field\r\n                    name=\"isPurulent\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isPurulent}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isPurulent}\r\n                label=\"เป็นหนอง\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"เป็นหนอง\"\r\n                control={\r\n                  <Field\r\n                    name=\"isPurulent\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"42%\" }}>\r\n            {mode === \"update\" ? (\r\n              <FormControlLabel\r\n                label=\"สิ่งเเปลกปลอมเข้าดวงตา\"\r\n                control={\r\n                  <Field\r\n                    name=\"isMatter\"\r\n                    component={Checkbox}\r\n                    type=\"checkbox\"\r\n                    initialValue={defaultdata.treatmentById.isMatter}\r\n                  />\r\n                }\r\n              />\r\n            ) : mode === \"diagnosis\" ? (\r\n              <FormControlLabel\r\n                disabled\r\n                control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n                checked={defaultdata.treatmentById.isMatter}\r\n                label=\"สิ่งเเปลกปลอมเข้าดวงตา\"\r\n              />\r\n            ) : (\r\n              <FormControlLabel\r\n                label=\"สิ่งเเปลกปลอมเข้าดวงตา\"\r\n                control={\r\n                  <Field name=\"isMatter\" component={Checkbox} type=\"checkbox\" />\r\n                }\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item={\"true\"} xs={12}>\r\n          {mode === \"update\" ? (\r\n            <Field\r\n              fullWidth\r\n              required\r\n              name=\"physicalExamination\"\r\n              component={TextField}\r\n              type=\"text\"\r\n              label=\"การตรวจสอบทางกายภาพ\"\r\n              variant=\"outlined\"\r\n              style={{ width: \"100%\" }}\r\n              initialValue={defaultdata.treatmentById.physicalExamination}\r\n            />\r\n          ) : mode === \"diagnosis\" ? (\r\n            <MuiTextField\r\n              id=\"standard-read-only-input\"\r\n              label=\"การตรวจสอบทางกายภาพ\"\r\n              defaultValue={defaultdata.treatmentById.physicalExamination}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          ) : (\r\n            <Field\r\n              fullWidth\r\n              required\r\n              name=\"physicalExamination\"\r\n              component={TextField}\r\n              type=\"text\"\r\n              label=\"การตรวจสอบทางกายภาพ\"\r\n              variant=\"outlined\"\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default EyeForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\SkinForm.js",["301","302","303"],"import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControlLabel,\r\n  Checkbox as CheckboxDianosis,\r\n  TextField as MuiTextField,\r\n} from \"@material-ui/core\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField, Checkbox, Radio, Select } from \"final-form-material-ui\";\r\n\r\nconst Rashdatenormalization = (value) => {\r\n  if (!value) return value;\r\n  const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n  let number = parseFloat(onlyNums);\r\n  return number;\r\n};\r\n\r\nconst SkinForm = (props) => {\r\n  const { mode, defaultdata } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"rashArea\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"บริเวณผื่น\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={2}\r\n            initialValue={defaultdata.treatmentById.rashArea}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"บริเวณผื่น\"\r\n            defaultValue={defaultdata.treatmentById.rashArea}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            multiline\r\n            rows={2}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"rashArea\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"บริเวณผื่น\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={2}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"rashDate\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"เป็นมานาน (วัน)\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={2}\r\n            parse={Rashdatenormalization}\r\n            initialValue={defaultdata.treatmentById.rashDate}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"เป็นมานาน (วัน)\"\r\n            defaultValue={defaultdata.treatmentById.rashDate}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            multiline\r\n            rows={2}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"rashDate\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"เป็นมานาน (วัน)\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={2}\r\n            parse={Rashdatenormalization}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"rashDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"สัมผัสโดน\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={2}\r\n            initialValue={defaultdata.treatmentById.rashDetail}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"สัมผัสโดน\"\r\n            defaultValue={defaultdata.treatmentById.rashDetail}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            multiline\r\n            rows={2}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"rashDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"สัมผัสโดน\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={2}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"physicalExamination\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"การตรวจสอบทางกายภาพ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={2}\r\n            initialValue={defaultdata.treatmentById.physicalExamination}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"การตรวจสอบทางกายภาพ\"\r\n            defaultValue={defaultdata.treatmentById.physicalExamination}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            multiline\r\n            rows={2}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"physicalExamination\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"การตรวจสอบทางกายภาพ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={2}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={12} align=\"center\">\r\n        {mode === \"update\" ? (\r\n          <React.Fragment>\r\n            <FormControlLabel\r\n              label=\"มีอาการคัน\"\r\n              control={\r\n                <Field\r\n                  name=\"isItching\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isItching}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีอาการปวด\"\r\n              control={\r\n                <Field\r\n                  name=\"isPain\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isPain}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีอารการแสบ\"\r\n              control={\r\n                <Field\r\n                  name=\"isStinging\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isStinging}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีอาการบวม\"\r\n              control={\r\n                <Field\r\n                  name=\"isSwelling\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isSwelling}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีไข้\"\r\n              control={\r\n                <Field\r\n                  name=\"isFever\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isFever}\r\n                />\r\n              }\r\n            />\r\n          </React.Fragment>\r\n        ) \r\n        //sssssssssssssssssssssssssss\r\n        \r\n        : mode === \"diagnosis\" ? (\r\n          <React.Fragment>\r\n            <FormControlLabel\r\n              disabled\r\n              control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n              checked={defaultdata.treatmentById.isItching}\r\n              label=\"มีอาการคัน\"\r\n            />\r\n            <FormControlLabel\r\n              disabled\r\n              control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n              checked={defaultdata.treatmentById.isPain}\r\n              label=\"มีอาการปวด\"\r\n            />\r\n            <FormControlLabel\r\n              disabled\r\n              control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n              checked={defaultdata.treatmentById.isStinging}\r\n              label=\"มีอารการแสบ\"\r\n            />\r\n            <FormControlLabel\r\n              disabled\r\n              control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n              checked={defaultdata.treatmentById.isSwelling}\r\n              label=\"มีอารการบวม\"\r\n            />\r\n            <FormControlLabel\r\n              disabled\r\n              control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n              checked={defaultdata.treatmentById.isFever}\r\n              label=\"มีอารการไข้\"\r\n            />\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            <FormControlLabel\r\n              label=\"มีอาการคัน\"\r\n              control={\r\n                <Field name=\"isItching\" component={Checkbox} type=\"checkbox\" />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีอาการปวด\"\r\n              control={\r\n                <Field name=\"isPain\" component={Checkbox} type=\"checkbox\" />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีอารการแสบ\"\r\n              control={\r\n                <Field name=\"isStinging\" component={Checkbox} type=\"checkbox\" />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีอาการบวม\"\r\n              control={\r\n                <Field name=\"isSwelling\" component={Checkbox} type=\"checkbox\" />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"มีไข้\"\r\n              control={\r\n                <Field name=\"isFever\" component={Checkbox} type=\"checkbox\" />\r\n              }\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default SkinForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\AccidentForm.js",["304","305","306"],"import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControlLabel,\r\n  TextField as MuiTextField,\r\n  Checkbox as CheckboxDianosis,\r\n} from \"@material-ui/core\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField, Checkbox, Radio, Select } from \"final-form-material-ui\";\r\nimport moment from \"moment\";\r\n\r\nconst AccidentForm = (props) => {\r\n  const { mode, defaultdata } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item={\"true\"} xs={12}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"woundArea\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"บาดเเผลบริเวณ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n            initialValue={defaultdata.treatmentById.woundArea}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"อาการสำคัญ\"\r\n            defaultValue={defaultdata.treatmentById.woundArea}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"woundArea\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"บาดเเผลบริเวณ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={12}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"woundLocation\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"สถานที่เกิดเหตุ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n            initialValue={defaultdata.treatmentById.woundLocation}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"สถานที่เกิดเหตุ\"\r\n            defaultValue={defaultdata.treatmentById.woundLocation}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"woundLocation\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"สถานที่เกิดเหตุ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={12}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            id=\"date\"\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"วันที่เกิดเหตุ\"\r\n            style={{ width: \"100%\" }}\r\n            required={true}\r\n            component={TextField}\r\n            name=\"woundDate\"\r\n            initialValue={`${moment(defaultdata.treatmentById.woundDate).format(\r\n              \"YYYY-MM-DD\"\r\n            )}`}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"วันที่เกิดเหตุ\"\r\n            defaultValue={`${moment(new Date()).format(\"YYYY-MM-DD\")}`}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            id=\"date\"\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"วันที่เกิดเหตุ\"\r\n            style={{ width: \"100%\" }}\r\n            required={true}\r\n            component={TextField}\r\n            name=\"woundDate\"\r\n            defaultValue={`${moment(new Date()).format(\"YYYY-MM-DD\")}`}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={4}>\r\n        {mode === \"update\" ? (\r\n          <FormControlLabel\r\n            label=\"เคยเข้ารับการรักษามาเเล้ว\"\r\n            control={\r\n              <Field\r\n                name=\"isTreatBefore\"\r\n                component={Checkbox}\r\n                type=\"checkbox\"\r\n                initialValue={defaultdata.treatmentById.isTreatBefore}\r\n              />\r\n            }\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <FormControlLabel\r\n            disabled\r\n            control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n            checked={defaultdata.treatmentById.isTreatBefore}\r\n            label=\"เคยเข้ารับการรักษามาเเล้ว\"\r\n          />\r\n        ) : (\r\n          <FormControlLabel\r\n            label=\"เคยเข้ารับการรักษามาเเล้ว\"\r\n            control={\r\n              <Field\r\n                name=\"isTreatBefore\"\r\n                component={Checkbox}\r\n                type=\"checkbox\"\r\n              />\r\n            }\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={4}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"treatBeforeDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ที่\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            initialValue={defaultdata.treatmentById.treatBeforeDetail}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"ที่\"\r\n            defaultValue={defaultdata.treatmentById.treatBeforeDetail}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"treatBeforeDetail\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ที่\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={4}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            id=\"date\"\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"เมื่อวันที่\"\r\n            style={{ width: \"100%\" }}\r\n            required={true}\r\n            component={TextField}\r\n            name=\"treatBeforeDate\"\r\n            defaultValue={`${moment(\r\n              defaultdata.treatmentById.treatBeforeDate\r\n            ).format(\"YYYY-MM-DD\")}`}\r\n          />\r\n        ) : mode === \"diagnosis\" ? (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"เมื่อวันที่\"\r\n            defaultValue={`${moment(\r\n              defaultdata.treatmentById.treatBeforeDate\r\n            ).format(\"YYYY-MM-DD\")}`}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <Field\r\n            id=\"date\"\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"เมื่อวันที่\"\r\n            style={{ width: \"100%\" }}\r\n            required={true}\r\n            component={TextField}\r\n            name=\"treatBeforeDate\"\r\n            defaultValue={`${moment(new Date()).format(\"YYYY-MM-DD\")}`}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={12} align=\"center\">\r\n        {mode === \"update\" ? (\r\n          <React.Fragment>\r\n            <FormControlLabel\r\n              label=\"ผู้ป่วยฉุกเฉิน\"\r\n              control={\r\n                <Field\r\n                  name=\"isEmergency\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isEmergency}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"เบิกประกันอุบัติเหตุ\"\r\n              control={\r\n                <Field\r\n                  name=\"isInsurance\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isInsurance}\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"สวมหมวกันน็อค/คาดเข็มขัด\"\r\n              control={\r\n                <Field\r\n                  name=\"isSafety\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                  initialValue={defaultdata.treatmentById.isSafety}\r\n                />\r\n              }\r\n            />\r\n          </React.Fragment>\r\n        ) : mode === \"diagnosis\" ? (\r\n          <React.Fragment>\r\n            <FormControlLabel\r\n              disabled\r\n              control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n              checked={defaultdata.treatmentById.isEmergency}\r\n              label=\"ผู้ป่วยฉุกเฉิน\"\r\n            />\r\n            <FormControlLabel\r\n              disabled\r\n              control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n              checked={defaultdata.treatmentById.isInsurance}\r\n              label=\"เบิกประกันอุบัติเหตุ\"\r\n            />\r\n            <FormControlLabel\r\n              disabled\r\n              control={<CheckboxDianosis name=\"medicalCertificate\" />}\r\n              checked={defaultdata.treatmentById.isSafety}\r\n              label=\"สวมหมวกันน็อค/คาดเข็มขัด\"\r\n            />\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            <FormControlLabel\r\n              label=\"ผู้ป่วยฉุกเฉิน\"\r\n              control={\r\n                <Field\r\n                  name=\"isEmergency\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"เบิกประกันอุบัติเหตุ\"\r\n              control={\r\n                <Field\r\n                  name=\"isInsurance\"\r\n                  component={Checkbox}\r\n                  type=\"checkbox\"\r\n                />\r\n              }\r\n            />\r\n            <FormControlLabel\r\n              label=\"สวมหมวกันน็อค/คาดเข็มขัด\"\r\n              control={\r\n                <Field name=\"isSafety\" component={Checkbox} type=\"checkbox\" />\r\n              }\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default AccidentForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\GenaralForm.js",["307","308","309","310","311","312"],"import React from \"react\";\r\nimport { Grid, FormControlLabel, Button, TextField as MuiTextField  } from \"@material-ui/core\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField, Checkbox, Radio, Select } from \"final-form-material-ui\";\r\n\r\nconst GeneralForm = (props) => {\r\n  const { mode, defaultdata } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"chiefComplaint\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"อาการสำคัญ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n            initialValue={defaultdata.treatmentById.chiefComplaint}\r\n          />\r\n        ) : mode === \"diagnosis\" ?\r\n        ( \r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"อาการสำคัญ\"\r\n            defaultValue={defaultdata.treatmentById.chiefComplaint}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n          />\r\n        ):\r\n        (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"chiefComplaint\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"อาการสำคัญ\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        {mode === \"update\" ? (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"presentIllness\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ประวัติปัจจุบัน\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n            initialValue={defaultdata.treatmentById.presentIllness}\r\n          />\r\n        ) : mode === \"diagnosis\" ? \r\n        (\r\n          <MuiTextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"ประวัติปัจจุบัน\"\r\n            defaultValue={defaultdata.treatmentById.presentIllness}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n          />\r\n        ):\r\n        (\r\n          <Field\r\n            fullWidth\r\n            required\r\n            name=\"presentIllness\"\r\n            component={TextField}\r\n            type=\"text\"\r\n            label=\"ประวัติปัจจุบัน\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            multiline\r\n            rows={5}\r\n          />\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default GeneralForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Treatment\\GraphQL\\Mutation.js",[],"D:\\CTHS_TOEI\\src\\pages\\Patients\\GraphQL\\Mutation.js",[],"D:\\CTHS_TOEI\\src\\MulitiSelect.jsx",["313"],"import React from \"react\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n};\r\n\r\nexport default ({\r\n  input: { value, name, onChange, ...restInput },\r\n  meta,\r\n  ...rest\r\n}) => (\r\n  <FormControl className={rest.styling}>\r\n    <InputLabel htmlFor=\"select-multiple-chip\">{rest.labelname}</InputLabel>\r\n    <Select\r\n      MenuProps={MenuProps}\r\n      multiple\r\n      displayEmpty\r\n      {...rest}\r\n      name={name}\r\n      inputProps={restInput}\r\n      error={meta.error && meta.touched}\r\n      onChange={onChange}\r\n      value={[...value]}\r\n    />\r\n  </FormControl>\r\n);\r\n","D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Medicine-form.js",["314","315","316","317","318","319","320","321","322","323","324"],"import React, { useCallback, useEffect, useState } from 'react';\r\nimport {\r\n\tGrid,\r\n\tTypography,\r\n\tMenuItem,\r\n\tRadioGroup,\r\n\tFormControlLabel,\r\n\tFormControl,\r\n\tFormLabel,\r\n\tButton,\r\n\tChip,\r\n\tNativeSelect,\r\n\tInputBase,\r\n\tInputLabel,\r\n} from '@material-ui/core';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { TextField, Radio, Select } from 'final-form-material-ui';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_MEDICINE, UPDATE_MEDICINE_BY_ID } from './graphql/Mutation';\r\nimport { GET_MEDICINES } from './graphql/Queries';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t'& .MuiTextField-root': {\r\n\t\t\twidth: '25ch',\r\n\t\t},\r\n\t},\r\n\tformControl: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tminWidth: 120,\r\n\t\tmaxWidth: 300,\r\n\t},\r\n\tchips: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\tchip: {\r\n\t\tmargin: 2,\r\n\t},\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n\troot: {\r\n\t\t'label + &': {\r\n\t\t\tmarginTop: theme.spacing(3),\r\n\t\t},\r\n\t},\r\n\tinput: {\r\n\t\tborderRadius: 4,\r\n\t\tposition: 'relative',\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\tborder: '1px solid #ced4da',\r\n\t\tfontSize: 16,\r\n\t\twidth: '100%',\r\n\t\tpadding: '10px 26px 10px 12px',\r\n\t\ttransition: theme.transitions.create(['border-color', 'box-shadow']),\r\n\t\tfontFamily: [\r\n\t\t\t'-apple-system',\r\n\t\t\t'BlinkMacSystemFont',\r\n\t\t\t'\"Segoe UI\"',\r\n\t\t\t'Roboto',\r\n\t\t\t'\"Helvetica Neue\"',\r\n\t\t\t'Arial',\r\n\t\t\t'sans-serif',\r\n\t\t\t'\"Apple Color Emoji\"',\r\n\t\t\t'\"Segoe UI Emoji\"',\r\n\t\t\t'\"Segoe UI Symbol\"',\r\n\t\t].join(','),\r\n\t\t'&:focus': {\r\n\t\t\tborderRadius: 4,\r\n\t\t\tborderColor: '#80bdff',\r\n\t\t\tboxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n\t\t},\r\n\t},\r\n}))(InputBase);\r\n\r\nconst MedicineForm = (props) => {\r\n\tconst { mode, defaultdata } = props;\r\n\tlet navigate = useNavigate();\r\n\tconst classes = useStyles();\r\n\tconst [metType, setMedType] = useState('');\r\n\r\n\tconst [addMedicine] = useMutation(ADD_MEDICINE);\r\n\tconst [updateMedicine] = useMutation(UPDATE_MEDICINE_BY_ID);\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetMedType(event.target.value);\r\n\t};\r\n\r\n\tconst normalizeAmount = (value) => {\r\n\t\tif (!value) return value;\r\n\t\tconst onlyNums = value.replace(/[^\\d]/g, '');\r\n\t\tlet number = parseFloat(onlyNums);\r\n\t\treturn number;\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (mode === 'update') {\r\n\t\t\tsetMedType(defaultdata.medicineById.medType);\r\n\t\t\tconsole.log(defaultdata.medicineById);\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst validate = values => {\r\n\t\tconst errors = {}\r\n\t\tif (!values.name) {\r\n\t\t\terrors.name = 'Required'\r\n\t\t}\r\n\t\tif (!values.description) {\r\n\t\t\terrors.description = 'Required'\r\n\t\t}\r\n\t\tif (!values.amount) {\r\n\t\t\terrors.amount = 'Required'\r\n\t\t}\r\n\t\tif (!values.unitType) {\r\n\t\t\terrors.unitType = 'Required'\r\n\t\t}\r\n\r\n\t\treturn errors\r\n\t}\r\n\r\n\tconst onSubmitCreate = useCallback(\r\n\t\tasync (value) => {\r\n\t\t\tconsole.log('create ja')\r\n\t\t\tconst variables = {\r\n\t\t\t\trecord: {\r\n\t\t\t\t\tmedType: metType,\r\n\t\t\t\t\tname: value.name,\r\n\t\t\t\t\tdescription: value.description,\r\n\t\t\t\t\tamount: value.amount,\r\n\t\t\t\t\tunitType: value.unitType,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t\ttry {\r\n\t\t\t\tawait addMedicine({ variables, refetchQueries: [{ query: GET_MEDICINES }] });\r\n\t\t\t\tsetMedType('');\r\n\t\t\t\talert('บันทึกข้อมูลสำเร็จ');\r\n\t\t\t\tnavigate(`/app/medicine/drugstore`);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\talert('เกิดข้อผิดพลาด');\r\n\t\t\t}\r\n\t\t},\r\n\t\t[addMedicine, metType]\r\n\t);\r\n\r\n\tconst onSubmitUpdate = useCallback(\r\n\t\tasync (value) => {\r\n\t\t\tconst variables = {\r\n\t\t\t\tid: defaultdata.medicineById._id,\r\n\t\t\t\trecord: {\r\n\t\t\t\t\tmedType: metType,\r\n\t\t\t\t\tname: value.name,\r\n\t\t\t\t\tdescription: value.description,\r\n\t\t\t\t\tamount: value.amount,\r\n\t\t\t\t\tunitType: value.unitType,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t\ttry {\r\n\t\t\t\tawait updateMedicine({ variables, refetchQueries: [{ query: GET_MEDICINES }] });\r\n\t\t\t\tsetMedType('');\r\n\t\t\t\talert('บันทึกข้อมูลสำเร็จ');\r\n\t\t\t\tnavigate(`/app/medicine/drugstore`);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\talert('เกิดข้อผิดพลาด' + metType);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[updateMedicine, metType]\r\n\t);\r\n\tconst onSubmit = mode === 'update' ? onSubmitUpdate : onSubmitCreate;\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Form\r\n\t\t\t\tonSubmit={onSubmit}\r\n\t\t\t\tvalidate={validate}\r\n\t\t\t\trender={({ handleSubmit, submitting }) => (\r\n\t\t\t\t\t<form className={classes.root}  autoComplete=\"true\" onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t{mode === 'update' ? (\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"ชื่อ\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tinitialValue={defaultdata.medicineById.name}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"ชื่อ\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t{mode === 'update' ? (\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"คำอธิบายยา\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tinitialValue={defaultdata.medicineById.description}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"คำอธิบายยา\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t{mode === 'update' ? (\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tname=\"amount\"\r\n\t\t\t\t\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"จำนวน\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tinitialValue={defaultdata.medicineById.amount}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tparse={normalizeAmount}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tname=\"amount\"\r\n\t\t\t\t\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"จำนวน\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tparse={normalizeAmount}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t{mode === 'update' ? (\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tname=\"unitType\"\r\n\t\t\t\t\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"ประเภทหน่วย\"\r\n\t\t\t\t\t\t\t\t\t\tinitialValue={defaultdata.medicineById.unitType}\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tname=\"unitType\"\r\n\t\t\t\t\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"ประเภทหน่วย\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t{mode === 'update' ? (\r\n\t\t\t\t\t\t\t\t\t<FormControl style={{ width: '100%' }}>\r\n\t\t\t\t\t\t\t\t\t\t<InputLabel id=\"demo-mutiple-name-label\">ประเภท</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t<NativeSelect\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"demo-customized-select-native\"\r\n\t\t\t\t\t\t\t\t\t\t\tinput={<BootstrapInput />}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={metType}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<option aria-label=\"None\" value=\" \" />\r\n\t\t\t\t\t\t\t\t\t\t\t<option value={'MEDICINE'}>ยา</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value={'SUPPLY'}>เวชภัณฑ์</option>\r\n\t\t\t\t\t\t\t\t\t\t</NativeSelect>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<FormControl style={{ width: '100%' }}>\r\n\t\t\t\t\t\t\t\t\t\t<InputLabel id=\"demo-mutiple-name-label\">ประเภท</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t<NativeSelect\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"demo-customized-select-native\"\r\n\t\t\t\t\t\t\t\t\t\t\tinput={<BootstrapInput />}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={metType}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<option aria-label=\"None\" value=\" \" />\r\n\t\t\t\t\t\t\t\t\t\t\t<option value={'MEDICINE'}>ยา</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value={'SUPPLY'}>เวชภัณฑ์</option>\r\n\t\t\t\t\t\t\t\t\t\t</NativeSelect>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12} style={{ marginTop: 16, textAlign: 'center', width: '100%' }}>\r\n\t\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={submitting}>\r\n\t\t\t\t\t\t\t\t\tบันทึกข้อมูล\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\nexport default MedicineForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Admins\\GraphQL\\Querie.js",[],"D:\\CTHS_TOEI\\src\\pages\\Admins\\User-form.js",["325","326","327"],"import React, { useCallback, useEffect } from 'react'\r\nimport {\r\n    Grid,\r\n    FormControl,\r\n    NativeSelect,\r\n    InputBase,\r\n    InputLabel,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { TextField } from 'final-form-material-ui';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER, UPDATE_USER_BY_ID} from './GraphQL/Mutation'\r\nimport { GET_USERS } from './GraphQL/Querie'\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n    root: {\r\n        'label + &': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    input: {\r\n        borderRadius: 4,\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        width: \"100%\",\r\n        padding: '10px 26px 10px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n        '&:focus': {\r\n            borderRadius: 4,\r\n            borderColor: '#80bdff',\r\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n        },\r\n    },\r\n}))(InputBase);\r\n\r\nconst UserForm = (props) => {\r\n    \r\n    const {mode, defaultdata} = props\r\n    \r\n    let navigate = useNavigate();\r\n    const classes = useStyles();\r\n    const [select, setSelect] = React.useState('')\r\n   \r\n    const [addUser] = useMutation(ADD_USER);\r\n    const [updateUser] = useMutation(UPDATE_USER_BY_ID);\r\n    const handleChange = (event) => {\r\n        setSelect(event.target.value);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if(mode === 'update'){\r\n            setSelect(defaultdata.userById.roles)\r\n            console.log(defaultdata.userById)\r\n        }else{\r\n            return null\r\n        }\r\n    }, [])\r\n\r\n    const onSubmitCreate = useCallback(\r\n        async (value) => {\r\n            const variables = {\r\n                record: {\r\n                    username: value.username,\r\n                    email: value.email,\r\n                    firstname: value.firstName,\r\n                    lastname: value.lastName,\r\n                    phone: value.tell,\r\n                    roles: select,\r\n                    address: value.address,\r\n                    password: value.password,\r\n                    isStaff: true\r\n                }\r\n            }\r\n            try {\r\n                await addUser({ variables, refetchQueries: [{ query: GET_USERS }] })\r\n                setSelect('')\r\n                console.log('create')\r\n                alert('บันทึกข้อมูลสำเร็จ')\r\n                navigate(`/app/admin/`)\r\n            } catch (err) {\r\n                console.log(err)\r\n                alert('เกิดข้อผิดพลาด')\r\n            }\r\n        },\r\n        [addUser, select]\r\n    )\r\n    const onSubmitUpdate = useCallback(\r\n        async (value) => {\r\n            const variables = {\r\n                id: defaultdata.userById._id,\r\n                record: {\r\n                    username: value.username,\r\n                    email: value.email,\r\n                    firstname: value.firstName,\r\n                    lastname: value.lastName,\r\n                    phone: value.tell,\r\n                    roles: select,\r\n                    address: value.address,\r\n                    password: value.password,\r\n                    isStaff: true\r\n                }\r\n            }\r\n            try {\r\n                await updateUser({ variables, refetchQueries: [{ query: GET_USERS }] })\r\n                setSelect('')\r\n                alert('บันทึกข้อมูลสำเร็จ')\r\n                navigate(`/app/admin/`)\r\n            } catch (err) {\r\n                console.log(err)\r\n                alert('เกิดข้อผิดพลาด' + select)\r\n            }\r\n        },\r\n        [updateUser, select]\r\n    )\r\n    const onSubmit = mode === 'update' ? onSubmitUpdate : onSubmitCreate\r\n    return (\r\n        <React.Fragment>\r\n            <Form\r\n                onSubmit={onSubmit}\r\n                render={({ handleSubmit, submitting, submitError }) => {\r\n                    return (\r\n                        <form className={classes.root} noValidate autoComplete=\"true\" onSubmit={handleSubmit}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        fullWidth\r\n                                        required\r\n                                        name=\"username\"\r\n                                        component={TextField}\r\n                                        type=\"text\"\r\n                                        label=\"ยูซเซอร์เนม\"\r\n                                        variant=\"outlined\"\r\n                                        initialValue={defaultdata.userById.username}\r\n                                        style={{ width: '100%' }}\r\n                                    />\r\n                                ): (\r\n                                    <Field\r\n                                        fullWidth\r\n                                        required\r\n                                        name=\"username\"\r\n                                        component={TextField}\r\n                                        type=\"text\"\r\n                                        label=\"ยูซเซอร์เนม\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                   null\r\n                                ):(\r\n                                    <Field\r\n                                        name=\"password\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        type=\"password\"\r\n                                        component={TextField}\r\n                                        label=\"รหัส\"\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === \"update\" ? (\r\n                                     <Field\r\n                                        fullWidth\r\n                                        required\r\n                                        name=\"firstName\"\r\n                                        component={TextField}\r\n                                        type=\"text\"\r\n                                        label=\"ชื่อ\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        initialValue={defaultdata.userById.firstname}\r\n                                     />\r\n                                ):(\r\n                                    <Field\r\n                                        fullWidth\r\n                                        required\r\n                                        name=\"firstName\"\r\n                                        component={TextField}\r\n                                        type=\"text\"\r\n                                        label=\"ชื่อ\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === \"update\" ? (\r\n                                    <Field\r\n                                        name=\"lastName\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        component={TextField}\r\n                                        label=\"นามสกุล\"\r\n                                        initialValue={defaultdata.userById.lastname}\r\n                                    />\r\n                                ):(\r\n                                    <Field\r\n                                        name=\"lastName\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        component={TextField}\r\n                                        label=\"นามสกุล\"\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"เบอร์โทร\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"tell\"\r\n                                        component={TextField}\r\n                                        initialValue={defaultdata.userById.phone}\r\n                                    />\r\n                                ):(\r\n                                    <Field\r\n                                        label=\"เบอร์โทร\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"tell\"\r\n                                        component={TextField}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                     <Field\r\n                                        label=\"อีเมล\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"email\"\r\n                                        component={TextField}\r\n                                        initialValue={defaultdata.userById.email}\r\n                                     />\r\n                                ):(\r\n                                    <Field\r\n                                        label=\"อีเมล\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"email\"\r\n                                        component={TextField}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"ที่อยู่\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"address\"\r\n                                        component={TextField}\r\n                                        multiline\r\n                                        rows={4}\r\n                                        initialValue={defaultdata.userById.address}\r\n                                     />\r\n                                ):(\r\n                                    <Field\r\n                                        label=\"ที่อยู่\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"address\"\r\n                                        component={TextField}\r\n                                        multiline\r\n                                        rows={4}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12} >\r\n                                {mode === 'update' ? (\r\n                                    <FormControl style={{ width: \"100%\" }}>\r\n                                        <InputLabel id=\"demo-mutiple-name-label\">หน้าที่</InputLabel>\r\n                                        <NativeSelect\r\n                                            id=\"demo-customized-select-native\"\r\n                                            input={<BootstrapInput />}\r\n                                            value={select}\r\n                                            onChange={handleChange}\r\n                                            required={true}\r\n                                        >\r\n                                             <option aria-label=\"None\" value=\" \" />\r\n                                            <option value={'DOCTOR'}>หมอ</option>\r\n                                            <option value={'NURSE'}>พยาบาล</option>\r\n                                            <option value={'STAFF'}>เจ้าหน้าที่</option>\r\n                                        </NativeSelect>\r\n                                    </FormControl>\r\n                                ):(\r\n                                    <FormControl style={{ width: \"100%\" }}>\r\n                                        <InputLabel id=\"demo-mutiple-name-label\">หน้าที่</InputLabel>\r\n                                        <NativeSelect\r\n                                            id=\"demo-customized-select-native\"\r\n                                            input={<BootstrapInput />}\r\n                                            value={select}\r\n                                            onChange={handleChange}\r\n                                            required={true}\r\n                                        >\r\n                                             <option aria-label=\"None\" value=\" \" />\r\n                                            <option value={'DOCTOR'}>หมอ</option>\r\n                                            <option value={'NURSE'}>พยาบาล</option>\r\n                                            <option value={'STAFF'}>เจ้าหน้าที่</option>\r\n                                        </NativeSelect>\r\n                                    </FormControl>\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12} style={{ marginTop: 16, textAlign: 'center', width: '100%' }}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    disabled={submitting}\r\n                                >\r\n                                    บันทึกข้อมูล\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                    )\r\n                }}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default UserForm\r\n\r\n","D:\\CTHS_TOEI\\src\\pages\\Admins\\GraphQL\\Mutation.js",[],"D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\graphql\\Mutation.js",[],"D:\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\graphql\\Queries.js",[],"D:\\CTHS_TOEI\\src\\pages\\Dianosis\\Dianosis.js",["328","329"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, Grid, Typography, Button } from '@material-ui/core';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { GET_TREATMENTS_DOAGNOSIS } from './GraphQL/Querie'\r\nimport { useQuery } from '@apollo/client';\r\nimport moment from 'moment'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        boxAdmin: {},\r\n        display: 'flex',\r\n        '& div.MuiDataGrid-cell': {\r\n            color: 'white',\r\n        },\r\n        '& div.MuiDataGrid-colCellTitle': {\r\n            color: 'black',\r\n        },\r\n        '& div.MuiToolbar-root': {\r\n            color: 'white',\r\n        },\r\n        '& div.MuiTablePagination-actions': {\r\n            color: 'white',\r\n        },\r\n        '& div.MuiIconButton-label': {\r\n            color: 'white',\r\n        },\r\n        '& div.MuiDataGrid-colCellWrapper': {\r\n            backgroundColor: 'white',\r\n        },\r\n    },\r\n}));\r\n\r\nconst columns = [\r\n    { field: 'id', headerName: 'ID', width: 250, resizable: true },\r\n    {\r\n        field: 'createdAt',\r\n        headerName: 'Date',\r\n        width: 200,\r\n        resizable: true,\r\n    },\r\n    {\r\n        field: 'type',\r\n        headerName: 'Type',\r\n        width: 200,\r\n    },\r\n    {\r\n        field: 'name',\r\n        headerName: 'Name',\r\n        width: 200,\r\n        resizable: true,\r\n    },\r\n    {\r\n        field: 'lastname',\r\n        headerName: 'Lastname',\r\n        width: 200,\r\n        resizable: true,\r\n    },\r\n    {\r\n        field: 'idcardNumber',\r\n        headerName: 'Idcard Number',\r\n        width: 200,\r\n    },\r\n];\r\n\r\nconst Dianosispage = () => {\r\n    const classes = useStyles();\r\n    let navigate = useNavigate();\r\n    const { loading, error, data } = useQuery(GET_TREATMENTS_DOAGNOSIS);\r\n    if (loading) return 'Loading...';\r\n    if (error) return `Error! ${error.message}`;\r\n    return (\r\n        <React.Fragment className={classes.root}>\r\n            <Box className={classes.boxAdmin}>\r\n                <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n                    <Grid item xs={6}>\r\n                        <Typography paragraph style={{ fontWeight: 'bold' }} variant=\"h5\">\r\n                          Diagnosis\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6} align='right'>\r\n                        <Box style={{ alignItems: 'center', justifyContent: 'flex-end' }}>\r\n\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={0} alignItems=\"center\" justify=\"center\" style={{ marginTop: 20 }}>\r\n                    <Grid item xs={12}>\r\n                        <div style={{ height: 500, width: '100%', backgroundColor: 'white' }}>\r\n                            <DataGrid\r\n\t\t\t\t\t\t\t\trows={data.allTreatments.map((item) => ({\r\n                                    id: item._id,\r\n                                    createdAt: moment(new Date(item.createdAt)).format('DD/MM/YYYY'),\r\n                                    name: item.patient.firstname,\r\n                                    lastname: item.patient.lastname,\r\n                                    idcardNumber: item.patient.idcardNumber,\r\n                                    type: item.type\r\n                                }))}\r\n                                columns={columns}\r\n                                pagination\r\n                                pageSize={10}\r\n                                onRowClick={(row) => navigate(`/app/diagnosis/detail/${row.row.id}`)}\r\n\t\t\t\t\t\t\t/>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Dianosispage;\r\n","D:\\CTHS_TOEI\\src\\pages\\Dianosis\\GraphQL\\Querie.js",[],"D:\\CTHS_TOEI\\src\\pages\\Medicine\\Prescription\\GraphQL\\Querie.js",[],"D:\\CTHS_TOEI\\src\\pages\\Dianosis\\Detail.js",["330","331"],"D:\\CTHS_TOEI\\src\\pages\\Dianosis\\Diagnosis-form.js",["332","333","334","335","336","337","338","339","340"],"import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControlLabel,\r\n  Button,\r\n  TextField as MuiTextField,\r\n} from \"@material-ui/core\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField, Checkbox, Radio, Select } from \"final-form-material-ui\";\r\nimport moment from 'moment'\r\n\r\nconst DiagnosisForm = (props) => {\r\n  const { mode, defaultdata } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item={\"true\"} xs={6}>\r\n        <Field\r\n          fullWidth\r\n          required\r\n          name=\"detail\"\r\n          component={TextField}\r\n          type=\"text\"\r\n          label=\"รายละเอียด\"\r\n          variant=\"outlined\"\r\n          style={{ width: \"100%\" }}\r\n          multiline\r\n          rows={5}\r\n        />\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        <Field\r\n          fullWidth\r\n          required\r\n          name=\"advice\"\r\n          component={TextField}\r\n          type=\"text\"\r\n          label=\"คำแนะนำ\"\r\n          variant=\"outlined\"\r\n          style={{ width: \"100%\" }}\r\n          multiline\r\n          rows={5}\r\n        />\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        <Field\r\n          id=\"date\"\r\n          type=\"date\"\r\n          label=\"วันนัดหมอ\"\r\n          variant=\"outlined\"\r\n          style={{ width: \"100%\" }}\r\n          required={true}\r\n          component={TextField}\r\n          name=\"followUpDate\"\r\n          defaultValue={`${moment(new Date()).format(\r\n            \"YYYY-MM-DD\"\r\n          )}`}\r\n        />\r\n      </Grid>\r\n      <Grid item={\"true\"} xs={6}>\r\n        <Field\r\n          fullWidth\r\n          required\r\n          name=\"followUpDetail\"\r\n          component={TextField}\r\n          type=\"text\"\r\n          label=\"รายละเอียดการนัด\"\r\n          variant=\"outlined\"\r\n          style={{ width: \"100%\" }}\r\n          multiline\r\n          rows={5}\r\n        />\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default DiagnosisForm;\r\n","D:\\CTHS_TOEI\\src\\pages\\Dianosis\\GraphQL\\Mutation.js",[],{"ruleId":"341","replacedBy":"342"},{"ruleId":"343","replacedBy":"344"},{"ruleId":"345","severity":1,"message":"346","line":48,"column":11,"nodeType":"347","endLine":48,"endColumn":74},{"ruleId":"348","severity":1,"message":"349","line":1,"column":16,"nodeType":"350","messageId":"351","endLine":1,"endColumn":25},{"ruleId":"348","severity":1,"message":"352","line":1,"column":27,"nodeType":"350","messageId":"351","endLine":1,"endColumn":35},{"ruleId":"348","severity":1,"message":"353","line":3,"column":33,"nodeType":"350","messageId":"351","endLine":3,"endColumn":39},{"ruleId":"348","severity":1,"message":"354","line":4,"column":8,"nodeType":"350","messageId":"351","endLine":4,"endColumn":15},{"ruleId":"348","severity":1,"message":"355","line":5,"column":10,"nodeType":"350","messageId":"351","endLine":5,"endColumn":14},{"ruleId":"348","severity":1,"message":"356","line":10,"column":10,"nodeType":"350","messageId":"351","endLine":10,"endColumn":22},{"ruleId":"348","severity":1,"message":"357","line":6,"column":22,"nodeType":"350","messageId":"351","endLine":6,"endColumn":32},{"ruleId":"348","severity":1,"message":"357","line":12,"column":22,"nodeType":"350","messageId":"351","endLine":12,"endColumn":32},{"ruleId":"348","severity":1,"message":"358","line":14,"column":20,"nodeType":"350","messageId":"351","endLine":14,"endColumn":25},{"ruleId":"348","severity":1,"message":"359","line":19,"column":8,"nodeType":"350","messageId":"351","endLine":19,"endColumn":21},{"ruleId":"348","severity":1,"message":"360","line":20,"column":10,"nodeType":"350","messageId":"351","endLine":20,"endColumn":14},{"ruleId":"348","severity":1,"message":"361","line":20,"column":16,"nodeType":"350","messageId":"351","endLine":20,"endColumn":21},{"ruleId":"345","severity":1,"message":"346","line":70,"column":13,"nodeType":"347","endLine":70,"endColumn":76},{"ruleId":"348","severity":1,"message":"362","line":21,"column":8,"nodeType":"350","messageId":"351","endLine":21,"endColumn":15},{"ruleId":"348","severity":1,"message":"363","line":69,"column":7,"nodeType":"350","messageId":"351","endLine":69,"endColumn":11},{"ruleId":"348","severity":1,"message":"353","line":3,"column":33,"nodeType":"350","messageId":"351","endLine":3,"endColumn":39},{"ruleId":"348","severity":1,"message":"355","line":4,"column":10,"nodeType":"350","messageId":"351","endLine":4,"endColumn":14},{"ruleId":"348","severity":1,"message":"364","line":69,"column":7,"nodeType":"350","messageId":"351","endLine":69,"endColumn":15},{"ruleId":"348","severity":1,"message":"352","line":1,"column":41,"nodeType":"350","messageId":"351","endLine":1,"endColumn":49},{"ruleId":"348","severity":1,"message":"365","line":4,"column":5,"nodeType":"350","messageId":"351","endLine":4,"endColumn":15},{"ruleId":"348","severity":1,"message":"366","line":6,"column":5,"nodeType":"350","messageId":"351","endLine":6,"endColumn":15},{"ruleId":"348","severity":1,"message":"367","line":7,"column":5,"nodeType":"350","messageId":"351","endLine":7,"endColumn":21},{"ruleId":"348","severity":1,"message":"368","line":9,"column":5,"nodeType":"350","messageId":"351","endLine":9,"endColumn":14},{"ruleId":"348","severity":1,"message":"369","line":18,"column":21,"nodeType":"350","messageId":"351","endLine":18,"endColumn":26},{"ruleId":"348","severity":1,"message":"370","line":18,"column":28,"nodeType":"350","messageId":"351","endLine":18,"endColumn":34},{"ruleId":"371","severity":1,"message":"372","line":107,"column":8,"nodeType":"373","endLine":107,"endColumn":10,"suggestions":"374"},{"ruleId":"371","severity":1,"message":"375","line":111,"column":8,"nodeType":"373","endLine":111,"endColumn":10,"suggestions":"376"},{"ruleId":"371","severity":1,"message":"377","line":142,"column":9,"nodeType":"373","endLine":142,"endColumn":29,"suggestions":"378"},{"ruleId":"371","severity":1,"message":"379","line":175,"column":9,"nodeType":"373","endLine":175,"endColumn":60,"suggestions":"380"},{"ruleId":"348","severity":1,"message":"381","line":2,"column":47,"nodeType":"350","messageId":"351","endLine":2,"endColumn":57},{"ruleId":"348","severity":1,"message":"382","line":5,"column":3,"nodeType":"350","messageId":"351","endLine":5,"endColumn":15},{"ruleId":"348","severity":1,"message":"383","line":7,"column":3,"nodeType":"350","messageId":"351","endLine":7,"endColumn":13},{"ruleId":"348","severity":1,"message":"369","line":17,"column":31,"nodeType":"350","messageId":"351","endLine":17,"endColumn":36},{"ruleId":"348","severity":1,"message":"370","line":17,"column":38,"nodeType":"350","messageId":"351","endLine":17,"endColumn":44},{"ruleId":"348","severity":1,"message":"384","line":39,"column":10,"nodeType":"350","messageId":"351","endLine":39,"endColumn":29},{"ruleId":"348","severity":1,"message":"385","line":40,"column":10,"nodeType":"350","messageId":"351","endLine":40,"endColumn":21},{"ruleId":"348","severity":1,"message":"386","line":71,"column":7,"nodeType":"350","messageId":"351","endLine":71,"endColumn":21},{"ruleId":"371","severity":1,"message":"387","line":147,"column":6,"nodeType":"373","endLine":147,"endColumn":8,"suggestions":"388"},{"ruleId":"371","severity":1,"message":"389","line":576,"column":5,"nodeType":"373","endLine":588,"endColumn":6,"suggestions":"390"},{"ruleId":"371","severity":1,"message":"391","line":980,"column":5,"nodeType":"373","endLine":992,"endColumn":6,"suggestions":"392"},{"ruleId":"371","severity":1,"message":"393","line":1016,"column":5,"nodeType":"373","endLine":1016,"endColumn":7,"suggestions":"394"},{"ruleId":"348","severity":1,"message":"352","line":1,"column":28,"nodeType":"350","messageId":"351","endLine":1,"endColumn":36},{"ruleId":"348","severity":1,"message":"395","line":13,"column":18,"nodeType":"350","messageId":"351","endLine":13,"endColumn":34},{"ruleId":"371","severity":1,"message":"396","line":72,"column":5,"nodeType":"373","endLine":72,"endColumn":24,"suggestions":"397"},{"ruleId":"348","severity":1,"message":"360","line":8,"column":10,"nodeType":"350","messageId":"351","endLine":8,"endColumn":14},{"ruleId":"348","severity":1,"message":"369","line":9,"column":31,"nodeType":"350","messageId":"351","endLine":9,"endColumn":36},{"ruleId":"348","severity":1,"message":"370","line":9,"column":38,"nodeType":"350","messageId":"351","endLine":9,"endColumn":44},{"ruleId":"348","severity":1,"message":"360","line":8,"column":10,"nodeType":"350","messageId":"351","endLine":8,"endColumn":14},{"ruleId":"348","severity":1,"message":"369","line":9,"column":31,"nodeType":"350","messageId":"351","endLine":9,"endColumn":36},{"ruleId":"348","severity":1,"message":"370","line":9,"column":38,"nodeType":"350","messageId":"351","endLine":9,"endColumn":44},{"ruleId":"348","severity":1,"message":"383","line":7,"column":3,"nodeType":"350","messageId":"351","endLine":7,"endColumn":13},{"ruleId":"348","severity":1,"message":"382","line":8,"column":3,"nodeType":"350","messageId":"351","endLine":8,"endColumn":15},{"ruleId":"348","severity":1,"message":"360","line":14,"column":10,"nodeType":"350","messageId":"351","endLine":14,"endColumn":14},{"ruleId":"348","severity":1,"message":"369","line":15,"column":31,"nodeType":"350","messageId":"351","endLine":15,"endColumn":36},{"ruleId":"348","severity":1,"message":"370","line":15,"column":38,"nodeType":"350","messageId":"351","endLine":15,"endColumn":44},{"ruleId":"348","severity":1,"message":"398","line":16,"column":10,"nodeType":"350","messageId":"351","endLine":16,"endColumn":20},{"ruleId":"348","severity":1,"message":"386","line":17,"column":7,"nodeType":"350","messageId":"351","endLine":17,"endColumn":21},{"ruleId":"348","severity":1,"message":"360","line":8,"column":10,"nodeType":"350","messageId":"351","endLine":8,"endColumn":14},{"ruleId":"348","severity":1,"message":"369","line":9,"column":31,"nodeType":"350","messageId":"351","endLine":9,"endColumn":36},{"ruleId":"348","severity":1,"message":"370","line":9,"column":38,"nodeType":"350","messageId":"351","endLine":9,"endColumn":44},{"ruleId":"348","severity":1,"message":"360","line":8,"column":10,"nodeType":"350","messageId":"351","endLine":8,"endColumn":14},{"ruleId":"348","severity":1,"message":"369","line":9,"column":31,"nodeType":"350","messageId":"351","endLine":9,"endColumn":36},{"ruleId":"348","severity":1,"message":"370","line":9,"column":38,"nodeType":"350","messageId":"351","endLine":9,"endColumn":44},{"ruleId":"348","severity":1,"message":"360","line":8,"column":10,"nodeType":"350","messageId":"351","endLine":8,"endColumn":14},{"ruleId":"348","severity":1,"message":"369","line":9,"column":31,"nodeType":"350","messageId":"351","endLine":9,"endColumn":36},{"ruleId":"348","severity":1,"message":"370","line":9,"column":38,"nodeType":"350","messageId":"351","endLine":9,"endColumn":44},{"ruleId":"348","severity":1,"message":"367","line":2,"column":16,"nodeType":"350","messageId":"351","endLine":2,"endColumn":32},{"ruleId":"348","severity":1,"message":"353","line":2,"column":34,"nodeType":"350","messageId":"351","endLine":2,"endColumn":40},{"ruleId":"348","severity":1,"message":"360","line":3,"column":10,"nodeType":"350","messageId":"351","endLine":3,"endColumn":14},{"ruleId":"348","severity":1,"message":"399","line":4,"column":21,"nodeType":"350","messageId":"351","endLine":4,"endColumn":29},{"ruleId":"348","severity":1,"message":"369","line":4,"column":31,"nodeType":"350","messageId":"351","endLine":4,"endColumn":36},{"ruleId":"348","severity":1,"message":"370","line":4,"column":38,"nodeType":"350","messageId":"351","endLine":4,"endColumn":44},{"ruleId":"400","severity":1,"message":"401","line":17,"column":1,"nodeType":"402","endLine":36,"endColumn":3},{"ruleId":"348","severity":1,"message":"365","line":4,"column":2,"nodeType":"350","messageId":"351","endLine":4,"endColumn":12},{"ruleId":"348","severity":1,"message":"403","line":5,"column":2,"nodeType":"350","messageId":"351","endLine":5,"endColumn":10},{"ruleId":"348","severity":1,"message":"366","line":6,"column":2,"nodeType":"350","messageId":"351","endLine":6,"endColumn":12},{"ruleId":"348","severity":1,"message":"367","line":7,"column":2,"nodeType":"350","messageId":"351","endLine":7,"endColumn":18},{"ruleId":"348","severity":1,"message":"368","line":9,"column":2,"nodeType":"350","messageId":"351","endLine":9,"endColumn":11},{"ruleId":"348","severity":1,"message":"404","line":11,"column":2,"nodeType":"350","messageId":"351","endLine":11,"endColumn":6},{"ruleId":"348","severity":1,"message":"369","line":18,"column":21,"nodeType":"350","messageId":"351","endLine":18,"endColumn":26},{"ruleId":"348","severity":1,"message":"370","line":18,"column":28,"nodeType":"350","messageId":"351","endLine":18,"endColumn":34},{"ruleId":"371","severity":1,"message":"405","line":106,"column":5,"nodeType":"373","endLine":106,"endColumn":7,"suggestions":"406"},{"ruleId":"371","severity":1,"message":"407","line":148,"column":3,"nodeType":"373","endLine":148,"endColumn":25,"suggestions":"408"},{"ruleId":"371","severity":1,"message":"409","line":173,"column":3,"nodeType":"373","endLine":173,"endColumn":28,"suggestions":"410"},{"ruleId":"371","severity":1,"message":"411","line":83,"column":8,"nodeType":"373","endLine":83,"endColumn":10,"suggestions":"412"},{"ruleId":"371","severity":1,"message":"407","line":111,"column":9,"nodeType":"373","endLine":111,"endColumn":26,"suggestions":"413"},{"ruleId":"371","severity":1,"message":"414","line":139,"column":9,"nodeType":"373","endLine":139,"endColumn":29,"suggestions":"415"},{"ruleId":"348","severity":1,"message":"353","line":3,"column":33,"nodeType":"350","messageId":"351","endLine":3,"endColumn":39},{"ruleId":"348","severity":1,"message":"355","line":4,"column":10,"nodeType":"350","messageId":"351","endLine":4,"endColumn":14},{"ruleId":"348","severity":1,"message":"357","line":12,"column":22,"nodeType":"350","messageId":"351","endLine":12,"endColumn":32},{"ruleId":"348","severity":1,"message":"358","line":14,"column":20,"nodeType":"350","messageId":"351","endLine":14,"endColumn":25},{"ruleId":"348","severity":1,"message":"367","line":4,"column":3,"nodeType":"350","messageId":"351","endLine":4,"endColumn":19},{"ruleId":"348","severity":1,"message":"353","line":5,"column":3,"nodeType":"350","messageId":"351","endLine":5,"endColumn":9},{"ruleId":"348","severity":1,"message":"416","line":6,"column":16,"nodeType":"350","messageId":"351","endLine":6,"endColumn":28},{"ruleId":"348","severity":1,"message":"360","line":8,"column":10,"nodeType":"350","messageId":"351","endLine":8,"endColumn":14},{"ruleId":"348","severity":1,"message":"399","line":9,"column":21,"nodeType":"350","messageId":"351","endLine":9,"endColumn":29},{"ruleId":"348","severity":1,"message":"369","line":9,"column":31,"nodeType":"350","messageId":"351","endLine":9,"endColumn":36},{"ruleId":"348","severity":1,"message":"370","line":9,"column":38,"nodeType":"350","messageId":"351","endLine":9,"endColumn":44},{"ruleId":"348","severity":1,"message":"417","line":13,"column":11,"nodeType":"350","messageId":"351","endLine":13,"endColumn":15},{"ruleId":"348","severity":1,"message":"418","line":13,"column":17,"nodeType":"350","messageId":"351","endLine":13,"endColumn":28},"no-native-reassign",["419"],"no-negated-in-lhs",["420"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Button' is defined but never used.","'AddIcon' is defined but never used.","'Link' is defined but never used.","'isObjectType' is defined but never used.","'withStyles' is defined but never used.","'Query' is defined but never used.","'DiagnosisForm' is defined but never used.","'Form' is defined but never used.","'Field' is defined but never used.","'classes' is assigned a value but never used.","'rows' is assigned a value but never used.","'navigate' is assigned a value but never used.","'Typography' is defined but never used.","'RadioGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'FormLabel' is defined but never used.","'Radio' is defined but never used.","'Select' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'defaultdata.patientById.bloodType', 'defaultdata.patientById.nationality', 'defaultdata.patientById.race', 'defaultdata.patientById.status', and 'mode'. Either include them or remove the dependency array.","ArrayExpression",["421"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["422"],"React Hook useCallback has missing dependencies: 'navigate', 'selectNationality', 'selectRace', and 'status'. Either include them or remove the dependency array.",["423"],"React Hook useCallback has missing dependencies: 'defaultdata.patientById._id', 'navigate', 'status', and 'updatePatient'. Either include them or remove the dependency array.",["424"],"'IconButton' is defined but never used.","'NativeSelect' is defined but never used.","'InputLabel' is defined but never used.","'GET_TREATMENT_BY_ID' is defined but never used.","'GET_PATIENT' is defined but never used.","'BootstrapInput' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'defaultdata.treatmentById.__typename', 'defaultdata.treatmentById.lesion', 'defaultdata.treatmentById.status', and 'mode'. Either include them or remove the dependency array.",["425"],"React Hook useCallback has missing dependencies: 'id' and 'navigate'. Either include them or remove the dependency array.",["426"],"React Hook useCallback has missing dependencies: 'defaultdata.treatmentById._id', 'defaultdata.treatmentById.patientId', 'navigate', 'updateAccidentForm', 'updateConAccidentForm', 'updateDiarrheaForm', 'updateEyesForm', 'updateFeverForm', 'updateGeneralForm', 'updatePainForm', and 'updateSkinForm'. Either include them or remove the dependency array.",["427"],"React Hook useCallback has missing dependencies: 'addDiagnosis' and 'defaultdata.treatmentById._id'. Either include them or remove the dependency array.",["428"],"'HiDocumentReport' is defined but never used.","React Hook useEffect has missing dependencies: 'onMobileClose' and 'openMobile'. Either include them or remove the dependency array. If 'onMobileClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["429"],"'makeStyles' is defined but never used.","'Checkbox' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'MenuItem' is defined but never used.","'Chip' is defined but never used.","React Hook useEffect has missing dependencies: 'defaultdata.medicineById' and 'mode'. Either include them or remove the dependency array.",["430"],"React Hook useCallback has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["431"],"React Hook useCallback has missing dependencies: 'defaultdata.medicineById._id' and 'navigate'. Either include them or remove the dependency array.",["432"],"React Hook useEffect has missing dependencies: 'defaultdata.userById' and 'mode'. Either include them or remove the dependency array.",["433"],["434"],"React Hook useCallback has missing dependencies: 'defaultdata.userById._id' and 'navigate'. Either include them or remove the dependency array.",["435"],"'MuiTextField' is defined but never used.","'mode' is assigned a value but never used.","'defaultdata' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"436","fix":"437"},{"desc":"438","fix":"439"},{"desc":"440","fix":"441"},{"desc":"442","fix":"443"},{"desc":"444","fix":"445"},{"desc":"446","fix":"447"},{"desc":"448","fix":"449"},{"desc":"450","fix":"451"},{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"464","fix":"465"},"Update the dependencies array to be: [defaultdata.patientById.bloodType, defaultdata.patientById.nationality, defaultdata.patientById.race, defaultdata.patientById.status, mode]",{"range":"466","text":"467"},"Update the dependencies array to be: [data]",{"range":"468","text":"469"},"Update the dependencies array to be: [addPatient, navigate, select, selectNationality, selectRace, status]",{"range":"470","text":"471"},"Update the dependencies array to be: [defaultdata.patientById._id, navigate, select, selectNationality, selectRace, status, updatePatient]",{"range":"472","text":"473"},"Update the dependencies array to be: [defaultdata.treatmentById.__typename, defaultdata.treatmentById.lesion, defaultdata.treatmentById.status, mode]",{"range":"474","text":"475"},"Update the dependencies array to be: [form, id, status, addGeneralForm, navigate, addSkinForm, addAccidentForm, conAccident, addConAccidentForm, addEyesForm, addFeverForm, addDiarrheaForm, addPainForm]",{"range":"476","text":"477"},"Update the dependencies array to be: [form, defaultdata.treatmentById._id, defaultdata.treatmentById.patientId, status, updateGeneralForm, navigate, updateSkinForm, updateAccidentForm, conAccident, updateConAccidentForm, updateEyesForm, updateFeverForm, updateDiarrheaForm, updatePainForm]",{"range":"478","text":"479"},"Update the dependencies array to be: [addDiagnosis, defaultdata.treatmentById._id]",{"range":"480","text":"481"},"Update the dependencies array to be: [location.pathname, onMobileClose, openMobile]",{"range":"482","text":"483"},"Update the dependencies array to be: [defaultdata.medicineById, mode]",{"range":"484","text":"485"},"Update the dependencies array to be: [addMedicine, metType, navigate]",{"range":"486","text":"487"},"Update the dependencies array to be: [defaultdata.medicineById._id, metType, updateMedicine, navigate]",{"range":"488","text":"489"},"Update the dependencies array to be: [defaultdata.userById, mode]",{"range":"490","text":"491"},"Update the dependencies array to be: [addUser, navigate, select]",{"range":"492","text":"493"},"Update the dependencies array to be: [defaultdata.userById._id, select, updateUser, navigate]",{"range":"494","text":"495"},[3236,3238],"[defaultdata.patientById.bloodType, defaultdata.patientById.nationality, defaultdata.patientById.race, defaultdata.patientById.status, mode]",[3354,3356],"[data]",[4530,4550],"[addPatient, navigate, select, selectNationality, selectRace, status]",[5788,5839],"[defaultdata.patientById._id, navigate, select, selectNationality, selectRace, status, updatePatient]",[4583,4585],"[defaultdata.treatmentById.__typename, defaultdata.treatmentById.lesion, defaultdata.treatmentById.status, mode]",[19772,20007],"[form, id, status, addGeneralForm, navigate, addSkinForm, addAccidentForm, conAccident, addConAccidentForm, addEyesForm, addFeverForm, addDiarrheaForm, addPainForm]",[34522,34757],"[form, defaultdata.treatmentById._id, defaultdata.treatmentById.patientId, status, updateGeneralForm, navigate, updateSkinForm, updateAccidentForm, conAccident, updateConAccidentForm, updateEyesForm, updateFeverForm, updateDiarrheaForm, updatePainForm]",[35526,35528],"[addDiagnosis, defaultdata.treatmentById._id]",[1832,1851],"[location.pathname, onMobileClose, openMobile]",[2497,2499],"[defaultdata.medicineById, mode]",[3402,3424],"[addMedicine, metType, navigate]",[4022,4047],"[defaultdata.medicineById._id, metType, updateMedicine, navigate]",[2345,2347],"[defaultdata.userById, mode]",[3302,3319],"[addUser, navigate, select]",[4298,4318],"[defaultdata.userById._id, select, updateUser, navigate]"]