[{"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\index.js":"1","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\App.js":"2","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\reportWebVitals.js":"3","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\routes.js":"4","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Register.js":"5","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Login.js":"6","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Patients\\Create.js":"7","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Admins\\User.js":"8","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Patients\\Detail.js":"9","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Admins\\Creat.js":"10","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Homepage.js":"11","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Treatment.js":"12","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Report.js":"13","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Diagnosis.js":"14","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Patients\\Patients.js":"15","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\components\\Navbar\\Main\\index.js":"16","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Admins\\Detail.js":"17","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\components\\Navbar\\index.js":"18","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Patients\\Patients-form.js":"19","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Admins\\GraphQL\\Querie.js":"20","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Admins\\User-form.js":"21","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\components\\Navbar\\Topbar.js":"22","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\components\\Navbar\\Sidebar.js":"23","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Admins\\GraphQL\\Mutation.js":"24","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\MulitiSelect.jsx":"25","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Patients\\GraphQL\\Mutation.js":"26","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Patients\\GraphQL\\Querie.js":"27","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\components\\GlobalStyles.js":"28","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Medicine.js":"29","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Medicine\\Prescription\\Prescription.js":"30","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Create.js":"31","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Medicine-form.js":"32","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Treatment\\Create.js":"33","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Treatment\\Treatment-form.js":"34","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Treatment\\GraphQL\\Mutation.js":"35","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Treatment\\Detail.js":"36","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Treatment\\GraphQL\\Querie.js":"37","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Detail.js":"38"},{"size":771,"mtime":1616777891521,"results":"39","hashOfConfig":"40"},{"size":419,"mtime":1617383855448,"results":"41","hashOfConfig":"40"},{"size":375,"mtime":1616510503515,"results":"42","hashOfConfig":"40"},{"size":2280,"mtime":1617639829240,"results":"43","hashOfConfig":"40"},{"size":4115,"mtime":1616952731661,"results":"44","hashOfConfig":"40"},{"size":4205,"mtime":1616952731660,"results":"45","hashOfConfig":"40"},{"size":1890,"mtime":1617598047409,"results":"46","hashOfConfig":"40"},{"size":3244,"mtime":1617600295929,"results":"47","hashOfConfig":"40"},{"size":2790,"mtime":1617638563297,"results":"48","hashOfConfig":"40"},{"size":1861,"mtime":1617638563286,"results":"49","hashOfConfig":"40"},{"size":704,"mtime":1617249893408,"results":"50","hashOfConfig":"40"},{"size":653,"mtime":1617249893418,"results":"51","hashOfConfig":"40"},{"size":644,"mtime":1617249893417,"results":"52","hashOfConfig":"40"},{"size":653,"mtime":1617249893407,"results":"53","hashOfConfig":"40"},{"size":2946,"mtime":1617639829238,"results":"54","hashOfConfig":"40"},{"size":1031,"mtime":1617383855452,"results":"55","hashOfConfig":"40"},{"size":2103,"mtime":1617638563289,"results":"56","hashOfConfig":"40"},{"size":1371,"mtime":1617383855457,"results":"57","hashOfConfig":"40"},{"size":25982,"mtime":1617638563303,"results":"58","hashOfConfig":"40"},{"size":428,"mtime":1617250732385,"results":"59","hashOfConfig":"40"},{"size":17017,"mtime":1617638563294,"results":"60","hashOfConfig":"40"},{"size":1584,"mtime":1617383855456,"results":"61","hashOfConfig":"40"},{"size":7827,"mtime":1617639829223,"results":"62","hashOfConfig":"40"},{"size":623,"mtime":1617252112099,"results":"63","hashOfConfig":"40"},{"size":842,"mtime":1617383071213,"results":"64","hashOfConfig":"40"},{"size":829,"mtime":1617468790319,"results":"65","hashOfConfig":"40"},{"size":678,"mtime":1617638563301,"results":"66","hashOfConfig":"40"},{"size":819,"mtime":1617383855449,"results":"67","hashOfConfig":"40"},{"size":3396,"mtime":1617639829233,"results":"68","hashOfConfig":"40"},{"size":636,"mtime":1617546542213,"results":"69","hashOfConfig":"40"},{"size":1817,"mtime":1617599045859,"results":"70","hashOfConfig":"40"},{"size":8742,"mtime":1617639829230,"results":"71","hashOfConfig":"40"},{"size":3291,"mtime":1617638563308,"results":"72","hashOfConfig":"40"},{"size":7011,"mtime":1617638563310,"results":"73","hashOfConfig":"40"},{"size":372,"mtime":1617639644841,"results":"74","hashOfConfig":"40"},{"size":7053,"mtime":1617639775052,"results":"75","hashOfConfig":"40"},{"size":351,"mtime":1617639643571,"results":"76","hashOfConfig":"40"},{"size":2313,"mtime":1617639829228,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"gzpn3e",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\index.js",[],["165","166"],"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\App.js",[],"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\routes.js",[],"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Register.js",["167"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Logouser from \"../img/user.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(10),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"#ecb79c\",\r\n    color: \"white\",\r\n  },\r\n  logo: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function Register() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <div className={classes.logo}>\r\n          <img src={Logouser} style={{ width: \"80%\", height: \"auto\" }} />\r\n        </div>\r\n        <Typography component=\"h1\" variant=\"h5\" style={{ margin: 30 }}>\r\n          Register\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"filled\"\r\n                required\r\n                fullWidth\r\n                name=\"confirm password\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            <Typography component=\"subtitle1\" variant=\"subtitle1\">\r\n              Register\r\n            </Typography>\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/login\" variant=\"body2\">\r\n                <Typography component=\"subtitle1\" variant=\"subtitle1\">\r\n                  Already have an account? Sign in\r\n                </Typography>\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Login.js",["168"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Logouser from \"../img/user.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(https://i.imgur.com/u9flexs.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"#5780f7\",\r\n    color: \"white\",\r\n    padding: 8\r\n  },\r\n  logo: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function SignInSide() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <fullWidthClassName />\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={6} className={classes.image} />\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        sm={8}\r\n        md={6}\r\n        component={Paper}\r\n        square\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <div className={classes.paper}>\r\n          <div className={classes.logo}>\r\n            <img src={Logouser} style={{ width: \"80%\", height: \"auto\" }} />\r\n          </div>\r\n          <Typography component=\"h1\" variant=\"h5\" style={{margin: 30}}>\r\n            Clinic Treatment History System\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"filled\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              // style={{ boxShadow: \"5px 10px #777\" }}\r\n            />\r\n            <TextField\r\n              variant=\"filled\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              className={classes.submit}\r\n            >\r\n              <Typography component=\"subtitle1\" variant=\"subtitle1\">\r\n                Login\r\n              </Typography>\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <FormControlLabel\r\n                  control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                  label=\"Remember me\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"/register\" variant=\"body2\">\r\n                  <Typography\r\n                    component=\"subtitle1\"\r\n                    variant=\"subtitle1\"\r\n                    style={{ marginRight: 10 }}\r\n                  >\r\n                    Don't Have an Account?\r\n                  </Typography>\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  <Typography component=\"subtitle1\" variant=\"subtitle1\">\r\n                    Forgot Password?\r\n                  </Typography>\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Patients\\Create.js",[],"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Admins\\User.js",[],"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Patients\\Detail.js",[],"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Admins\\Creat.js",[],"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Homepage.js",[],"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Treatment.js",[],"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Report.js",[],"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Diagnosis.js",[],"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Patients\\Patients.js",[],"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\components\\Navbar\\Main\\index.js",[],"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Admins\\Detail.js",[],"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\components\\Navbar\\index.js",[],"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Patients\\Patients-form.js",["169","170","171","172","173","174","175","176","177","178","179"],"import React, { useCallback, useEffect, useState } from 'react'\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    MenuItem,\r\n    RadioGroup,\r\n    FormControlLabel,\r\n    FormControl,\r\n    FormLabel,\r\n    Button,\r\n    Chip,\r\n    NativeSelect,\r\n    InputBase,\r\n    InputLabel,\r\n} from '@material-ui/core';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { CountryRegionData } from \"react-country-region-selector\";\r\nimport { TextField, Radio, Select } from 'final-form-material-ui';\r\nimport MultiSelect from \"../../MulitiSelect\";\r\nimport \"../../App.css\"\r\nimport { ADD_PATIENT, UPDATE_PATIENT_BY_ID } from './GraphQL/Mutation'\r\nimport { useMutation } from '@apollo/client';\r\nimport { GET_PATIENTS } from './GraphQL/Querie'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport moment from 'moment';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            width: '25ch',\r\n        },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        maxWidth: 300,\r\n    },\r\n    chips: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n        margin: 2,\r\n    },\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n    root: {\r\n        'label + &': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    input: {\r\n        borderRadius: 4,\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        width: \"100%\",\r\n        padding: '10px 26px 10px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n        '&:focus': {\r\n            borderRadius: 4,\r\n            borderColor: '#80bdff',\r\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n        },\r\n    },\r\n}))(InputBase);\r\n\r\nconst PatientsForm = (props) => {\r\n    const { mode, defaultdata } = props\r\n    const classes = useStyles();\r\n    let navigate = useNavigate();\r\n    const test = ['โรคหัวใจ', 'โรคความดัน', 'โรคเบาหวาน', 'โรคสมอง'];\r\n    const [select, setSelect] = React.useState('')\r\n    const [status, setStatus] = React.useState('')\r\n    const [addPatient] = useMutation(ADD_PATIENT);\r\n    const [updatePatient] = useMutation(UPDATE_PATIENT_BY_ID)\r\n    const [nationality, setNationality] = React.useState([])\r\n    const [selectNationality, setSelectNationality] = React.useState('')\r\n    const [selectRace, setSelectRace] = React.useState('')\r\n\r\n    let data = require('npm-nationality-list')\r\n\r\n    useEffect(() => {\r\n        if (mode === 'update') {\r\n            setSelect(defaultdata.patientById.bloodType)\r\n            setStatus(defaultdata.patientById.status)\r\n            setSelectNationality(defaultdata.patientById.nationality)\r\n            setSelectRace(defaultdata.patientById.race)\r\n        } else {\r\n            return null\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        data.getList().map((item) => setNationality((prev) => [...prev, item]))\r\n    }, [])\r\n\r\n    const onSubmitCreate = useCallback(\r\n        async (value) => {\r\n            const variables = {\r\n                record: {\r\n                    firstname: value.firstname,\r\n                    lastname: value.lastname,\r\n                    idcardNumber: value.idcardNumber,\r\n                    birthdate: value.birthdate,\r\n                    nationality: selectNationality,\r\n                    race: selectRace,\r\n                    status: status,\r\n                    bloodType: select,\r\n                    phone: value.phone,\r\n                    address: value.address,\r\n                    hospitalRefer: value.hospitalRefer,\r\n                    congenitalDisease: value.congenitalDisease,\r\n                }\r\n            }\r\n            try {\r\n                await addPatient({ variables, refetchQueries: [{ query: GET_PATIENTS }] })\r\n                alert('บันทึกข้อมูลสำเร็จ')\r\n                setSelectNationality('')\r\n                setSelectRace('')\r\n                navigate(`/app/patients`)\r\n            } catch (err) {\r\n                console.log(err)\r\n                alert('เกิดข้อผิดพลาด' + err.message)\r\n            }\r\n        },\r\n        [addPatient, select]\r\n    )\r\n\r\n    const onSubmitUpdate = useCallback(\r\n        async (value) => {\r\n            const variables = {\r\n                id: defaultdata.patientById._id,\r\n                record: {\r\n                    firstname: value.firstname,\r\n                    lastname: value.lastname,\r\n                    idcardNumber: value.idcardNumber,\r\n                    birthdate: value.birthdate,\r\n                    nationality: selectNationality,\r\n                    race: selectRace,\r\n                    status: status,\r\n                    bloodType: select,\r\n                    phone: value.phone,\r\n                    address: value.address,\r\n                    hospitalRefer: value.hospitalRefer,\r\n                    congenitalDisease: value.congenitalDisease,\r\n                }\r\n            }\r\n            try {\r\n                await updatePatient({ variables, refetchQueries: [{ query: GET_PATIENTS }] })\r\n                alert('บันทึกข้อมูลสำเร็จ')\r\n                setSelectNationality('')\r\n                setSelectRace('')\r\n                navigate(`/app/patients`)\r\n            } catch (err) {\r\n                console.log(err)\r\n                alert('เกิดข้อผิดพลาด     ' + err.message)\r\n            }\r\n        },\r\n        [addPatient, select, selectNationality, selectRace]\r\n    )\r\n\r\n    const onSubmit = mode === 'update' ? onSubmitUpdate : onSubmitCreate\r\n\r\n    const handleChangeblood = (event) => {\r\n        setSelect(event.target.value);\r\n    };\r\n\r\n    const handleChangestatus = (event) => {\r\n        setStatus(event.target.value)\r\n    }\r\n\r\n    const handleSelectNationality = (event) => {\r\n        setSelectNationality(event.target.value)\r\n    }\r\n    const handleSelectRace = (event) => {\r\n        setSelectRace(event.target.value)\r\n    }\r\n\r\n    const normalizeIdcard = value => {\r\n        if (!value) return value;\r\n        const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n        if (onlyNums.length <= 13) return onlyNums;\r\n    }\r\n\r\n    const normalizePhone = value => {\r\n        if (!value) return value;\r\n        const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n        if (onlyNums.length <= 10) return onlyNums;\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Form\r\n                onSubmit={onSubmit}\r\n                render={({ handleSubmit, submitting }) => (\r\n                    <form className={classes.root} noValidate autoComplete=\"true\" onSubmit={handleSubmit}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        fullWidth\r\n                                        required\r\n                                        name=\"firstname\"\r\n                                        component={TextField}\r\n                                        type=\"text\"\r\n                                        label=\"ชื่อ\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        initialValue={defaultdata.patientById.firstname}\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        fullWidth\r\n                                        required\r\n                                        name=\"firstname\"\r\n                                        component={TextField}\r\n                                        type=\"text\"\r\n                                        label=\"ชื่อ\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        name=\"lastname\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        component={TextField}\r\n                                        label=\"นามสกุล\"\r\n                                        initialValue={defaultdata.patientById.lastname}\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        name=\"lastname\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        component={TextField}\r\n                                        label=\"นามสกุล\"\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"รหัสบัตรประชาชน\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"idcardNumber\"\r\n                                        component={TextField}\r\n                                        initialValue={defaultdata.patientById.idcardNumber}\r\n                                        parse={normalizeIdcard}\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        label=\"รหัสบัตรประชาชน\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"idcardNumber\"\r\n                                        component={TextField}\r\n                                        parse={normalizeIdcard}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        id=\"date\"\r\n                                        type=\"date\"\r\n                                        label=\"วัน/เดือน/ปีเกิด\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required={true}\r\n                                        component={TextField}\r\n                                        name='birthdate'\r\n                                        defaultValue={`${moment(defaultdata.patientById.birthdate).format(\"YYYY-MM-DD\")}`}\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        id=\"date\"\r\n                                        type=\"date\"\r\n                                        variant=\"outlined\"\r\n                                        label=\"วัน/เดือน/ปีเกิด\"\r\n                                        style={{ width: '100%' }}\r\n                                        required={true}\r\n                                        component={TextField}\r\n                                        name='birthdate'\r\n                                        defaultValue={`${moment(new Date()).format(\"YYYY-MM-DD\")}`}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl style={{ width: \"100%\" }}>\r\n                                    <InputLabel id=\"demo-mutiple-name-label\">สัญชาติ</InputLabel>\r\n                                    <NativeSelect\r\n                                        id=\"demo-customized-select-native\"\r\n                                        input={<BootstrapInput />}\r\n                                        value={selectNationality}\r\n                                        onChange={handleSelectNationality}\r\n                                        required={true}\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\" \" />\r\n                                        {nationality?.map((data, index) => (\r\n                                            <option value={`${data.nationality}`}>\r\n                                                {data.nationality}\r\n                                            </option>\r\n                                        ))}\r\n                                    </NativeSelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl style={{ width: \"100%\" }}>\r\n                                    <InputLabel id=\"demo-mutiple-name-label\">เชื้อชาติ</InputLabel>\r\n                                    <NativeSelect\r\n                                        id=\"demo-customized-select-native\"\r\n                                        input={<BootstrapInput />}\r\n                                        value={selectRace}\r\n                                        onChange={handleSelectRace}\r\n                                        required={true}\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\" \" />\r\n                                        {nationality?.map((data, index) => (\r\n                                            <option value={`${data.nationality}`}>\r\n                                                {data.nationality}\r\n                                            </option>\r\n                                        ))}\r\n                                    </NativeSelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl style={{ width: \"100%\" }}>\r\n                                    <InputLabel id=\"demo-mutiple-name-label\">สถานะ</InputLabel>\r\n                                    <NativeSelect\r\n                                        id=\"demo-customized-select-native\"\r\n                                        input={<BootstrapInput />}\r\n                                        value={status}\r\n                                        onChange={handleChangestatus}\r\n                                        required={true}\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\"เลือกสถานะ\" />\r\n                                        <option value={'SINGLE'}>โสด</option>\r\n                                        <option value={'MARRIED'}>สมรส</option>\r\n                                        <option value={'OTHER'}>อื่น ๆ</option>\r\n                                    </NativeSelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl style={{ width: \"100%\" }}>\r\n                                    <InputLabel id=\"demo-mutiple-name-label\">กรุ๊ปเลือด</InputLabel>\r\n                                    <NativeSelect\r\n                                        id=\"demo-customized-select-native\"\r\n                                        input={<BootstrapInput />}\r\n                                        value={select}\r\n                                        onChange={handleChangeblood}\r\n                                        required={true}\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\" \" />\r\n                                        <option value={'O'}>O</option>\r\n                                        <option value={'A'}>A</option>\r\n                                        <option value={'B'}>B</option>\r\n                                        <option value={'AB'}>AB</option>\r\n                                    </NativeSelect>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"เบอร์โทรศัพท์\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"phone\"\r\n                                        component={TextField}\r\n                                        initialValue={defaultdata.patientById.phone}\r\n                                        parse={normalizePhone}\r\n\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        label=\"เบอร์โทรศัพท์\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"phone\"\r\n                                        component={TextField}\r\n                                        parse={normalizePhone}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"โรงพยาบาลที่ส่งต่อ\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"hospitalRefer\"\r\n                                        component={TextField}\r\n                                        initialValue={defaultdata.patientById.hospitalRefer}\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        label=\"โรงพยาบาลที่ส่งต่อ\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"hospitalRefer\"\r\n                                        component={TextField}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        name=\"congenitalDisease\"\r\n                                        styling=\"field\"\r\n                                        labelname=\"โรคประจำตัว\"\r\n                                        component={MultiSelect}\r\n                                        variant=\"outlined\"\r\n                                        initialValue={defaultdata.patientById.congenitalDisease}\r\n                                        renderValue={selected => (\r\n                                            <div className=\"multi-select-chips\">\r\n                                                {selected.map(value => (\r\n                                                    <Chip\r\n                                                        key={value}\r\n                                                        label={value}\r\n                                                        className=\"multi-select-chip\"\r\n                                                    />\r\n                                                ))}\r\n                                            </div>\r\n                                        )}\r\n                                    >\r\n                                        {test.map((data, index) => (\r\n                                            <MenuItem key={index} value={data}>\r\n                                                {data}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Field>\r\n                                ) : (\r\n                                    <Field\r\n                                        name=\"congenitalDisease\"\r\n                                        styling=\"field\"\r\n                                        labelname=\"โรคประจำตัว\"\r\n                                        component={MultiSelect}\r\n                                        variant=\"outlined\"\r\n                                        renderValue={selected => (\r\n                                            <div className=\"multi-select-chips\">\r\n                                                {selected.map(value => (\r\n                                                    <Chip\r\n                                                        key={value}\r\n                                                        label={value}\r\n                                                        className=\"multi-select-chip\"\r\n                                                    />\r\n                                                ))}\r\n                                            </div>\r\n                                        )}\r\n                                    >\r\n                                        {test.map((data, index) => (\r\n                                            <MenuItem key={index} value={data}>\r\n                                                {data}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Field>\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"ที่อยู่\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"address\"\r\n                                        component={TextField}\r\n                                        initialValue={defaultdata.patientById.address}\r\n\r\n                                    />\r\n                                ) : (\r\n                                    <Field\r\n                                        label=\"ที่อยู่\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"address\"\r\n                                        component={TextField}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12} style={{ marginTop: 16, textAlign: 'center', width: '100%' }}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    disabled={submitting}\r\n                                >\r\n                                    บันทึกข้อมูล\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                )\r\n                }\r\n            />\r\n        </React.Fragment >\r\n    )\r\n}\r\nexport default PatientsForm","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Admins\\GraphQL\\Querie.js",[],"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Admins\\User-form.js",["180","181","182"],"import React, { useCallback, useEffect } from 'react'\r\nimport {\r\n    Grid,\r\n    FormControl,\r\n    NativeSelect,\r\n    InputBase,\r\n    InputLabel,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { TextField } from 'final-form-material-ui';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER, UPDATE_USER_BY_ID} from './GraphQL/Mutation'\r\nimport { GET_USERS } from './GraphQL/Querie'\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n    root: {\r\n        'label + &': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    input: {\r\n        borderRadius: 4,\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        width: \"100%\",\r\n        padding: '10px 26px 10px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n        '&:focus': {\r\n            borderRadius: 4,\r\n            borderColor: '#80bdff',\r\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n        },\r\n    },\r\n}))(InputBase);\r\n\r\nconst UserForm = (props) => {\r\n    \r\n    const {mode, defaultdata} = props\r\n    \r\n    let navigate = useNavigate();\r\n    const classes = useStyles();\r\n    const [select, setSelect] = React.useState('')\r\n   \r\n    const [addUser] = useMutation(ADD_USER);\r\n    const [updateUser] = useMutation(UPDATE_USER_BY_ID);\r\n    const handleChange = (event) => {\r\n        setSelect(event.target.value);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if(mode === 'update'){\r\n            setSelect(defaultdata.userById.roles)\r\n            console.log(defaultdata.userById)\r\n        }else{\r\n            return null\r\n        }\r\n    }, [])\r\n\r\n    const onSubmitCreate = useCallback(\r\n        async (value) => {\r\n            const variables = {\r\n                record: {\r\n                    username: value.username,\r\n                    email: value.email,\r\n                    firstname: value.firstName,\r\n                    lastname: value.lastName,\r\n                    phone: value.tell,\r\n                    roles: select,\r\n                    address: value.address,\r\n                    password: value.password,\r\n                    isStaff: true\r\n                }\r\n            }\r\n            try {\r\n                await addUser({ variables, refetchQueries: [{ query: GET_USERS }] })\r\n                setSelect('')\r\n                console.log('create')\r\n                alert('บันทึกข้อมูลสำเร็จ')\r\n                navigate(`/app/admin/`)\r\n            } catch (err) {\r\n                console.log(err)\r\n                alert('เกิดข้อผิดพลาด')\r\n            }\r\n        },\r\n        [addUser, select]\r\n    )\r\n    const onSubmitUpdate = useCallback(\r\n        async (value) => {\r\n            const variables = {\r\n                id: defaultdata.userById._id,\r\n                record: {\r\n                    username: value.username,\r\n                    email: value.email,\r\n                    firstname: value.firstName,\r\n                    lastname: value.lastName,\r\n                    phone: value.tell,\r\n                    roles: select,\r\n                    address: value.address,\r\n                    password: value.password,\r\n                    isStaff: true\r\n                }\r\n            }\r\n            try {\r\n                await updateUser({ variables, refetchQueries: [{ query: GET_USERS }] })\r\n                setSelect('')\r\n                alert('บันทึกข้อมูลสำเร็จ')\r\n                navigate(`/app/admin/`)\r\n            } catch (err) {\r\n                console.log(err)\r\n                alert('เกิดข้อผิดพลาด' + select)\r\n            }\r\n        },\r\n        [updateUser, select]\r\n    )\r\n    const onSubmit = mode === 'update' ? onSubmitUpdate : onSubmitCreate\r\n    return (\r\n        <React.Fragment>\r\n            <Form\r\n                onSubmit={onSubmit}\r\n                render={({ handleSubmit, submitting, submitError }) => {\r\n                    return (\r\n                        <form className={classes.root} noValidate autoComplete=\"true\" onSubmit={handleSubmit}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        fullWidth\r\n                                        required\r\n                                        name=\"username\"\r\n                                        component={TextField}\r\n                                        type=\"text\"\r\n                                        label=\"ยูซเซอร์เนม\"\r\n                                        variant=\"outlined\"\r\n                                        initialValue={defaultdata.userById.username}\r\n                                        style={{ width: '100%' }}\r\n                                    />\r\n                                ): (\r\n                                    <Field\r\n                                        fullWidth\r\n                                        required\r\n                                        name=\"username\"\r\n                                        component={TextField}\r\n                                        type=\"text\"\r\n                                        label=\"ยูซเซอร์เนม\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                   null\r\n                                ):(\r\n                                    <Field\r\n                                        name=\"password\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        type=\"password\"\r\n                                        component={TextField}\r\n                                        label=\"รหัส\"\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === \"update\" ? (\r\n                                     <Field\r\n                                        fullWidth\r\n                                        required\r\n                                        name=\"firstName\"\r\n                                        component={TextField}\r\n                                        type=\"text\"\r\n                                        label=\"ชื่อ\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        initialValue={defaultdata.userById.firstname}\r\n                                     />\r\n                                ):(\r\n                                    <Field\r\n                                        fullWidth\r\n                                        required\r\n                                        name=\"firstName\"\r\n                                        component={TextField}\r\n                                        type=\"text\"\r\n                                        label=\"ชื่อ\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === \"update\" ? (\r\n                                    <Field\r\n                                        name=\"lastName\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        component={TextField}\r\n                                        label=\"นามสกุล\"\r\n                                        initialValue={defaultdata.userById.lastname}\r\n                                    />\r\n                                ):(\r\n                                    <Field\r\n                                        name=\"lastName\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        component={TextField}\r\n                                        label=\"นามสกุล\"\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"เบอร์โทร\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"tell\"\r\n                                        component={TextField}\r\n                                        initialValue={defaultdata.userById.phone}\r\n                                    />\r\n                                ):(\r\n                                    <Field\r\n                                        label=\"เบอร์โทร\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"tell\"\r\n                                        component={TextField}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                     <Field\r\n                                        label=\"อีเมล\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"email\"\r\n                                        component={TextField}\r\n                                        initialValue={defaultdata.userById.email}\r\n                                     />\r\n                                ):(\r\n                                    <Field\r\n                                        label=\"อีเมล\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"email\"\r\n                                        component={TextField}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {mode === 'update' ? (\r\n                                    <Field\r\n                                        label=\"ที่อยู่\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"address\"\r\n                                        component={TextField}\r\n                                        multiline\r\n                                        rows={4}\r\n                                        initialValue={defaultdata.userById.address}\r\n                                     />\r\n                                ):(\r\n                                    <Field\r\n                                        label=\"ที่อยู่\"\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        style={{ width: '100%' }}\r\n                                        required\r\n                                        name=\"address\"\r\n                                        component={TextField}\r\n                                        multiline\r\n                                        rows={4}\r\n                                    />\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12} >\r\n                                {mode === 'update' ? (\r\n                                    <FormControl style={{ width: \"100%\" }}>\r\n                                        <InputLabel id=\"demo-mutiple-name-label\">หน้าที่</InputLabel>\r\n                                        <NativeSelect\r\n                                            id=\"demo-customized-select-native\"\r\n                                            input={<BootstrapInput />}\r\n                                            value={select}\r\n                                            onChange={handleChange}\r\n                                            required={true}\r\n                                        >\r\n                                             <option aria-label=\"None\" value=\" \" />\r\n                                            <option value={'DOCTOR'}>หมอ</option>\r\n                                            <option value={'NURSE'}>พยาบาล</option>\r\n                                            <option value={'STAFF'}>เจ้าหน้าที่</option>\r\n                                        </NativeSelect>\r\n                                    </FormControl>\r\n                                ):(\r\n                                    <FormControl style={{ width: \"100%\" }}>\r\n                                        <InputLabel id=\"demo-mutiple-name-label\">หน้าที่</InputLabel>\r\n                                        <NativeSelect\r\n                                            id=\"demo-customized-select-native\"\r\n                                            input={<BootstrapInput />}\r\n                                            value={select}\r\n                                            onChange={handleChange}\r\n                                            required={true}\r\n                                        >\r\n                                             <option aria-label=\"None\" value=\" \" />\r\n                                            <option value={'DOCTOR'}>หมอ</option>\r\n                                            <option value={'NURSE'}>พยาบาล</option>\r\n                                            <option value={'STAFF'}>เจ้าหน้าที่</option>\r\n                                        </NativeSelect>\r\n                                    </FormControl>\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12} style={{ marginTop: 16, textAlign: 'center', width: '100%' }}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    disabled={submitting}\r\n                                >\r\n                                    บันทึกข้อมูล\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                    )\r\n                }}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default UserForm\r\n\r\n","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\components\\Navbar\\Topbar.js",["183"],"import React from 'react';\r\nimport { AppBar, Hidden, Toolbar, makeStyles, IconButton, Box, Typography } from '@material-ui/core';\r\nimport Icon from '../../img/logo.png';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// icon\r\nimport { IconContext } from 'react-icons';\r\nimport { GiHamburgerMenu } from 'react-icons/gi';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\troot: {\r\n\t\tbackgroundColor: '#FFF',\r\n\t\tpadding: 10,\r\n\t},\r\n}));\r\n\r\nconst Layout = ({ className, onMobileNavOpen, ...rest }) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<AppBar className={clsx(classes.root, className)} {...rest}>\r\n\t\t\t<Toolbar>\r\n\t\t\t\t<Link to=\"/app/homepage\" style={{ textDecoration: 'none' }}>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<img src={Icon} alt=\"icon\" style={{ height: 70, width: 70 }} />\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\t\t\ttextTransform: 'uppercase',\r\n\t\t\t\t\t\t\t\tcolor: '#000',\r\n\t\t\t\t\t\t\t\tmarginLeft: 15,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tClinic Treatment History\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Box flexGrow={1} />\r\n\t\t\t\t<Hidden lgUp>\r\n\t\t\t\t\t<IconContext.Provider value={{ color: 'red', size: '30' }}>\r\n\t\t\t\t\t\t<GiHamburgerMenu onClick={onMobileNavOpen} />\r\n\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t</Hidden>\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t);\r\n};\r\n\r\nLayout.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\tonMobileNavOpen: PropTypes.func,\r\n};\r\n\r\nexport default Layout;\r\n","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\components\\Navbar\\Sidebar.js",["184","185"],"import React, { useEffect, useState } from 'react';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Avatar, Box, Button, Divider, Drawer, Hidden, List, Typography, makeStyles } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\n// icon\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { IconContext } from 'react-icons';\r\nimport { HiHome, HiDocumentReport } from 'react-icons/hi';\r\nimport { FaUserInjured, FaUserShield, FaUserMd } from 'react-icons/fa';\r\nimport { IoBandageSharp } from 'react-icons/io5';\r\nimport { GiMedicines } from 'react-icons/gi';\r\nimport { AiOutlineMedicineBox } from 'react-icons/ai';\r\nimport { MdExpandLess, MdExpandMore } from 'react-icons/md';\r\n\r\nconst user = {\r\n\tavatar: '',\r\n\tjobTitle: 'Senior Developer',\r\n\tname: 'Katarina Smith',\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\tmobileDrawer: {\r\n\t\twidth: 256,\r\n\t},\r\n\tdesktopDrawer: {\r\n\t\twidth: 256,\r\n\t\ttop: 90,\r\n\t\theight: 'calc(100% - 90px)',\r\n\t},\r\n\tavatar: {\r\n\t\tcursor: 'pointer',\r\n\t\twidth: 90,\r\n\t\theight: 90,\r\n\t},\r\n\tnavTab: {\r\n\t\tpadding: 10,\r\n\t\tpaddingBottom: 20,\r\n\t},\r\n\tname: {\r\n\t\tmargin: 5,\r\n\t\tcolor: 'white',\r\n\t},\r\n\ttextsidebar: {\r\n\t\tfontWeight: 'bold',\r\n\t\tcolor: 'white',\r\n\t},\r\n\tnested: {\r\n\t\tpaddingTop: 10,\r\n\t\tpaddingBottom: 10,\r\n\t\tpaddingLeft: 30,\r\n\t},\r\n}));\r\n\r\nconst Sidebar = ({ onMobileClose, openMobile }) => {\r\n\tconst classes = useStyles();\r\n\tconst location = useLocation();\r\n\tconst [open, setOpen] = React.useState(true);\r\n\r\n\tconst handleClick = () => {\r\n\t\tsetOpen(!open);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (openMobile && onMobileClose) {\r\n\t\t\tonMobileClose();\r\n\t\t}\r\n\t}, [location.pathname]);\r\n\r\n\tconst content = (\r\n\t\t<Box height=\"120vh\" display=\"flex\" flexDirection=\"column\" style={{ backgroundColor: '#0f123f' }} >\r\n\t\t\t<Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\" p={5}>\r\n\t\t\t\t<Avatar className={classes.avatar} component={RouterLink} src={user.avatar} to=\"\" />\r\n\t\t\t\t<Typography className={classes.name} color=\"textPrimary\" variant=\"h5\">\r\n\t\t\t\t\t{user.name}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography className={classes.name} color=\"textSecondary\" variant=\"body2\">\r\n\t\t\t\t\t{user.jobTitle}\r\n\t\t\t\t</Typography>\r\n\t\t\t</Box>\r\n\t\t\t<Divider style={{ backgroundColor: 'white' }} />\r\n\t\t\t<Box p={2}>\r\n\t\t\t\t<List>\r\n\t\t\t\t\t<ListItem button component={Link} className={classes.navTab} to=\"/\">\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<IconContext.Provider value={{ color: 'white', size: '30' }}>\r\n\t\t\t\t\t\t\t\t<HiHome />\r\n\t\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t<Typography className={classes.textsidebar}>Home</Typography>\r\n\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t</ListItem>\r\n\r\n\t\t\t\t\t<ListItem button component={Link} className={classes.navTab} to=\"/app/patients\">\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<IconContext.Provider value={{ color: 'white', size: '30' }}>\r\n\t\t\t\t\t\t\t\t<FaUserInjured />\r\n\t\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t<Typography className={classes.textsidebar}>Patients</Typography>\r\n\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t</ListItem>\r\n\r\n\t\t\t\t\t<ListItem button component={Link} className={classes.navTab} to=\"/app/treatment\">\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<IconContext.Provider value={{ color: 'white', size: '30' }}>\r\n\t\t\t\t\t\t\t\t<IoBandageSharp />\r\n\t\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t<Typography className={classes.textsidebar}>Treatment</Typography>\r\n\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t</ListItem>\r\n\r\n\t\t\t\t\t<ListItem button component={Link} className={classes.navTab} to=\"/app/diagnosis\">\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<IconContext.Provider value={{ color: 'white', size: '30' }}>\r\n\t\t\t\t\t\t\t\t<FaUserMd />\r\n\t\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t<Typography className={classes.textsidebar}>Diagnosis</Typography>\r\n\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t</ListItem>\r\n\r\n\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\tcomponent={Link}\r\n\t\t\t\t\t\tclassName={classes.navTab}\r\n\t\t\t\t\t\tto=\"/app/medicine\"\r\n\t\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<IconContext.Provider value={{ color: 'white', size: '30' }}>\r\n\t\t\t\t\t\t\t\t<AiOutlineMedicineBox />\r\n\t\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t<Typography className={classes.textsidebar}>Medicine</Typography>\r\n\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t\t{open ? (\r\n\t\t\t\t\t\t\t<IconContext.Provider value={{ color: 'white', size: '30' }}>\r\n\t\t\t\t\t\t\t\t<MdExpandLess />\r\n\t\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<IconContext.Provider value={{ color: 'white', size: '30' }}>\r\n\t\t\t\t\t\t\t\t<MdExpandMore />\r\n\t\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</ListItem>\r\n\r\n\t\t\t\t\t<Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n\t\t\t\t\t\t<List component=\"div\" disablePadding>\r\n\t\t\t\t\t\t\t<ListItem button component={Link} className={classes.nested} to=\"/app/medicine\">\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<IconContext.Provider value={{ color: 'white', size: '30' }}>\r\n\t\t\t\t\t\t\t\t\t\t<GiMedicines />\r\n\t\t\t\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t\t\t<Typography className={classes.textsidebar}>ห้องจ่ายยา</Typography>\r\n\t\t\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t<ListItem button component={Link} className={classes.nested} to=\"/app/medicine/drugstore\">\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<IconContext.Provider value={{ color: 'white', size: '30' }}>\r\n\t\t\t\t\t\t\t\t\t\t<GiMedicines />\r\n\t\t\t\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t\t\t<Typography className={classes.textsidebar}>คลังยา</Typography>\r\n\t\t\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</Collapse>\r\n\r\n\t\t\t\t\t<ListItem button component={Link} className={classes.navTab} to=\"/app/report\">\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<IconContext.Provider value={{ color: 'white', size: '30' }}>\r\n\t\t\t\t\t\t\t\t<HiDocumentReport />\r\n\t\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t<Typography className={classes.textsidebar}>Report</Typography>\r\n\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t</ListItem>\r\n\r\n\t\t\t\t\t<ListItem button component={Link} className={classes.navTab} to=\"/app/admin\">\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<IconContext.Provider value={{ color: 'white', size: '30' }}>\r\n\t\t\t\t\t\t\t\t<FaUserShield />\r\n\t\t\t\t\t\t\t</IconContext.Provider>\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t<Typography className={classes.textsidebar}>Administor</Typography>\r\n\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t</List>\r\n\t\t\t</Box>\r\n\t\t\t<Divider style={{ backgroundColor: 'white' }} />\r\n\t\t\t<Box p={2} m={2}>\r\n\t\t\t\t<Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" mt={2}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcomponent=\"a\"\r\n\t\t\t\t\t\thref=\"/login\"\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginBottom: 10,\r\n\t\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\t\tbackgroundColor: '#017efa',\r\n\t\t\t\t\t\t\tcolor: 'white',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tLOG IN\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button component=\"a\" href=\"/register\" className={classes.textsidebar}>\r\n\t\t\t\t\t\tDon't Have an Account?\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Hidden lgUp>\r\n\t\t\t\t<Drawer\r\n\t\t\t\t\tanchor=\"left\"\r\n\t\t\t\t\tclasses={{ paper: classes.mobileDrawer }}\r\n\t\t\t\t\tonClose={onMobileClose}\r\n\t\t\t\t\topen={openMobile}\r\n\t\t\t\t\tvariant=\"temporary\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{content}\r\n\t\t\t\t</Drawer>\r\n\t\t\t</Hidden>\r\n\t\t\t<Hidden mdDown>\r\n\t\t\t\t<Drawer anchor=\"left\" classes={{ paper: classes.desktopDrawer }} open variant=\"persistent\">\r\n\t\t\t\t\t{content}\r\n\t\t\t\t</Drawer>\r\n\t\t\t</Hidden>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nSidebar.propTypes = {\r\n\tonMobileClose: PropTypes.func,\r\n\topenMobile: PropTypes.bool,\r\n};\r\n\r\nSidebar.defaultProps = {\r\n\tonMobileClose: () => {},\r\n\topenMobile: false,\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Admins\\GraphQL\\Mutation.js",[],"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\MulitiSelect.jsx",["186"],"import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nexport default ({\n  input: { value, name, onChange, ...restInput },\n  meta,\n  ...rest\n}) => (\n  <FormControl className={rest.styling}>\n    <InputLabel htmlFor=\"select-multiple-chip\">{rest.labelname}</InputLabel>\n    <Select\n      MenuProps={MenuProps}\n      multiple\n      displayEmpty\n      {...rest}\n      name={name}\n      inputProps={restInput}\n      error={meta.error && meta.touched}\n      onChange={onChange}\n      value={[...value]}\n    />\n  </FormControl>\n);\n","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Patients\\GraphQL\\Mutation.js",[],"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Patients\\GraphQL\\Querie.js",[],"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\components\\GlobalStyles.js",[],"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Medicine.js",["187"],"import React from \"react\";\r\nimport { Box, Grid, Typography, Button } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: 'flex',\r\n\t\t'& div.MuiDataGrid-cell': {\r\n\t\t\tcolor: 'white',\r\n\t\t},\r\n\t\t'& div.MuiDataGrid-colCellTitle': {\r\n\t\t\tcolor: 'black',\r\n\t\t},\r\n\t\t'& div.MuiToolbar-root': {\r\n\t\t\tcolor: 'white',\r\n\t\t},\r\n\t\t'& div.MuiTablePagination-actions': {\r\n\t\t\tcolor: 'white',\r\n\t\t},\r\n\t\t'& div.MuiIconButton-label': {\r\n\t\t\tcolor: 'white',\r\n\t\t},\r\n\t\t'& div.MuiDataGrid-colCellWrapper': {\r\n\t\t\tbackgroundColor: 'white',\r\n\t\t},\r\n  },\r\n  boxAdmin: {},\r\n}));\r\n\r\nconst columns = [\r\n\t{ field: 'id', headerName: 'ID', width: 250, resizable: true },\r\n\t{\r\n\t\tfield: 'name',\r\n\t\theaderName: 'Name',\r\n\t\twidth: 200,\r\n\t\tresizable: true,\r\n\t},\r\n\t{\r\n\t\tfield: 'description',\r\n\t\theaderName: 'Description',\r\n\t\twidth: 200,\r\n\t\tresizable: true,\r\n\t},\r\n\t{\r\n\t\tfield: 'amount',\r\n\t\theaderName: 'Amount',\r\n\t\twidth: 200,\r\n  },\r\n  {\r\n\t\tfield: 'unitType',\r\n\t\theaderName: 'Unit Type',\r\n\t\tresizable: true,\r\n\t\twidth: 200,\r\n\r\n\t},\r\n];\r\n\r\nconst rows = [{id: '1', name:'Sara', description:'แก้ปวด', amount: 500, unitType: 'ขวด'}, {id: '2', name:'Para', description:'แก้ปวด', amount: 500, unitType: 'ขวด'}]\r\n\r\nconst Medicinepage = () => {\r\n  const classes = useStyles();\r\n  let navigate = useNavigate();\r\n  return (\r\n    <React.Fragment className={classes.root}>\r\n      <Box className={classes.boxAdmin}>\r\n      <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n\t\t\t\t\t<Grid item xs={12} md={6}>\r\n\t\t\t\t\t\t<Typography variant=\"h5\" paragraph style={{ fontWeight: 'bolder' }}>\r\n\t\t\t\t\t\t\tDrug Storehouse\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} md={6} align=\"right\">\r\n\t\t\t\t\t\t<Box style={{ alignItems: 'center', justifyContent: 'flex-end' }}>\r\n\t\t\t\t\t\t\t<Link to=\"/app/medicine/drugstore/create\" style={{ textDecoration: 'none' }}>\r\n\t\t\t\t\t\t\t\t<Button startIcon={<AddIcon />} variant=\"contained\" color=\"primary\">\r\n\t\t\t\t\t\t\t\t\tCreate new medicine\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid container spacing={0} alignItems=\"center\" justify=\"center\" style={{ marginTop: 20 }}>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<div style={{ height: 500, width: '100%', backgroundColor: 'white' }}>\r\n\t\t\t\t\t\t\t<DataGrid\r\n\t\t\t\t\t\t\t\trows={rows}\r\n\t\t\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\t\t\tpagination\r\n\t\t\t\t\t\t\t\tpageSize={10}\r\n\t\t\t\t\t\t\t\t// onRowClick={(row) => navigate(`/app/patients/detail/${row.row.id}`)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Medicinepage;\r\n","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Medicine\\Prescription\\Prescription.js",[],"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Create.js",[],"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Medicine-form.js",["188","189","190","191","192","193","194","195","196","197","198"],"import React, { useCallback, useEffect, useState } from 'react'\nimport {\n    Grid,\n    Typography,\n    MenuItem,\n    RadioGroup,\n    FormControlLabel,\n    FormControl,\n    FormLabel,\n    Button,\n    Chip,\n    NativeSelect,\n    InputBase,\n    InputLabel,\n} from '@material-ui/core';\nimport { Form, Field } from 'react-final-form';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { TextField, Radio, Select } from 'final-form-material-ui';\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            width: '25ch',\n        },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        maxWidth: 300,\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: 2,\n    },\n}));\n\nconst BootstrapInput = withStyles((theme) => ({\n    root: {\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    input: {\n        borderRadius: 4,\n        position: 'relative',\n        backgroundColor: theme.palette.background.paper,\n        border: '1px solid #ced4da',\n        fontSize: 16,\n        width: \"100%\",\n        padding: '10px 26px 10px 12px',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n        '&:focus': {\n            borderRadius: 4,\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n}))(InputBase);\n\n\nconst normalizeAmount = value => {\n    if(!value) return value;\n    const onlyNums = value.replace(/[^\\d]/g, \"\");\n    return onlyNums\n}\n\nconst MedicineForm = (props) => {\n\n    const classes = useStyles();\n    let navigate = useNavigate();\n    const [metType, setMedType] = useState('')\n    const handleChange = (event) => {\n        setMedType(event.target.value);\n    };\n    \n    const onSubmitCreate = (value) => {\n        console.log(value)\n    }\n\n    const onSubmit = onSubmitCreate\n    return (\n        <React.Fragment>\n            <Form\n                onSubmit={onSubmit}\n                render={({ handleSubmit, submitting }) => (\n                    <form className={classes.root} noValidate autoComplete=\"true\" onSubmit={handleSubmit}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={6}>\n                                <Field\n                                    fullWidth\n                                    required\n                                    name=\"name\"\n                                    component={TextField}\n                                    type=\"text\"\n                                    label=\"ชื่อ\"\n                                    variant=\"outlined\"\n                                    style={{ width: '100%' }}\n                                />\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Field\n                                    fullWidth\n                                    required\n                                    name=\"description\"\n                                    component={TextField}\n                                    type=\"text\"\n                                    label=\"คำอธิบายยา\"\n                                    variant=\"outlined\"\n                                    style={{ width: '100%' }}\n                                />\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Field\n                                    fullWidth\n                                    required\n                                    name=\"amount\"\n                                    component={TextField}\n                                    type=\"text\"\n                                    label=\"จำนวน\"\n                                    variant=\"outlined\"\n                                    style={{ width: '100%' }}\n                                    parse={normalizeAmount}\n                                />\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Field\n                                    fullWidth\n                                    required\n                                    name=\"unitType\"\n                                    component={TextField}\n                                    type=\"text\"\n                                    label=\"ประเภทหน่วย\"\n                                    variant=\"outlined\"\n                                    style={{ width: '100%' }}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <FormControl style={{ width: \"100%\" }}>\n                                    <InputLabel id=\"demo-mutiple-name-label\">ประเภท</InputLabel>\n                                    <NativeSelect\n                                        id=\"demo-customized-select-native\"\n                                        input={<BootstrapInput />}\n                                        value={metType}\n                                        onChange={handleChange}\n                                        required={true}\n                                    >\n                                        <option aria-label=\"None\" value=\" \" />\n                                        <option value={'MEDICINE'}>ยา</option>\n                                        <option value={'SUPPLY'}>เวชภัณฑ์</option>\n                                    </NativeSelect>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12} style={{ marginTop: 16, textAlign: 'center', width: '100%' }}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    type=\"submit\"\n                                    disabled={submitting}\n                                >\n                                    บันทึกข้อมูล\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </form>\n                )\n                }\n            />\n        </React.Fragment >\n    )\n}\nexport default MedicineForm","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Treatment\\Create.js",["199"],"import React from 'react';\r\nimport { Box, Grid, Typography, Button } from '@material-ui/core';\r\nimport { InfoCard } from '@mystiny/ui';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport { useNavigate, useParams} from 'react-router-dom';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { useQuery } from '@apollo/client';\r\nimport {GET_PATIENT} from '../Patients/GraphQL/Querie'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    create: {\r\n      backgroundColor: green[500],\r\n      '&:hover': {\r\n        backgroundColor: green[700],\r\n      },\r\n    },\r\n  }));\r\n\r\n\r\nconst CreateTreatmentPage = () => {\r\n    const navigate = useNavigate();\r\n    const classes = useStyles();\r\n    let { id } = useParams();\r\n    const { loading, error, data } = useQuery(GET_PATIENT, {\r\n        variables: {\r\n            id\r\n        },\r\n        fetchPolicy: 'cache-and-network',\r\n    });\r\n\r\n    if (loading) return \"...Loading\";\r\n    if (error) return `Error! ${error}`;\r\n    return (\r\n        <React.Fragment>\r\n            <Box >\r\n                <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n                    <Grid item xs={6}>\r\n                        <Typography paragraph style={{ fontWeight: 'bold', fontSize: '2em' }} >\r\n                            <DescriptionIcon color=\"primary\" fontSize=\"small\" /> สร้างประวัติการรักษา\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6} align='right'>\r\n                        <Box style={{ alignItems: 'center', justifyContent: 'flex-end' }}>\r\n\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <InfoCard title={\r\n                            <React.Fragment>\r\n                                <Typography paragraph style={{ fontSize: '1em'}} >\r\n                                   ข้อมูลผู้ป่วย\r\n                                    <Button variant=\"contained\" color=\"secondary\" onClick={() => navigate(-1)} style={{marginLeft: 20}} className={classes.create}>\r\n                                        ดูข้อมูลเพิ่มเติม\r\n                                    </Button>\r\n                                </Typography>\r\n                            </React.Fragment>\r\n                        }>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={6}>\r\n\r\n                                </Grid>\r\n                            </Grid>\r\n                        </InfoCard>\r\n                    </Grid>\r\n                    {/* <Grid item xs={12}>\r\n                        <InfoCard title='ประวัติการรักษา' actionTopRight={\r\n                            <Button variant=\"contained\" color=\"secondary\" onClick={() => navigate(-1)}>\r\n                                ย้อนกลับ\r\n                            </Button>\r\n                        }>\r\n                        </InfoCard>\r\n                    </Grid> */}\r\n                </Grid>\r\n            </Box>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CreateTreatmentPage","C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Treatment\\Treatment-form.js",["200","201","202","203","204","205","206"],"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Treatment\\GraphQL\\Mutation.js",[],"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Treatment\\Detail.js",["207","208"],"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Treatment\\GraphQL\\Querie.js",[],"C:\\Users\\ASUS\\Desktop\\CTHS_TOEI\\src\\pages\\Medicine\\DrugStore\\Detail.js",["209"],{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":48,"column":11,"nodeType":"216","endLine":48,"endColumn":74},{"ruleId":"214","severity":1,"message":"215","line":70,"column":13,"nodeType":"216","endLine":70,"endColumn":76},{"ruleId":"217","severity":1,"message":"218","line":1,"column":41,"nodeType":"219","messageId":"220","endLine":1,"endColumn":49},{"ruleId":"217","severity":1,"message":"221","line":4,"column":5,"nodeType":"219","messageId":"220","endLine":4,"endColumn":15},{"ruleId":"217","severity":1,"message":"222","line":6,"column":5,"nodeType":"219","messageId":"220","endLine":6,"endColumn":15},{"ruleId":"217","severity":1,"message":"223","line":7,"column":5,"nodeType":"219","messageId":"220","endLine":7,"endColumn":21},{"ruleId":"217","severity":1,"message":"224","line":9,"column":5,"nodeType":"219","messageId":"220","endLine":9,"endColumn":14},{"ruleId":"217","severity":1,"message":"225","line":18,"column":21,"nodeType":"219","messageId":"220","endLine":18,"endColumn":26},{"ruleId":"217","severity":1,"message":"226","line":18,"column":28,"nodeType":"219","messageId":"220","endLine":18,"endColumn":34},{"ruleId":"227","severity":1,"message":"228","line":107,"column":8,"nodeType":"229","endLine":107,"endColumn":10,"suggestions":"230"},{"ruleId":"227","severity":1,"message":"231","line":111,"column":8,"nodeType":"229","endLine":111,"endColumn":10,"suggestions":"232"},{"ruleId":"227","severity":1,"message":"233","line":142,"column":9,"nodeType":"229","endLine":142,"endColumn":29,"suggestions":"234"},{"ruleId":"227","severity":1,"message":"235","line":175,"column":9,"nodeType":"229","endLine":175,"endColumn":60,"suggestions":"236"},{"ruleId":"227","severity":1,"message":"237","line":109,"column":8,"nodeType":"229","endLine":109,"endColumn":10,"suggestions":"238"},{"ruleId":"227","severity":1,"message":"239","line":137,"column":9,"nodeType":"229","endLine":137,"endColumn":26,"suggestions":"240"},{"ruleId":"227","severity":1,"message":"241","line":165,"column":9,"nodeType":"229","endLine":165,"endColumn":29,"suggestions":"242"},{"ruleId":"217","severity":1,"message":"243","line":2,"column":47,"nodeType":"219","messageId":"220","endLine":2,"endColumn":57},{"ruleId":"217","severity":1,"message":"218","line":1,"column":28,"nodeType":"219","messageId":"220","endLine":1,"endColumn":36},{"ruleId":"227","severity":1,"message":"244","line":72,"column":5,"nodeType":"229","endLine":72,"endColumn":24,"suggestions":"245"},{"ruleId":"246","severity":1,"message":"247","line":17,"column":1,"nodeType":"248","endLine":36,"endColumn":3},{"ruleId":"217","severity":1,"message":"249","line":65,"column":7,"nodeType":"219","messageId":"220","endLine":65,"endColumn":15},{"ruleId":"217","severity":1,"message":"250","line":1,"column":17,"nodeType":"219","messageId":"220","endLine":1,"endColumn":28},{"ruleId":"217","severity":1,"message":"251","line":1,"column":30,"nodeType":"219","messageId":"220","endLine":1,"endColumn":39},{"ruleId":"217","severity":1,"message":"221","line":4,"column":5,"nodeType":"219","messageId":"220","endLine":4,"endColumn":15},{"ruleId":"217","severity":1,"message":"252","line":5,"column":5,"nodeType":"219","messageId":"220","endLine":5,"endColumn":13},{"ruleId":"217","severity":1,"message":"222","line":6,"column":5,"nodeType":"219","messageId":"220","endLine":6,"endColumn":15},{"ruleId":"217","severity":1,"message":"223","line":7,"column":5,"nodeType":"219","messageId":"220","endLine":7,"endColumn":21},{"ruleId":"217","severity":1,"message":"224","line":9,"column":5,"nodeType":"219","messageId":"220","endLine":9,"endColumn":14},{"ruleId":"217","severity":1,"message":"253","line":11,"column":5,"nodeType":"219","messageId":"220","endLine":11,"endColumn":9},{"ruleId":"217","severity":1,"message":"225","line":18,"column":21,"nodeType":"219","messageId":"220","endLine":18,"endColumn":26},{"ruleId":"217","severity":1,"message":"226","line":18,"column":28,"nodeType":"219","messageId":"220","endLine":18,"endColumn":34},{"ruleId":"217","severity":1,"message":"249","line":87,"column":9,"nodeType":"219","messageId":"220","endLine":87,"endColumn":17},{"ruleId":"217","severity":1,"message":"254","line":6,"column":22,"nodeType":"219","messageId":"220","endLine":6,"endColumn":32},{"ruleId":"217","severity":1,"message":"251","line":1,"column":30,"nodeType":"219","messageId":"220","endLine":1,"endColumn":39},{"ruleId":"217","severity":1,"message":"255","line":6,"column":5,"nodeType":"219","messageId":"220","endLine":6,"endColumn":14},{"ruleId":"217","severity":1,"message":"254","line":9,"column":22,"nodeType":"219","messageId":"220","endLine":9,"endColumn":32},{"ruleId":"217","severity":1,"message":"256","line":14,"column":10,"nodeType":"219","messageId":"220","endLine":14,"endColumn":21},{"ruleId":"217","severity":1,"message":"257","line":96,"column":12,"nodeType":"219","messageId":"220","endLine":96,"endColumn":19},{"ruleId":"217","severity":1,"message":"258","line":96,"column":21,"nodeType":"219","messageId":"220","endLine":96,"endColumn":31},{"ruleId":"227","severity":1,"message":"259","line":125,"column":9,"nodeType":"229","endLine":125,"endColumn":23,"suggestions":"260"},{"ruleId":"217","severity":1,"message":"254","line":6,"column":22,"nodeType":"219","messageId":"220","endLine":6,"endColumn":32},{"ruleId":"217","severity":1,"message":"261","line":8,"column":20,"nodeType":"219","messageId":"220","endLine":8,"endColumn":25},{"ruleId":"217","severity":1,"message":"262","line":21,"column":8,"nodeType":"219","messageId":"220","endLine":21,"endColumn":15},"no-native-reassign",["263"],"no-negated-in-lhs",["264"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'RadioGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'FormLabel' is defined but never used.","'Radio' is defined but never used.","'Select' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'defaultdata.patientById.bloodType', 'defaultdata.patientById.nationality', 'defaultdata.patientById.race', 'defaultdata.patientById.status', and 'mode'. Either include them or remove the dependency array.","ArrayExpression",["265"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["266"],"React Hook useCallback has missing dependencies: 'navigate', 'selectNationality', 'selectRace', and 'status'. Either include them or remove the dependency array.",["267"],"React Hook useCallback has missing dependencies: 'defaultdata.patientById._id', 'navigate', 'status', and 'updatePatient'. Either include them or remove the dependency array.",["268"],"React Hook useEffect has missing dependencies: 'defaultdata.userById' and 'mode'. Either include them or remove the dependency array.",["269"],"React Hook useCallback has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["270"],"React Hook useCallback has missing dependencies: 'defaultdata.userById._id' and 'navigate'. Either include them or remove the dependency array.",["271"],"'IconButton' is defined but never used.","React Hook useEffect has missing dependencies: 'onMobileClose' and 'openMobile'. Either include them or remove the dependency array. If 'onMobileClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["272"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'navigate' is assigned a value but never used.","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'MenuItem' is defined but never used.","'Chip' is defined but never used.","'withStyles' is defined but never used.","'InputBase' is defined but never used.","'GET_PATIENT' is defined but never used.","'metType' is assigned a value but never used.","'setMedType' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'id' and 'navigate'. Either include them or remove the dependency array.",["273"],"'Query' is defined but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},"Update the dependencies array to be: [defaultdata.patientById.bloodType, defaultdata.patientById.nationality, defaultdata.patientById.race, defaultdata.patientById.status, mode]",{"range":"292","text":"293"},"Update the dependencies array to be: [data]",{"range":"294","text":"295"},"Update the dependencies array to be: [addPatient, navigate, select, selectNationality, selectRace, status]",{"range":"296","text":"297"},"Update the dependencies array to be: [defaultdata.patientById._id, navigate, select, selectNationality, selectRace, status, updatePatient]",{"range":"298","text":"299"},"Update the dependencies array to be: [defaultdata.userById, mode]",{"range":"300","text":"301"},"Update the dependencies array to be: [addUser, navigate, select]",{"range":"302","text":"303"},"Update the dependencies array to be: [defaultdata.userById._id, select, updateUser, navigate]",{"range":"304","text":"305"},"Update the dependencies array to be: [location.pathname, onMobileClose, openMobile]",{"range":"306","text":"307"},"Update the dependencies array to be: [addTreatment, id, navigate]",{"range":"308","text":"309"},[3236,3238],"[defaultdata.patientById.bloodType, defaultdata.patientById.nationality, defaultdata.patientById.race, defaultdata.patientById.status, mode]",[3354,3356],"[data]",[4530,4550],"[addPatient, navigate, select, selectNationality, selectRace, status]",[5788,5839],"[defaultdata.patientById._id, navigate, select, selectNationality, selectRace, status, updatePatient]",[2926,2928],"[defaultdata.userById, mode]",[3883,3900],"[addUser, navigate, select]",[4879,4899],"[defaultdata.userById._id, select, updateUser, navigate]",[1832,1851],"[location.pathname, onMobileClose, openMobile]",[3603,3617],"[addTreatment, id, navigate]"]